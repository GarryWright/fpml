{
  "atlasVersion":"2.0.0-SNAPSHOT",
  "namespace":"org.fpml.confirmation",
  "name":"Confirmation",
  "version":"5.4",
  "style":"message",
  "organization":{
    "name":"FPML",
    "webSiteUrl":"http://fpml.org"
  },
  "contributors":[{
    "name":"FPML"
  }],
  "license":{
    "name":"FpML License v2.0",
    "description":"FpML License v2.0",
    "copyrightNotice":"(C) Copyright 2013 FpML",
    "webUrl":"http://www.fpml.org/license/license.html"
  },
  "nodes":[{
    "name":"SignatureType",
    "relationships":["SignedInfo->SignedInfoType[1..1]","SignatureValue->SignatureValueType[1..1]","KeyInfo->KeyInfoType[0..1]","Object->ObjectType[0..]"]
  },{
    "name":"periodMultiplier",
    "extend":"decimal"
  },{
    "name":"Documentation",
    "documentation":"An entity for defining the definitions that govern the document and should include the year and type of definitions referenced, along with any relevant documentation (such as master agreement) and the date it was signed.",
    "relationships":["masterAgreement->MasterAgreement[0..1]","masterConfirmation->MasterConfirmation[1..1]","brokerConfirmation->BrokerConfirmation[1..1]","contractualDefinitions->ContractualDefinitions[0..]","contractualTermsSupplement->ContractualTermsSupplement[0..]","contractualMatrix->ContractualMatrix[0..]","creditSupportAgreement->CreditSupportAgreement[0..1]","attachment->Resource[0..]"]
  },{
    "name":"CommodityPricingDates",
    "documentation":"The dates on which prices are observed for the underlyer.",
    "relationships":["calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]","lag->Lag[0..1]","dayType[1..1]","dayDistribution->CommodityFrequencyType[1..1]","dayCount[0..1]","dayOfWeek[1..7]","dayNumber[0..1]","businessCalendar->CommodityBusinessCalendar[0..1]","calendarSource[0..1]","settlementPeriods->SettlementPeriods[1..]","settlementPeriodsReference->SettlementPeriodsReference[1..]","pricingDates->AdjustableDates[1..]"]
  },{
    "name":"modifiedEquityDelivery",
    "extend":"anySimpleType"
  },{
    "name":"BusinessUnitReference",
    "documentation":"Reference to an organizational unit.",
    "extend":"Reference"
  },{
    "name":"nationalisationOrInsolvency",
    "documentation":"Defines the consequences of nationalisation, insolvency and delisting events relating to the underlying.",
    "characteristics":{
      "enumeration":[{
        "value":"NegotiatedCloseout"
      },{
        "value":"CancellationAndPayment"
      }]
    },
    "extend":"token"
  },{
    "name":"returnType",
    "documentation":"The type of return associated with the equity swap.",
    "characteristics":{
      "enumeration":[{
        "value":"Dividend"
      },{
        "value":"Price"
      },{
        "value":"Total"
      }]
    },
    "extend":"token"
  },{
    "name":"PricingStructure",
    "documentation":"An abstract pricing structure base type. Used as a base for structures such as yield curves and volatility matrices.",
    "relationships":["name[0..1]","currency->Currency[0..1]"]
  },{
    "name":"allocationException"
  },{
    "name":"quotationRateType",
    "documentation":"The specification of the type of quotation rate to be obtained from each cash settlement reference bank.",
    "characteristics":{
      "enumeration":[{
        "value":"Bid"
      },{
        "value":"Ask"
      },{
        "value":"Mid"
      },{
        "value":"ExercisingPartyPays"
      }]
    },
    "extend":"token"
  },{
    "name":"RequestTradeReferenceInformationUpdate",
    "documentation":"Defines the structure for a message requesting information updates to a trade. The trade reference information should contain at least one trade identifier that the recipient is aware of.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","tradeReferenceInformation->TradeReferenceInformation[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"Notional",
    "documentation":"An type defining the notional amount or notional amount schedule associated with a swap stream. The notional schedule will be captured explicitly, specifying the dates that the notional changes and the outstanding notional amount that applies from that date. A parametric representation of the rules defining the notional step schedule can optionally be included.",
    "relationships":["notionalStepSchedule->NonNegativeAmountSchedule[1..1]","notionalStepParameters->NotionalStepRule[0..1]"]
  },{
    "name":"X509SubjectName",
    "extend":"anySimpleType"
  },{
    "name":"CommodityHub",
    "documentation":"A type defining a hub or other reference for a physically settled commodity trade.",
    "relationships":["partyReference->PartyReference[1..1]","accountReference->AccountReference[0..1]","hubCode->CommodityHubCode[1..1]"]
  },{
    "name":"ElectricityTransmissionContingencyType",
    "documentation":"The type of transmission contingency, i.e. what portion of the transmission the delivery obligations are applicable.",
    "extend":"Scheme"
  },{
    "name":"FrequencyTypeEnum",
    "documentation":"The schedule frequency type",
    "characteristics":{
      "enumeration":[{
        "value":"Day"
      },{
        "value":"Business"
      }]
    },
    "extend":"token"
  },{
    "name":"Asset",
    "documentation":"Abstract base class for all underlying assets."
  },{
    "name":"creditEventNotificationRetracted"
  },{
    "name":"consentAcknowledgement"
  },{
    "name":"CompoundingMethodEnum",
    "documentation":"The compounding calculation method",
    "characteristics":{
      "enumeration":[{
        "value":"Flat"
      },{
        "value":"None"
      },{
        "value":"Straight"
      },{
        "value":"SpreadExclusive"
      }]
    },
    "extend":"token"
  },{
    "name":"X509CRL",
    "extend":"anySimpleType"
  },{
    "name":"BondOption",
    "documentation":"A Bond Option",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","premium->Premium[0..1]","exercise->Exercise[1..1]","exerciseProcedure->ExerciseProcedure[1..1]","feature->OptionFeature[0..1]","notionalReference->NotionalAmountReference[1..1]","notionalAmount->Money[1..1]","optionEntitlement[1..1]","entitlementCurrency->Currency[0..1]","numberOfOptions[0..1]","settlementType[0..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementAmount->Money[1..1]","settlementCurrency->Currency[1..1]","strike->BondOptionStrike[1..1]","bond->Bond[1..1]","convertibleBond->ConvertibleBond[1..1]"],
    "extend":"OptionBaseExtended"
  },{
    "name":"maximumStockLoanRate",
    "documentation":"A type defining a percentage specified as decimal from 0 to 1. A percentage of 5% would be represented as 0.05.",
    "extend":"decimal"
  },{
    "name":"decimal",
    "extend":"anySimpleType"
  },{
    "name":"SequencedDisruptionFallback",
    "documentation":"A Disruption Fallback with the sequence in which it should be applied relative to other Disruption Fallbacks.",
    "relationships":["fallback->DisruptionFallback[1..1]","sequence[1..1]"]
  },{
    "name":"Step",
    "documentation":"A type defining a step date and step value pair. This step definitions are used to define varying rate or amount schedules, e.g. a notional amortization or a step-up coupon schedule.",
    "relationships":["stepDate[1..1]","stepValue[1..1]"],
    "extend":"StepBase"
  },{
    "name":"CreditSeniority",
    "documentation":"The repayment precedence of a debt instrument.",
    "extend":"Scheme"
  },{
    "name":"ReportingCurrencyType",
    "documentation":"A scheme identifying the type of currency that was used to report the value of an asset. For example, this could contain values like SettlementCurrency, QuoteCurrency, UnitCurrency, etc.",
    "extend":"Scheme"
  },{
    "name":"ElectricityProductTypeEnum",
    "documentation":"The type of electricity product.",
    "characteristics":{
      "enumeration":[{
        "value":"Electricity"
      }]
    },
    "extend":"token"
  },{
    "name":"observationNumber",
    "extend":"nonNegativeInteger"
  },{
    "name":"FeaturePayment",
    "documentation":"Payment made following trigger occurence.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","levelPercentage[1..1]","amount[1..1]","time[0..1]","currency->Currency[0..1]","featurePaymentDate->AdjustableOrRelativeDate[0..1]"],
    "extend":"PaymentBase"
  },{
    "name":"SettlementPriceDefaultElection",
    "documentation":"Coding scheme that specifies the settlement price default election.",
    "extend":"Scheme"
  },{
    "name":"futureContractReference",
    "extend":"anySimpleType"
  },{
    "name":"postalCode",
    "extend":"anySimpleType"
  },{
    "name":"DisruptionFallback",
    "documentation":"A Disruption Fallback.",
    "extend":"Scheme"
  },{
    "name":"PartyRelationship",
    "relationships":["partyReference->PartyReference[1..1]","accountReference->AccountReference[0..1]","role->PartyRole[1..1]","type->PartyRoleType[0..1]","effectiveDate[0..1]","terminationDate[0..1]","documentation->PartyRelationshipDocumentation[0..1]"]
  },{
    "name":"ExchangeTradedCalculatedPrice",
    "documentation":"Abstract base class for all exchange traded financial products with a price which is calculated from exchange traded constituents.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","relatedExchangeId->ExchangeId[0..]","optionsExchangeId->ExchangeId[0..]","specifiedExchangeId->ExchangeId[0..]","constituentExchangeId->ExchangeId[0..]"],
    "extend":"ExchangeTraded"
  },{
    "name":"MatrixSource",
    "extend":"Scheme"
  },{
    "name":"worldscaleRateStep",
    "extend":"anySimpleType"
  },{
    "name":"CommodityPhysicalEuropeanExercise",
    "documentation":"The parameters for defining the expiration date(s) and time(s) for a European style option.",
    "relationships":["expirationDate->AdjustableOrRelativeDate[1..1]","expirationDates->AdjustableRelativeOrPeriodicDates2[1..1]","relativeExpirationDates->CommodityRelativeExpirationDates[1..1]","expirationTime->PrevailingTime[0..1]"],
    "extend":"Exercise"
  },{
    "name":"observationStartDate",
    "extend":"anySimpleType"
  },{
    "name":"changeInNumberOfUnits",
    "extend":"anySimpleType"
  },{
    "name":"SettlementRateOption",
    "documentation":"A type defining the settlement rate options through a scheme reflecting the terms of the Annex A to the 1998 FX and Currency Option Definitions.",
    "extend":"Scheme"
  },{
    "name":"PositiveMoney",
    "documentation":"A type defining a positive money amount",
    "relationships":["currency->Currency[1..1]","amount[1..1]"],
    "extend":"MoneyBase"
  },{
    "name":"DividendPeriodPayment",
    "documentation":"A time bounded dividend period, with fixed strike and a dividend payment date per period.",
    "relationships":["unadjustedStartDate->IdentifiedDate[1..1]","unadjustedEndDate->IdentifiedDate[1..1]","dateAdjustments->BusinessDayAdjustments[1..1]","underlyerReference->AssetReference[0..1]","fixedStrike[1..1]","paymentDate->AdjustableOrRelativeDate[1..1]","valuationDate->AdjustableOrRelativeDate[0..1]"],
    "extend":"DividendPeriod"
  },{
    "name":"SettledEntityMatrix",
    "relationships":["matrixSource->MatrixSource[1..1]","publicationDate[0..1]"]
  },{
    "name":"BullionTypeEnum",
    "documentation":"Defines which type of bullion is applicable for a Bullion Transaction.",
    "characteristics":{
      "enumeration":[{
        "value":"Gold"
      },{
        "value":"Palladium"
      },{
        "value":"Platinum"
      },{
        "value":"Silver"
      },{
        "value":"Rhodium"
      },{
        "value":"RhodiumSponge"
      },{
        "value":"Iridium"
      },{
        "value":"Ruthenium"
      },{
        "value":"Osmium"
      }]
    },
    "extend":"token"
  },{
    "name":"PartyTradeIdentifiers",
    "documentation":"A type containing multiple partyTradeIdentifier.",
    "relationships":["partyTradeIdentifier->PartyTradeIdentifier[1..]"]
  },{
    "name":"CommoditySwap",
    "documentation":"Commodity Swap.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","effectiveDate->AdjustableOrRelativeDate[1..1]","terminationDate->AdjustableOrRelativeDate[1..1]","settlementCurrency->IdentifiedCurrency[1..1]","commoditySwapLeg->CommoditySwapLeg[1..]","weatherLeg->WeatherLeg[2..2]","commonPricing[0..1]","marketDisruption->CommodityMarketDisruption[0..1]","settlementDisruption[0..1]","rounding->Rounding[0..1]"],
    "extend":"Product"
  },{
    "name":"touchCondition",
    "documentation":"The specification of, for American-style digitals, whether the trigger level must be touched or not touched.",
    "characteristics":{
      "enumeration":[{
        "value":"Touch"
      },{
        "value":"Notouch"
      }]
    },
    "extend":"token"
  },{
    "name":"NationalisationOrInsolvencyOrDelistingEventEnum",
    "documentation":"Defines the consequences of nationalisation, insolvency and delisting events relating to the underlying.",
    "characteristics":{
      "enumeration":[{
        "value":"NegotiatedCloseout"
      },{
        "value":"CancellationAndPayment"
      }]
    },
    "extend":"token"
  },{
    "name":"ForecastRateIndex",
    "documentation":"A type defining a rate index.",
    "relationships":["floatingRateIndex->FloatingRateIndex[1..1]","indexTenor->Period[1..1]"]
  },{
    "name":"ExtraordinaryEvents",
    "documentation":"Where the underlying is shares, defines market events affecting the issuer of those shares that may require the terms of the transaction to be adjusted.",
    "relationships":["mergerEvents->EquityCorporateEvents[0..1]","tenderOffer[0..1]","tenderOfferEvents->EquityCorporateEvents[0..1]","compositionOfCombinedConsideration[0..1]","indexAdjustmentEvents->IndexAdjustmentEvents[0..1]","additionalDisruptionEvents->AdditionalDisruptionEvents[1..1]","failureToDeliver[1..1]","representations->Representations[0..1]","nationalisationOrInsolvency[0..1]","delisting[0..1]","relatedExchangeId->ExchangeId[0..]","optionsExchangeId->ExchangeId[0..]","specifiedExchangeId->ExchangeId[0..]"]
  },{
    "name":"confirmationDisputed"
  },{
    "name":"Lien",
    "documentation":"A type describing the liens associated with a loan facility.",
    "extend":"Scheme"
  },{
    "name":"CalculationPeriodsReference",
    "documentation":"A pointer style reference to a calculation periods schedule defined elsewhere - note that this schedule consists of a series of actual dates in a calculationPeriods container.",
    "extend":"Reference"
  },{
    "name":"equityOptionTransactionSupplement"
  },{
    "name":"PhysicalSettlement",
    "documentation":"A structure that describes how an option settles into a physical trade.",
    "relationships":["resultingTradeIdentifier->PartyTradeIdentifier[1..1]","resultingTrade->Trade[1..1]","product->Product[1..1]"]
  },{
    "name":"CommodityNotionalQuantitySchedule",
    "documentation":"The Notional Quantity per Calculation Period. There must be a Notional Quantity step specified for each Calculation Period, regardless of whether the Notional Quantity changes or remains the same between periods.",
    "relationships":["notionalStep->CommodityNotionalQuantity[1..]","settlementPeriodsNotionalQuantitySchedule->CommoditySettlementPeriodsNotionalQuantitySchedule[1..]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]"]
  },{
    "name":"BusinessCentersReference",
    "documentation":"A pointer style reference to a set of business day calendar defined elsewhere in the document.",
    "extend":"Reference"
  },{
    "name":"unadjustedFirstDate",
    "extend":"anySimpleType"
  },{
    "name":"creditDefaultSwap"
  },{
    "name":"PaymentRule",
    "documentation":"The abstract base type from which all calculation rules of the independent amount must be derived."
  },{
    "name":"GasDeliveryPoint",
    "documentation":"A scheme identifying the types of the Delivery Point for a physically settled gas trade.",
    "extend":"Scheme"
  },{
    "name":"updatedDateTime",
    "extend":"anySimpleType"
  },{
    "name":"PositionHistory",
    "documentation":"A list of events that have affected a position.",
    "relationships":["originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]"]
  },{
    "name":"CommodityPremium",
    "documentation":"The commodity option premium payable by the buyer to the seller.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentDate->AdjustableOrRelativeDate[1..1]","paymentAmount->NonNegativeMoney[1..1]","premiumPerUnit->NonNegativeMoney[0..1]"],
    "extend":"NonNegativePayment"
  },{
    "name":"bulletPayment"
  },{
    "name":"CalculationPeriodFrequency",
    "documentation":"A type defining the frequency at which calculation period end dates occur within the regular part of the calculation period schedule and thier roll date convention. In case the calculation frequency is of value T (term), the period is defined by the swap\\swapStream\\calculationPerioDates\\effectiveDate and the swap\\swapStream\\calculationPerioDates\\terminationDate.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","rollConvention[1..1]"],
    "extend":"Frequency"
  },{
    "name":"ExecutionAdvice",
    "documentation":"A message advising a third party that a trade execution has occurred.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","productType->ProductType[0..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","quote->BasicQuotation[1..]","paymentDetails->PaymentDetails[0..]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"EventsChoice",
    "relationships":["originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]"]
  },{
    "name":"CommodityPipelineCycle",
    "documentation":"The pipeline cycle during which the physical commodity will be delivered.",
    "extend":"Scheme"
  },{
    "name":"simpleFra"
  },{
    "name":"X509IssuerSerialType",
    "relationships":["X509IssuerName[1..1]","X509SerialNumber[1..1]"]
  },{
    "name":"returnLeg"
  },{
    "name":"CreditEventNotice",
    "relationships":["notifyingParty->NotifyingParty[1..1]","businessCenter->BusinessCenter[0..1]","publiclyAvailableInformation->PubliclyAvailableInformation[0..1]"]
  },{
    "name":"CommodityMetalProducer",
    "extend":"Scheme"
  },{
    "name":"ServiceProcessingStep",
    "documentation":"A type that can be used to describe what stage of processing a service is in. For example, Netting or Valuation.",
    "extend":"Scheme"
  },{
    "name":"initialPoints",
    "extend":"anySimpleType"
  },{
    "name":"LegalEntity",
    "documentation":"A type defining a legal entity.",
    "relationships":["entityName->EntityName[1..1]","entityId->EntityId[0..]","entityId->EntityId[1..]"]
  },{
    "name":"RSAKeyValue"
  },{
    "name":"date",
    "extend":"anySimpleType"
  },{
    "name":"impliedWritedown",
    "extend":"anySimpleType"
  },{
    "name":"DeterminationMethod",
    "documentation":"Coding scheme that specifies the method according to which an amount or a date is determined.",
    "extend":"Scheme"
  },{
    "name":"PartyId",
    "documentation":"The data type used for party identifiers.",
    "extend":"Scheme"
  },{
    "name":"SignatureProperty"
  },{
    "name":"DigestMethodType"
  },{
    "name":"DualCurrencyStrikePrice",
    "documentation":"A type that describes the rate of exchange at which the embedded option in a Dual Currency Deposit has been struck.",
    "relationships":["rate[1..1]","strikeQuoteBasis[1..1]"]
  },{
    "name":"shareForOther",
    "documentation":"Defines the consequences of extraordinary events relating to the underlying.",
    "characteristics":{
      "enumeration":[{
        "value":"AlternativeObligation"
      },{
        "value":"CancellationAndPayment"
      },{
        "value":"OptionsExchange"
      },{
        "value":"CalculationAgent"
      },{
        "value":"ModifiedCalculationAgent"
      },{
        "value":"PartialCancellationAndPayment"
      },{
        "value":"Component"
      }]
    },
    "extend":"token"
  },{
    "name":"fraDiscounting",
    "documentation":"The method of FRA discounting, if any, that will apply.",
    "characteristics":{
      "enumeration":[{
        "value":"ISDA"
      },{
        "value":"AFMA"
      },{
        "value":"NONE"
      },{
        "value":"ISDAYield"
      }]
    },
    "extend":"token"
  },{
    "name":"observedRate",
    "extend":"anySimpleType"
  },{
    "name":"PremiumTypeEnum",
    "documentation":"Premium Type for Forward Start Equity Option",
    "characteristics":{
      "enumeration":[{
        "value":"PrePaid"
      },{
        "value":"PostPaid"
      },{
        "value":"Variable"
      },{
        "value":"Fixed"
      }]
    },
    "extend":"token"
  },{
    "name":"VarianceAmount",
    "documentation":"Calculation of a Variance Amount.",
    "relationships":["calculationDates->AdjustableRelativeOrPeriodicDates[0..1]","observationStartDate->AdjustableOrRelativeDate[0..1]","optionsExchangeDividends[0..1]","additionalDividends[0..1]","allDividends[0..1]","variance->Variance[1..1]"],
    "extend":"CalculatedAmount"
  },{
    "name":"FormulaTerm",
    "documentation":"A type defining a term of the formula. Its value is the product of the its coefficient and the referenced partial derivatives.",
    "relationships":["coefficient[1..1]","partialDerivativeReference->PricingParameterDerivativeReference[1..]"]
  },{
    "name":"minimumBoundaryPercent",
    "extend":"anySimpleType"
  },{
    "name":"DeclearReason",
    "documentation":"A type that describes why a trade was removed from clearing.",
    "extend":"Scheme"
  },{
    "name":"CommodityFx",
    "documentation":"A type defining the FX observations to be used to convert the observed Commodity Reference Price to the Settlement Currency. The rate source must be specified. Additionally, a time for the spot price to be observed on that source may be specified, or else an averaging schedule for trades priced using an average FX rate.",
    "relationships":["primaryRateSource->InformationSource[1..1]","secondaryRateSource->InformationSource[0..1]","fxType->CommodityFxType[0..1]","averagingMethod[0..1]","fixingTime->BusinessCenterTime[1..1]","fxObservationDates->AdjustableDates[1..]","dayType[1..1]","dayDistribution->CommodityFrequencyType[1..1]","dayCount[0..1]","dayOfWeek[1..7]","dayNumber[0..1]","lag->Lag[1..1]","lagReference->LagReference[1..1]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]","fixingTime->BusinessCenterTime[0..1]"]
  },{
    "name":"EquityOption",
    "documentation":"A type for defining equity options.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityEffectiveDate[0..1]","underlyer->Underlyer[1..1]","notional->NonNegativeMoney[0..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","feature->OptionFeatures[0..1]","fxFeature->FxFeature[0..1]","strategyFeature->StrategyFeature[0..1]","dividendConditions->DividendConditions[0..1]","methodOfAdjustment[1..1]","extraordinaryEvents->ExtraordinaryEvents[1..1]","strike->EquityStrike[0..1]","spotPrice[0..1]","numberOfOptions[0..1]","optionEntitlement[1..1]","equityPremium->EquityPremium[1..1]"],
    "extend":"EquityDerivativeLongFormBase"
  },{
    "name":"dividendPeriod",
    "documentation":"Defines the First Period or the Second Period, as specified in the 2002 ISDA Equity Derivatives Definitions.",
    "characteristics":{
      "enumeration":[{
        "value":"FirstPeriod"
      },{
        "value":"SecondPeriod"
      }]
    },
    "extend":"token"
  },{
    "name":"WeightedAveragingObservation",
    "documentation":"A single weighted averaging observation.",
    "relationships":["dateTime[1..1]","observationNumber[1..1]","weight[1..1]"]
  },{
    "name":"Valuation",
    "documentation":"A structure that holds a set of measures about an asset, including possibly their sensitivities.",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]"]
  },{
    "name":"collateralAllocationAcknowledgement"
  },{
    "name":"fullFirstCalculationPeriod",
    "extend":"anySimpleType"
  },{
    "name":"standardProduct"
  },{
    "name":"numberOfSections",
    "extend":"nonNegativeInteger"
  },{
    "name":"othReferenceEntityObligations",
    "extend":"anySimpleType"
  },{
    "name":"mid",
    "extend":"anySimpleType"
  },{
    "name":"notionalAdjustments",
    "documentation":"The conditions that govern the adjustment to the number of units of the equity swap.",
    "characteristics":{
      "enumeration":[{
        "value":"Execution"
      },{
        "value":"PortfolioRebalancing"
      },{
        "value":"Standard"
      }]
    },
    "extend":"token"
  },{
    "name":"lengthUnit",
    "documentation":"Used for indicating the length unit in the Resource type.",
    "characteristics":{
      "enumeration":[{
        "value":"Pages"
      },{
        "value":"TimeUnit"
      }]
    },
    "extend":"token"
  },{
    "name":"multipleExchangeIndexAnnexFallback",
    "extend":"anySimpleType"
  },{
    "name":"algorithm",
    "extend":"anySimpleType"
  },{
    "name":"boolean",
    "extend":"anySimpleType"
  },{
    "name":"tradeChangeAdviceAcknowledgement"
  },{
    "name":"calendarSource",
    "documentation":"Describes the date source calendar for a contract whereby the prices are from the underlying commodity price source (e.g. exchange traded futures contract), but the dates are based off another calendar (e.g. the listed option on the futures contract).",
    "characteristics":{
      "enumeration":[{
        "value":"ListedOption"
      },{
        "value":"Future"
      }]
    },
    "extend":"token"
  },{
    "name":"CollateralValueAllocationEnum",
    "documentation":"Denotes the method of collateral value allocation",
    "characteristics":{
      "enumeration":[{
        "value":"Buffer"
      },{
        "value":"Full"
      },{
        "value":"ExcessOverMargin"
      },{
        "value":"Margin"
      }]
    },
    "extend":"token"
  },{
    "name":"unadjustedDate",
    "extend":"anySimpleType"
  },{
    "name":"MetalDelivery",
    "documentation":"The physical delivery conditions for the transaction.",
    "relationships":["deliveryLocation->CommodityDeliveryPoint[1..1]","risk->CommodityDeliveryRisk[0..1]","totalQuantityTolerance[1..1]","periodQuantityTolerance[1..1]","title[1..1]"]
  },{
    "name":"FinalCalculationPeriodDateAdjustment",
    "documentation":"A type to define business date convention adjustment to final payment period per leg.",
    "relationships":["relevantUnderlyingDateReference->RelevantUnderlyingDateReference[1..1]","swapStreamReference->InterestRateStreamReference[1..1]","businessDayConvention[1..1]"]
  },{
    "name":"maximumNotionalAmount",
    "extend":"anySimpleType"
  },{
    "name":"dayCountYearFraction",
    "extend":"anySimpleType"
  },{
    "name":"MetalTitleEnum",
    "documentation":"Describes how and when title to the commodity transfers.",
    "characteristics":{
      "enumeration":[{
        "value":"TransfersWithRiskOfLoss"
      },{
        "value":"DoesNotTransferWithRiskOfLoss"
      }]
    },
    "extend":"token"
  },{
    "name":"ManualExercise",
    "documentation":"A type defining manual exercise, i.e. that the option buyer counterparty must give notice to the option seller of exercise.",
    "relationships":["exerciseNotice->ExerciseNotice[0..1]","fallbackExercise[0..1]"]
  },{
    "name":"BusinessDayConventionEnum",
    "documentation":"The convention for adjusting any relevant date if it would otherwise fall on a day that is not a valid business day. Note that FRN is included here as a type of business day convention although it does not strictly fall within ISDA's definition of a Business Day Convention and does not conform to the simple definition given above.",
    "characteristics":{
      "enumeration":[{
        "value":"FOLLOWING"
      },{
        "value":"FRN"
      },{
        "value":"MODFOLLOWING"
      },{
        "value":"PRECEDING"
      },{
        "value":"MODPRECEDING"
      },{
        "value":"NEAREST"
      },{
        "value":"NONE"
      },{
        "value":"NotApplicable"
      }]
    },
    "extend":"token"
  },{
    "name":"averageRateWeightingFactor",
    "extend":"anySimpleType"
  },{
    "name":"ElectricityDeliveryPoint",
    "documentation":"A scheme identifying the types of the Delivery Point for a physically settled electricity trade.",
    "extend":"Scheme"
  },{
    "name":"adjustablePaymentDate",
    "extend":"anySimpleType"
  },{
    "name":"price",
    "extend":"anySimpleType"
  },{
    "name":"maturityDate",
    "extend":"anySimpleType"
  },{
    "name":"maturity",
    "extend":"anySimpleType"
  },{
    "name":"closingLevel",
    "extend":"anySimpleType"
  },{
    "name":"ServiceStatus",
    "documentation":"A type that can be used to describe the availability or other state of a service, e.g. Available, Unavaialble.",
    "extend":"Scheme"
  },{
    "name":"startDate",
    "extend":"anySimpleType"
  },{
    "name":"ReferencePool",
    "documentation":"This type contains all the reference pool items to define the reference entity and reference obligation(s) in the basket.",
    "relationships":["referencePoolItem->ReferencePoolItem[1..]"]
  },{
    "name":"latestExerciseTimeType",
    "documentation":"Defines points in the day when equity option exercise and valuation can occur.",
    "characteristics":{
      "enumeration":[{
        "value":"Close"
      },{
        "value":"Open"
      },{
        "value":"OSP"
      },{
        "value":"SpecificTime"
      },{
        "value":"XETRA"
      },{
        "value":"DerivativesClose"
      },{
        "value":"AsSpecifiedInMasterConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"shareForShare",
    "documentation":"Defines the consequences of extraordinary events relating to the underlying.",
    "characteristics":{
      "enumeration":[{
        "value":"AlternativeObligation"
      },{
        "value":"CancellationAndPayment"
      },{
        "value":"OptionsExchange"
      },{
        "value":"CalculationAgent"
      },{
        "value":"ModifiedCalculationAgent"
      },{
        "value":"PartialCancellationAndPayment"
      },{
        "value":"Component"
      }]
    },
    "extend":"token"
  },{
    "name":"multipleHolderObligation",
    "extend":"anySimpleType"
  },{
    "name":"ReturnSwap",
    "documentation":"A type describing return swaps including return swaps (long form), total return swaps, and variance swaps.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","returnSwapLeg->DirectionalLeg[1..]","principalExchangeFeatures->PrincipalExchangeFeatures[0..1]","additionalPayment->ReturnSwapAdditionalPayment[0..]","earlyTermination->ReturnSwapEarlyTermination[0..]","extraordinaryEvents->ExtraordinaryEvents[0..1]"],
    "extend":"ReturnSwapBase"
  },{
    "name":"maturityExtension",
    "extend":"anySimpleType"
  },{
    "name":"ReferenceAmount",
    "documentation":"Specifies the reference amount using a scheme.",
    "extend":"Scheme"
  },{
    "name":"parameterValue",
    "extend":"anySimpleType"
  },{
    "name":"Frequency",
    "documentation":"A type defining the frequency at which calculation period end dates occur within the regular part of the calculation period schedule and thier roll date convention. In case the calculation frequency is of value T (term), the period is defined by the swap\\swapStream\\calculationPerioDates\\effectiveDate and the swap\\swapStream\\calculationPerioDates\\terminationDate.",
    "relationships":["periodMultiplier[1..1]","period[1..1]"]
  },{
    "name":"OilPipelineDelivery",
    "documentation":"The physical delivery conditions specific to an oil product delivered by pipeline.",
    "relationships":["pipelineName->CommodityPipeline[1..1]","withdrawalPoint->CommodityDeliveryPoint[0..1]","entryPoint->CommodityDeliveryPoint[0..1]","deliverableByBarge[1..1]","risk->CommodityDeliveryRisk[0..1]","cycle->CommodityPipelineCycle[0..]"]
  },{
    "name":"dividendPayoutRatio",
    "extend":"anySimpleType"
  },{
    "name":"Underlyer",
    "documentation":"A type describing the whole set of possible underlyers: single underlyers or multiple underlyers, each of these having either security or index components.",
    "relationships":["singleUnderlyer->SingleUnderlyer[1..1]","basket->Basket[1..1]"]
  },{
    "name":"gross",
    "extend":"anySimpleType"
  },{
    "name":"SpreadScheduleType",
    "documentation":"Defines a Spread Type Scheme to identify a long or short spread value.",
    "extend":"Scheme"
  },{
    "name":"ContactInformation",
    "documentation":"A type that represents how to contact an individual or organization.",
    "relationships":["telephone->TelephoneNumber[0..]","email[0..]","address->Address[0..1]"]
  },{
    "name":"level",
    "extend":"anySimpleType"
  },{
    "name":"IndexChange",
    "documentation":"A structure describing the effect of a change to an index.",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]","indexFactor[1..1]","factoredCalculationAmount->Money[1..1]"],
    "extend":"ChangeEvent"
  },{
    "name":"RequestConfirmation",
    "documentation":"A message type defining the start of the confirmation process. The message may be used to request the confirmation of a new trade or any other event supported by FpML such as novation, terminations, amendments, etc.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"AdditionalData",
    "documentation":"Provides extra information not represented in the model that may be useful in processing the message i.e. diagnosing the reason for failure.",
    "relationships":["mimeType->MimeType[1..1]","string[1..1]","hexadecimalBinary[1..1]","base64Binary[1..1]","originalMessage->null[1..1]"]
  },{
    "name":"baseValue",
    "extend":"anySimpleType"
  },{
    "name":"LoanParticipation",
    "relationships":["applicable[1..1]","partialCashSettlement[0..1]","qualifyingParticipationSeller[0..1]"],
    "extend":"PCDeliverableObligationCharac"
  },{
    "name":"EEPParameters",
    "documentation":"Excess Emission Penalty related parameters.",
    "relationships":["eEPApplicable[1..1]","riskPeriod->EEPRiskPeriod[1..1]","equivalentApplicable[1..1]","penaltyApplicable[1..1]"]
  },{
    "name":"Cash",
    "relationships":["instrumentId->InstrumentId[0..]","description[0..1]","currency->Currency[1..1]"],
    "extend":"Asset"
  },{
    "name":"tenderOffer",
    "extend":"anySimpleType"
  },{
    "name":"X509SKI",
    "extend":"anySimpleType"
  },{
    "name":"FormulaComponent",
    "documentation":"Elements describing the components of the formula. The name attribute points to a value used in the math element. The href attribute points to a numeric value defined elsewhere in the document that is used by the formula component.",
    "relationships":["componentDescription[1..1]","formula->Formula[0..1]"]
  },{
    "name":"AllocationApproved",
    "documentation":"A message indicating that a request to allocate a trade has been approved by the sender.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","blockTradeIdentifier->TradeIdentifier[0..1]","allocations->Allocations[0..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"CalculationPeriodAmount",
    "documentation":"A type defining the parameters used in the calculation of fixed or floating rate calculation period amounts or for specifying a known calculation period amount or known amount schedule.",
    "relationships":["calculation->Calculation[1..1]","knownAmountSchedule->AmountSchedule[1..1]"]
  },{
    "name":"CommodityFixedPriceSchedule",
    "documentation":"The Fixed Price for a given Calculation Period during the life of the trade. There must be a Fixed Price step specified for each Calculation Period, regardless of whether the Fixed Price changes or remains the same between periods.",
    "relationships":["fixedPriceStep->FixedPrice[1..]","worldscaleRateStep[1..]","contractRateStep->NonNegativeMoney[1..]","settlementPeriodsPriceSchedule->CommoditySettlementPeriodsPriceSchedule[1..]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]"]
  },{
    "name":"DifferenceTypeEnum",
    "documentation":"The ISDA defined value indicating the nature of a difference.",
    "characteristics":{
      "enumeration":[{
        "value":"Value"
      },{
        "value":"Reference"
      },{
        "value":"Structure"
      },{
        "value":"Scheme"
      }]
    },
    "extend":"token"
  },{
    "name":"CoalProductType",
    "documentation":"A scheme identifying the types of coal for a physically settled coal trade.",
    "extend":"Scheme"
  },{
    "name":"TradeNovationContent",
    "documentation":"A structure describing a novation.",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]","newTradeIdentifier->PartyTradeIdentifier[1..]","newTrade->Trade[1..1]","oldTradeIdentifier->PartyTradeIdentifier[1..]","oldTrade->Trade[1..1]","feeTradeIdentifier->PartyTradeIdentifier[1..1]","feeTrade->Trade[1..1]","newTradeIdentifier->PartyTradeIdentifier[1..]","newTrade->Trade[1..1]","feeTradeIdentifier->PartyTradeIdentifier[1..1]","feeTrade->Trade[1..1]","newTradeIdentifier->PartyTradeIdentifier[1..]","newTrade->Trade[1..1]","transferor->PartyReference[1..1]","transferorAccount->AccountReference[0..1]","transferee->PartyReference[1..1]","otherTransferee->PartyReference[0..1]","transfereeAccount->AccountReference[0..1]","otherTransfereeAccount->AccountReference[0..1]","remainingParty->PartyReference[1..1]","remainingPartyAccount->AccountReference[0..1]","otherRemainingParty->PartyReference[0..1]","otherRemainingPartyAccount->AccountReference[0..1]","novationDate[1..1]","executionDateTime->ExecutionDateTime[0..1]","novationTradeDate[0..1]","novatedAmount->Money[1..]","remainingAmount->Money[0..]","novatedNumberOfOptions[1..1]","remainingNumberOfOptions[0..1]","novatedNumberOfUnits[1..1]","remainingNumberOfUnits[0..1]","fullFirstCalculationPeriod[0..1]","firstPeriodStartDate->FirstPeriodStartDate[0..2]","nonReliance->Empty[0..1]","creditDerivativesNotices->CreditDerivativesNotices[0..1]","contractualDefinitions->ContractualDefinitions[0..]","contractualTermsSupplement->ContractualTermsSupplement[0..]","payment->Payment[0..1]"],
    "extend":"AbstractEvent"
  },{
    "name":"isCorrection",
    "extend":"anySimpleType"
  },{
    "name":"EEPRiskPeriod",
    "documentation":"TBD.",
    "relationships":["startDate[1..1]","endDate[1..1]"]
  },{
    "name":"PGPDataType",
    "relationships":["PGPKeyID[1..1]","PGPKeyPacket[0..1]","PGPKeyPacket[1..1]"]
  },{
    "name":"unsignedLong",
    "extend":"nonNegativeInteger"
  },{
    "name":"ConfirmationAgreed",
    "documentation":"A message indicating that a confirmation has been agreed by a counterparty.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"NotionalAmount",
    "documentation":"A complex type to specify the notional amount.",
    "relationships":["currency->Currency[1..1]","amount[1..1]"],
    "extend":"NonNegativeMoney"
  },{
    "name":"Fra",
    "documentation":"A type defining a Forward Rate Agreement (FRA) product.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","adjustedEffectiveDate->RequiredIdentifierDate[1..1]","adjustedTerminationDate[1..1]","paymentDate->AdjustableDate[1..1]","fixingDateOffset->RelativeDateOffset[1..1]","dayCountFraction->DayCountFraction[1..1]","calculationPeriodNumberOfDays[1..1]","notional->Money[1..1]","fixedRate[1..1]","floatingRateIndex->FloatingRateIndex[1..1]","indexTenor->Period[1..]","fraDiscounting[1..1]"],
    "extend":"Product"
  },{
    "name":"requestCollateralAllocation"
  },{
    "name":"CorrectableRequestMessage",
    "documentation":"A type defining the content model for a request message that can be subsequently corrected or retracted.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]"],
    "extend":"RequestMessage"
  },{
    "name":"PartyReference",
    "documentation":"Reference to a party.",
    "extend":"Reference"
  },{
    "name":"PriceSourceDisruption",
    "documentation":"A type defining the parameters used to get a price quote to replace the settlement rate option that is disrupted.",
    "relationships":["fallbackReferencePrice->FallbackReferencePrice[1..1]"]
  },{
    "name":"DayOfWeekEnum",
    "documentation":"A day of the seven-day week.",
    "characteristics":{
      "enumeration":[{
        "value":"MON"
      },{
        "value":"TUE"
      },{
        "value":"WED"
      },{
        "value":"THU"
      },{
        "value":"FRI"
      },{
        "value":"SAT"
      },{
        "value":"SUN"
      }]
    },
    "extend":"token"
  },{
    "name":"RequestedAction",
    "extend":"Scheme"
  },{
    "name":"Correlation",
    "documentation":"A type describing the correlation amount of a correlation swap.",
    "relationships":["initialLevel[1..1]","closingLevel[1..1]","expiringLevel[1..1]","expectedN[0..1]","notionalAmount->NonNegativeMoney[1..1]","correlationStrikePrice[1..1]","boundedCorrelation->BoundedCorrelation[0..1]","numberOfDataSeries[0..1]"],
    "extend":"CalculationFromObservation"
  },{
    "name":"Token60",
    "documentation":"A type defining a token of length between 1 and 60 characters inclusive.",
    "extend":"token"
  },{
    "name":"deltaCrossed",
    "extend":"anySimpleType"
  },{
    "name":"ValuationSet",
    "documentation":"A set of valuation inputs and results. This structure can be used for requesting valuations, or for reporting them. In general, the request fills in fewer elements.",
    "relationships":["name[0..1]","valuationScenario->ValuationScenario[0..]","valuationScenarioReference->ValuationScenarioReference[0..]","baseParty->PartyReference[0..1]","quotationCharacteristics->QuotationCharacteristics[0..]","sensitivitySetDefinition->SensitivitySetDefinition[0..]","detail->ValuationSetDetail[0..1]","assetValuation->AssetValuation[0..]"]
  },{
    "name":"IdentifiedCurrency",
    "documentation":"Specifies Currency with ID attribute.",
    "extend":"Currency"
  },{
    "name":"Metal",
    "documentation":"A type defining the characteristics of the metal product being traded in a physically settled metal transaction.",
    "relationships":["material->Material[1..1]","shape->CommodityMetalShape[1..]","brand->CommodityMetalBrand[0..]","grade->CommodityMetalGrade[1..]"]
  },{
    "name":"anyURI",
    "extend":"anySimpleType"
  },{
    "name":"GasPhysicalQuantity",
    "documentation":"The quantity of gas to be delivered.",
    "relationships":["physicalQuantity->CommodityNotionalQuantity[1..1]","physicalQuantitySchedule->CommodityPhysicalQuantitySchedule[1..1]","totalPhysicalQuantity->UnitQuantity[0..1]","minPhysicalQuantity->CommodityNotionalQuantity[1..]","maxPhysicalQuantity->CommodityNotionalQuantity[1..]","electingParty->PartyReference[0..1]"],
    "extend":"CommodityPhysicalQuantityBase"
  },{
    "name":"payRelativeTo",
    "documentation":"The Commodity specification of whether payments occur relative e.g. to the Trade Date, or the end of the month, etc.",
    "extend":"anySimpleType"
  },{
    "name":"ContractualTermsSupplement",
    "documentation":"A contractual supplement (such as those published by ISDA) and its publication date that will apply to the trade.",
    "relationships":["type->ContractualSupplement[1..1]","publicationDate[0..1]"]
  },{
    "name":"FxRateSet",
    "documentation":"A collection of spot FX rates used in pricing.",
    "relationships":["instrumentSet->InstrumentSet[0..1]","assetQuote->BasicAssetValuation[0..]"],
    "extend":"QuotedAssetSet"
  },{
    "name":"feeRate",
    "extend":"anySimpleType"
  },{
    "name":"PricingParameterDerivative",
    "documentation":"A definition of the mathematical derivative with respect to a specific pricing parameter.",
    "relationships":["description[0..1]","parameterReference->AssetOrTermPointOrPricingStructureReference[0..1]","inputDateReference->ValuationReference[1..]","calculationProcedure->DerivativeCalculationProcedure[0..1]"]
  },{
    "name":"orderEntered",
    "extend":"anySimpleType"
  },{
    "name":"NettedSwapBase",
    "documentation":"A Variance Swap.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","additionalPayment->ClassifiedPayment[0..]","extraordinaryEvents->ExtraordinaryEvents[0..1]"],
    "extend":"Product"
  },{
    "name":"gYear",
    "extend":"anySimpleType"
  },{
    "name":"PricingMethod",
    "documentation":"For an asset (e.g. a reference/benchmark asset), the pricing structure used to price it. Used, for example, to specify that the rateIndex \"USD-LIBOR-Telerate\" with term = 6M is priced using the \"USD-LIBOR-Close\" curve.",
    "relationships":["assetReference->AnyAssetReference[1..1]","pricingInputReference->PricingStructureReference[1..1]"]
  },{
    "name":"Reference"
  },{
    "name":"SignedInfoType",
    "relationships":["CanonicalizationMethod->CanonicalizationMethodType[1..1]","SignatureMethod->SignatureMethodType[1..1]","Reference->ReferenceType[1..]"]
  },{
    "name":"TriggerConditionEnum",
    "documentation":"The specification of whether a payout will occur on an option depending upon whether the spot rate is above or below the trigger rate.",
    "characteristics":{
      "enumeration":[{
        "value":"Above"
      },{
        "value":"Below"
      }]
    },
    "extend":"token"
  },{
    "name":"consentException"
  },{
    "name":"PricingParameterShift",
    "documentation":"A definition of a shift with respect to a specific pricing parameter.",
    "relationships":["parameterReference->AssetOrTermPointOrPricingStructureReference[1..1]","shift[1..1]","shiftUnits->PriceQuoteUnits[0..1]"]
  },{
    "name":"CommodityMetalGrade",
    "extend":"Scheme"
  },{
    "name":"ReturnLegValuationPrice",
    "relationships":["commission->Commission[0..1]","determinationMethod->DeterminationMethod[1..1]","grossPrice->ActualPrice[0..1]","netPrice->ActualPrice[1..1]","accruedInterestPrice[0..1]","fxConversion->FxConversion[0..1]","amountRelativeTo->AmountReference[1..1]","grossPrice->ActualPrice[0..1]","netPrice->ActualPrice[1..1]","accruedInterestPrice[0..1]","fxConversion->FxConversion[0..1]","cleanNetPrice[0..1]","quotationCharacteristics->QuotationCharacteristics[0..1]","valuationRules->EquityValuation[0..1]"],
    "extend":"Price"
  },{
    "name":"Initial",
    "extend":"normalizedString"
  },{
    "name":"loadType",
    "documentation":"LoadType is a summary of the full description of the settlement periods with respect to the region. Used for describing Electricity delivery schedules.",
    "characteristics":{
      "enumeration":[{
        "value":"Base"
      },{
        "value":"Peak"
      },{
        "value":"OffPeak"
      },{
        "value":"Custom"
      }]
    },
    "extend":"token"
  },{
    "name":"BrokerConfirmationType",
    "documentation":"Identifies the market sector in which the trade has been arranged.",
    "extend":"Scheme"
  },{
    "name":"adjustedCashSettlementPaymentDate",
    "extend":"anySimpleType"
  },{
    "name":"DirectionalLegUnderlyer",
    "documentation":"A type describing return which is driven by a Variance Calculation.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","underlyer->Underlyer[1..1]","settlementType[0..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementAmount->Money[1..1]","settlementCurrency->Currency[1..1]","fxFeature->FxFeature[0..1]"],
    "extend":"DirectionalLeg"
  },{
    "name":"SignedInfo"
  },{
    "name":"OptionTypeEnum",
    "documentation":"Specifies the type of the option.",
    "extend":"anySimpleType"
  },{
    "name":"CommoditySettlementPeriodsPriceSchedule",
    "documentation":"The fixed price schedule for electricity that applies to one or more groups of Settlement Periods.",
    "relationships":["settlementPeriodsPriceStep->FixedPrice[1..]","settlementPeriodsReference->SettlementPeriodsReference[1..]"]
  },{
    "name":"PartyTradeIdentifierReference",
    "documentation":"A reference to a partyTradeIdentifier object.",
    "extend":"Reference"
  },{
    "name":"Person",
    "documentation":"A type that represents information about a person connected with a trade or business process.",
    "relationships":["honorific[0..1]","firstName[1..1]","middleName[1..]","initial[1..]","surname[1..1]","suffix[0..1]","personId->PersonId[0..]","businessUnitReference->BusinessUnitReference[0..1]","contactInfo->ContactInformation[0..1]","country->CountryCode[0..1]"]
  },{
    "name":"EquityCorporateEvents",
    "documentation":"A type for defining the merger events and their treatment.",
    "relationships":["shareForShare[1..1]","shareForOther[1..1]","shareForCombined[1..1]"]
  },{
    "name":"RepudiationMoratoriumEvent",
    "extend":"CreditEvent"
  },{
    "name":"SimpleIRSwap",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","term->Period[1..1]","paymentFrequency->Period[0..1]","dayCountFraction->DayCountFraction[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"correlationSwap"
  },{
    "name":"PhysicalForwardLeg",
    "documentation":"Physically settled leg of a physically settled Bullion Transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]"],
    "extend":"CommodityForwardLeg"
  },{
    "name":"SpecifiedPriceEnum",
    "documentation":"The Specified Price in respect of a Transaction and a Commodity Reference Price.",
    "characteristics":{
      "enumeration":[{
        "value":"Afternoon"
      },{
        "value":"Ask"
      },{
        "value":"Bid"
      },{
        "value":"Closing"
      },{
        "value":"High"
      },{
        "value":"Index"
      },{
        "value":"MeanOfBidAndAsk"
      },{
        "value":"LocationalMarginal"
      },{
        "value":"Low"
      },{
        "value":"MarginalHourly"
      },{
        "value":"MarketClearing"
      },{
        "value":"MeanOfHighAndLow"
      },{
        "value":"Morning"
      },{
        "value":"Official"
      },{
        "value":"Opening"
      },{
        "value":"OSP"
      },{
        "value":"Settlement"
      },{
        "value":"Spot"
      },{
        "value":"Midpoint"
      },{
        "value":"NationalSingle"
      },{
        "value":"WeightedAverage"
      },{
        "value":"UnWeightedAverage"
      }]
    },
    "extend":"token"
  },{
    "name":"ObligationDefaultEvent",
    "extend":"CreditEvent"
  },{
    "name":"CanonicalizationMethod"
  },{
    "name":"InstrumentId",
    "documentation":"A short form unique identifier for a security.",
    "extend":"Scheme"
  },{
    "name":"forceMajeure",
    "extend":"anySimpleType"
  },{
    "name":"upperStrikeNumberOfOptions",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"ReferencePair",
    "relationships":["referenceEntity->LegalEntity[1..1]","referenceObligation->ReferenceObligation[1..1]","noReferenceObligation[1..1]","entityType->EntityType[1..1]"]
  },{
    "name":"numberOfDataSeries",
    "extend":"nonNegativeInteger"
  },{
    "name":"ConfirmationMethod",
    "documentation":"A type used to represent the type of mechanism that can be used to confirm a trade.",
    "extend":"Scheme"
  },{
    "name":"NOTATION",
    "extend":"anySimpleType"
  },{
    "name":"creditEvent"
  },{
    "name":"commonPricing",
    "extend":"anySimpleType"
  },{
    "name":"CalculationFromObservation",
    "documentation":"Abstract base class for all calculation from observed values.",
    "relationships":["initialLevel[1..1]","closingLevel[1..1]","expiringLevel[1..1]","expectedN[0..1]"]
  },{
    "name":"requestConfirmationRetracted"
  },{
    "name":"MatrixType",
    "extend":"Scheme"
  },{
    "name":"AdjustableOrRelativeDate",
    "documentation":"A type giving the choice between defining a date as an explicit date together with applicable adjustments or as relative to some other (anchor) date.",
    "relationships":["adjustableDate->AdjustableDate[1..1]","relativeDate->RelativeDateOffset[1..1]"]
  },{
    "name":"EquityBermudaExercise",
    "documentation":"A type for defining exercise procedures associated with a Bermuda style exercise of an equity option. The term Bermuda is adopted in FpML for consistency with the ISDA Definitions.",
    "relationships":["commencementDate->AdjustableOrRelativeDate[1..1]","expirationDate->AdjustableOrRelativeDate[1..1]","latestExerciseTime->BusinessCenterTime[1..1]","latestExerciseTimeDetermination->DeterminationMethod[1..1]","bermudaExerciseDates->DateList[1..1]","latestExerciseTimeType[0..1]","equityExpirationTimeType[1..1]","equityExpirationTime->BusinessCenterTime[0..1]","expirationTimeDetermination->DeterminationMethod[1..1]","equityMultipleExercise->EquityMultipleExercise[0..1]"],
    "extend":"SharedAmericanExercise"
  },{
    "name":"NonPeriodicFixedPriceLeg",
    "documentation":"The details of a fixed payment. Can be used for a forward transaction or as the base for a more complex fixed leg component such as the fixed leg of a swap.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","fixedPrice->FixedPrice[1..1]","totalPrice->NonNegativeMoney[0..1]","quantityReference->QuantityReference[1..1]","relativePaymentDates->CommodityRelativePaymentDates[1..1]","paymentDates->AdjustableDatesOrRelativeDateOffset[1..1]","masterAgreementPaymentDates[1..1]"],
    "extend":"CommoditySwapLeg"
  },{
    "name":"FloatingRateCalculationReference",
    "documentation":"Reference to a floating rate calculation of interest calculation component.",
    "extend":"Reference"
  },{
    "name":"equitySwapTransactionSupplement"
  },{
    "name":"DenominatorTerm",
    "documentation":"The type defining a denominator term of the formula. Its value is (sum of weighted partials) ^ power.",
    "relationships":["weightedPartial->WeightedPartialDerivative[1..1]","power[1..1]"]
  },{
    "name":"DeterminationMethodReference",
    "documentation":"A reference to the return swap notional determination method.",
    "extend":"Reference"
  },{
    "name":"expiringLevel",
    "extend":"anySimpleType"
  },{
    "name":"novatedNumberOfUnits",
    "extend":"anySimpleType"
  },{
    "name":"IndexAdjustmentEvents",
    "documentation":"Defines the specification of the consequences of Index Events as defined by the 2002 ISDA Equity Derivatives Definitions.",
    "relationships":["indexModification[1..1]","indexCancellation[1..1]","indexDisruption[1..1]"]
  },{
    "name":"cleanNetPrice",
    "extend":"anySimpleType"
  },{
    "name":"intermediateExchange",
    "extend":"anySimpleType"
  },{
    "name":"PeriodicDates",
    "relationships":["calculationStartDate->AdjustableOrRelativeDate[1..1]","calculationEndDate->AdjustableOrRelativeDate[0..1]","calculationPeriodFrequency->CalculationPeriodFrequency[1..1]","calculationPeriodDatesAdjustments->BusinessDayAdjustments[1..1]"]
  },{
    "name":"PaymentDetails",
    "documentation":"Details on the referenced payment. e.g. Its cashflow components, settlement details.",
    "relationships":["paymentReference->PaymentReference[1..1]","grossCashflow->GrossCashflow[1..]","settlementInformation->SettlementInformation[0..1]"]
  },{
    "name":"DateRange",
    "documentation":"A type defining a range of contiguous business days by defining an unadjusted first date, an unadjusted last date and a business day convention and business centers for adjusting the first and last dates if they would otherwise fall on a non business day in the specified business centers. The days between the first and last date must also be good business days in the specified centers to be counted in the range.",
    "relationships":["unadjustedFirstDate[1..1]","unadjustedLastDate[1..1]"]
  },{
    "name":"multiLeg",
    "extend":"anySimpleType"
  },{
    "name":"SettlementPeriodsStep",
    "documentation":"A reference to the range of Settlement Periods that applies to a given period of a transaction.",
    "relationships":["settlementPeriodsReference->SettlementPeriodsReference[1..]"]
  },{
    "name":"optionEntitlement",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"compoundingSpread",
    "extend":"anySimpleType"
  },{
    "name":"suffix",
    "extend":"string"
  },{
    "name":"ClearingConfirmed",
    "documentation":"A message indicating that a clearing request has been acted on and as a result a trade has been cleared.",
    "relationships":["header->NotificationMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","compressionActivity->CompressionActivity[1..1]","portfolioReference->PortfolioReference[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","clearing->Clearing[1..1]","quote->BasicQuotation[1..]","party->Party[1..]","account->Account[0..]"],
    "extend":"NotificationMessage"
  },{
    "name":"confirmationAgreed"
  },{
    "name":"EventStatus",
    "documentation":"A coding scheme used to describe the matching/confirmation status of a trade, post-trade event, position, or cash flows.",
    "extend":"Scheme"
  },{
    "name":"ReportIdentification",
    "documentation":"A type that allows the specific report and section to be identified.",
    "relationships":["reportId->ReportId[0..1]","sectionNumber[0..1]","numberOfSections[0..1]","submissionsComplete[0..1]"],
    "extend":"ReportSectionIdentification"
  },{
    "name":"basketDivisor",
    "extend":"anySimpleType"
  },{
    "name":"notBearer",
    "extend":"anySimpleType"
  },{
    "name":"city",
    "extend":"anySimpleType"
  },{
    "name":"DataProvider",
    "documentation":"Specify as applicable. Parties may wish to refer to the state meteorological authority in a particular location or to an exchange or other third party data provider. Parties may find the definitions in the Commodity Definitions useful as a means of identifying potential Data Providers.",
    "extend":"Scheme"
  },{
    "name":"SwaptionAdjustedDates",
    "documentation":"A type describing the adjusted dates associated with swaption exercise and settlement.",
    "relationships":["exerciseEvent->ExerciseEvent[1..]"]
  },{
    "name":"DigestValue"
  },{
    "name":"endUserException",
    "extend":"anySimpleType"
  },{
    "name":"basket"
  },{
    "name":"Cashflows",
    "documentation":"A type defining the cashflow representation of a swap trade.",
    "relationships":["cashflowsMatchParameters[1..1]","principalExchange->PrincipalExchange[0..]","paymentCalculationPeriod->PaymentCalculationPeriod[0..]"]
  },{
    "name":"exercise"
  },{
    "name":"SignaturePropertyType"
  },{
    "name":"RequestedWithdrawalAction",
    "documentation":"A type that describes what the requester would like to see done to implement the withdrawal, e.g. ExpungeRecords, RetainRecords.",
    "extend":"Scheme"
  },{
    "name":"intentToClear",
    "extend":"anySimpleType"
  },{
    "name":"swap"
  },{
    "name":"DefaultProbabilityCurve",
    "documentation":"A set of default probabilities.",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","baseDate->IdentifiedDate[1..1]","spotDate->IdentifiedDate[0..1]","inputDataDate->IdentifiedDate[0..1]","endDate->IdentifiedDate[0..1]","buildDateTime[0..1]","baseYieldCurve->PricingStructureReference[1..1]","defaultProbabilities->TermCurve[0..1]"],
    "extend":"PricingStructureValuation"
  },{
    "name":"QuotationSideEnum",
    "documentation":"The side from which perspective a value is quoted.",
    "characteristics":{
      "enumeration":[{
        "value":"Bid"
      },{
        "value":"Ask"
      },{
        "value":"Mid"
      }]
    },
    "extend":"token"
  },{
    "name":"Unit",
    "documentation":"A type used to record information about a unit, subdivision, desk, or other similar business entity.",
    "extend":"Scheme"
  },{
    "name":"EarlyTerminationEvent",
    "documentation":"A type to define the adjusted dates associated with an early termination provision.",
    "relationships":["adjustedExerciseDate[1..1]","adjustedEarlyTerminationDate[1..1]","adjustedCashSettlementValuationDate[1..1]","adjustedCashSettlementPaymentDate[1..1]","adjustedExerciseFeePaymentDate[0..1]"]
  },{
    "name":"DealtCurrencyEnum",
    "characteristics":{
      "enumeration":[{
        "value":"ExchangedCurrency1"
      },{
        "value":"ExchangedCurrency2"
      }]
    },
    "extend":"token"
  },{
    "name":"integer",
    "extend":"decimal"
  },{
    "name":"EnvironmentalProduct",
    "documentation":"A type defining the characteristics of the environmental product being traded in a physically settled environmental transaction.",
    "relationships":["productType[1..1]","compliancePeriod->EnvironmentalProductComplaincePeriod[0..1]","vintage[0..]","applicableLaw->EnvironmentalProductApplicableLaw[0..1]","trackingSystem->EnvironmentalTrackingSystem[0..1]"]
  },{
    "name":"ObservationSchedule",
    "relationships":["startDate[1..1]","endDate[1..1]","observationPeriodFrequency->Frequency[1..1]"]
  },{
    "name":"creditEventNoticeDate",
    "extend":"anySimpleType"
  },{
    "name":"RequestConsentRetracted",
    "documentation":"A message withdrawing a request that the sender be authorized by the recipient to peform an action.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"Option",
    "documentation":"A complex type to support the credit default swap option.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]"],
    "extend":"Product"
  },{
    "name":"creationDate",
    "extend":"anySimpleType"
  },{
    "name":"PricingStructureValuation",
    "documentation":"An abstract pricing structure valuation base type. Used as a base for values of pricing structures such as yield curves and volatility matrices. Derived from the \"Valuation\" type.",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","baseDate->IdentifiedDate[1..1]","spotDate->IdentifiedDate[0..1]","inputDataDate->IdentifiedDate[0..1]","endDate->IdentifiedDate[0..1]","buildDateTime[0..1]"],
    "extend":"Valuation"
  },{
    "name":"allocatedFraction",
    "extend":"anySimpleType"
  },{
    "name":"QName",
    "extend":"anySimpleType"
  },{
    "name":"BondReference",
    "documentation":"A type including a reference to a bond to support the representation of an asset swap or Condition Precedent Bond.",
    "relationships":["bond->Bond[1..1]","conditionPrecedentBond[1..1]","discrepancyClause[0..1]"]
  },{
    "name":"SettlementProvision",
    "documentation":"A type defining the specification of settlement terms, occuring when the settlement currency is different to the notional currency of the trade.",
    "relationships":["settlementCurrency->Currency[1..1]","nonDeliverableSettlement->NonDeliverableSettlement[0..1]"]
  },{
    "name":"couponRate",
    "extend":"anySimpleType"
  },{
    "name":"DiscountingTypeEnum",
    "documentation":"The method of calculating discounted payment amounts",
    "characteristics":{
      "enumeration":[{
        "value":"Standard"
      },{
        "value":"FRA"
      },{
        "value":"FRAYield"
      }]
    },
    "extend":"token"
  },{
    "name":"IndexReferenceInformation",
    "documentation":"A type defining a Credit Default Swap Index.",
    "relationships":["indexName->IndexName[1..1]","indexId->IndexId[0..]","indexId->IndexId[1..]","indexSeries[0..1]","indexAnnexVersion[0..1]","indexAnnexDate[0..1]","indexAnnexSource->IndexAnnexSource[0..1]","excludedReferenceEntity->LegalEntity[0..]","tranche->Tranche[0..1]","settledEntityMatrix->SettledEntityMatrix[0..1]"]
  },{
    "name":"OptionFeature",
    "documentation":"A type for defining option features.",
    "relationships":["fxFeature->FxFeature[0..1]","strategyFeature->StrategyFeature[0..1]","asian->Asian[0..1]","barrier->Barrier[0..1]","knock->Knock[0..1]","passThrough->PassThrough[0..1]"]
  },{
    "name":"WeatherLegCalculation",
    "documentation":"A type to capture details relevant to the calculation of the Payment Amount on a Weather Index Transaction.",
    "relationships":["settlementLevel[1..1]","referenceLevelEqualsZero[1..1]","calculationDate->Period[1..1]","businessDays->BusinessCenter[1..1]","dataCorrection[1..1]","correctionPeriod->Period[0..1]","maximumPaymentAmount->NonNegativeMoney[0..1]","maximumTransactionPaymentAmount->NonNegativeMoney[0..1]","rounding->Rounding[0..1]"]
  },{
    "name":"MessageHeader",
    "documentation":"A type defining the content model for an exception message header.",
    "relationships":["messageId->MessageId[1..1]"]
  },{
    "name":"OilTransferDelivery",
    "documentation":"The physical delivery conditions specific to an oil product delivered by title transfer.",
    "relationships":["applicable[1..1]","deliveryLocation->CommodityDeliveryPoint[0..1]"]
  },{
    "name":"fxOption"
  },{
    "name":"ResetDatesReference",
    "documentation":"Reference to a reset dates component.",
    "extend":"Reference"
  },{
    "name":"AllocationReportingStatus",
    "documentation":"Code that describes what type of allocation applies to the trade. Options include Unallocated, PreAllocation, PostAllocation.",
    "extend":"Scheme"
  },{
    "name":"fxSingleLeg"
  },{
    "name":"PositiveAmountSchedule",
    "documentation":"A type defining a currency amount or a currency amount schedule.",
    "relationships":["initialValue[1..1]","step->PositiveStep[0..]","currency->Currency[1..1]"],
    "extend":"PositiveSchedule"
  },{
    "name":"RealisedVarianceMethodEnum",
    "documentation":"The contract specifies whether which price must satisfy the boundary condition.",
    "characteristics":{
      "enumeration":[{
        "value":"Previous"
      },{
        "value":"Last"
      },{
        "value":"Both"
      }]
    },
    "extend":"token"
  },{
    "name":"CalculationPeriodsDatesReference",
    "documentation":"A pointer style reference to single-day-duration calculation periods defined elsewhere - note that this schedule consists of a parameterised schedule in a calculationPeriodsSchedule container.",
    "extend":"Reference"
  },{
    "name":"NMTOKEN",
    "extend":"token"
  },{
    "name":"novatedNumberOfOptions",
    "extend":"anySimpleType"
  },{
    "name":"indexDisclaimer",
    "extend":"anySimpleType"
  },{
    "name":"ImpliedTrade",
    "documentation":"A type defining a type of trade that is implied by a post-trade event such as a novation. For example, if a novation moves $5mm in notional of an existing trade to a new party, there is an implied trade of $5mm at off-market terms. The fee represents the amoun by which the trade is off market. This even is used, for example in novations, where the implied trade and the corresponding fee must be segregated from the original or new trades for data access reasons (e.g. where the remaining party is not permitted to know the amount of a novation fee).",
    "relationships":["originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","payment->NonNegativePayment[0..1]"]
  },{
    "name":"limitedRightToConfirm",
    "extend":"anySimpleType"
  },{
    "name":"Basket",
    "documentation":"A type describing the underlyer features of a basket swap. Each of the basket constituents are described through an embedded component, the basketConstituentsType.",
    "relationships":["openUnits[0..1]","basketConstituent->BasketConstituent[1..]","basketDivisor[0..1]","basketName->BasketName[1..1]","basketId->BasketId[0..]","basketId->BasketId[1..]","basketCurrency->Currency[0..1]"],
    "extend":"Asset"
  },{
    "name":"AdjustedRelativeDateOffset",
    "documentation":"A type defining a date (referred to as the derived date) as a relative offset from another date (referred to as the anchor date) plus optional date adjustments.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","dayType[0..1]","businessDayConvention[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]","dateRelativeTo->DateReference[1..1]","adjustedDate->IdentifiedDate[0..1]","relativeDateAdjustments->BusinessDayAdjustments[0..1]"],
    "extend":"RelativeDateOffset"
  },{
    "name":"executionException"
  },{
    "name":"buildDateTime",
    "extend":"anySimpleType"
  },{
    "name":"P",
    "extend":"base64Binary"
  },{
    "name":"OilPhysicalLeg",
    "documentation":"Physically settled leg of a physically settled oil product transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","deliveryPeriods->CommodityDeliveryPeriods[1..1]","oil->OilProduct[1..1]","deliveryConditions->OilDelivery[1..1]","deliveryQuantity->CommodityPhysicalQuantity[1..1]"],
    "extend":"PhysicalSwapLeg"
  },{
    "name":"serviceNotification"
  },{
    "name":"Y",
    "extend":"base64Binary"
  },{
    "name":"MasterAgreementVersion",
    "extend":"Scheme"
  },{
    "name":"electricityPhysicalLeg"
  },{
    "name":"AdjustableRelativeOrPeriodicDates2",
    "documentation":"A type giving the choice between defining a series of dates as an explicit list of dates together with applicable adjustments, or as relative to some other series of (anchor) dates, or as a set of factors to specify periodic occurences.",
    "relationships":["adjustableDates->AdjustableDates[1..1]","relativeDates->RelativeDates[1..1]","periodicDates->PeriodicDates[1..1]"]
  },{
    "name":"disruptionFallbacks",
    "documentation":"The specification of how disruption fallbacks will be represented.",
    "characteristics":{
      "enumeration":[{
        "value":"AsSpecifiedInMasterAgreement"
      },{
        "value":"AsSpecifiedInConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"EventProposedMatch",
    "documentation":"A structure that describes a proposed match between trades or post-trade event reports.",
    "relationships":["originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","matchId->MatchId[0..1]","difference->TradeDifference[0..]","matchScore[0..1]"]
  },{
    "name":"insolvencyFiling",
    "extend":"anySimpleType"
  },{
    "name":"additionalEvent"
  },{
    "name":"FxLinkedNotionalSchedule",
    "documentation":"A type to describe a notional schedule where each notional that applies to a calculation period is calculated with reference to a notional amount or notional amount schedule in a different currency by means of a spot currency exchange rate which is normally observed at the beginning of each period.",
    "relationships":["constantNotionalScheduleReference->NotionalReference[1..1]","initialValue[0..1]","varyingNotionalCurrency->Currency[1..1]","varyingNotionalFixingDates->RelativeDateOffset[1..1]","fxSpotRateSource->FxSpotRateSource[1..1]","varyingNotionalInterimExchangePaymentDates->RelativeDateOffset[1..1]"]
  },{
    "name":"yieldCurve"
  },{
    "name":"BestFitTrade",
    "documentation":"A type used to record the differences between the current trade and another indicated trade.",
    "relationships":["tradeIdentifier->TradeIdentifier[1..1]","differences->TradeDifference[0..]"]
  },{
    "name":"allocationApproved"
  },{
    "name":"QueryParameterId",
    "documentation":"A type representing an identifier for a parameter describing a query portfolio. An identifier can be anything from a product name like swap to a termination date.",
    "extend":"Scheme"
  },{
    "name":"EquityOptionTermination",
    "documentation":"A type for defining Equity Option Termination.",
    "relationships":["settlementAmountPaymentDate->AdjustableDate[1..1]","settlementAmount->NonNegativeMoney[1..1]"]
  },{
    "name":"exchangeLookAlike",
    "extend":"anySimpleType"
  },{
    "name":"totalNotionalQuantity",
    "extend":"anySimpleType"
  },{
    "name":"WeatherStation",
    "documentation":"Weather Station.",
    "relationships":["weatherStationCity->BusinessCenter[1..1]","weatherStationAirport->WeatherStationAirport[1..1]","weatherStationWBAN->WeatherStationWBAN[1..1]","weatherStationWMO->WeatherStationWMO[1..1]"]
  },{
    "name":"Deposit",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","term->Period[1..1]","paymentFrequency->Period[0..1]","dayCountFraction->DayCountFraction[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"businessDays",
    "extend":"integer"
  },{
    "name":"clearingAcknowledgement"
  },{
    "name":"OilProduct",
    "documentation":"The specification of the oil product to be delivered.",
    "relationships":["type->OilProductType[1..1]","grade->CommodityProductGrade[1..1]"]
  },{
    "name":"MasterConfirmationAnnexType",
    "extend":"Scheme"
  },{
    "name":"indexSeries",
    "extend":"nonNegativeInteger"
  },{
    "name":"volatilityMatrixValuation"
  },{
    "name":"swaptionStraddle",
    "extend":"anySimpleType"
  },{
    "name":"CashSettlementPaymentDate",
    "documentation":"A type defining the cash settlement payment date(s) as either a set of explicit dates, together with applicable adjustments, or as a date relative to some other (anchor) date, or as any date in a range of contiguous business days.",
    "relationships":["adjustableDates->AdjustableDates[1..1]","relativeDate->RelativeDateOffset[1..1]","businessDateRange->BusinessDateRange[1..1]"]
  },{
    "name":"AdditionalDisruptionEvents",
    "documentation":"A type for defining ISDA 2002 Equity Derivative Additional Disruption Events.",
    "relationships":["changeInLaw[0..1]","failureToDeliver[0..1]","insolvencyFiling[0..1]","hedgingDisruption[0..1]","lossOfStockBorrow[0..1]","maximumStockLoanRate[0..1]","increasedCostOfStockBorrow[0..1]","initialStockLoanRate[0..1]","increasedCostOfHedging[0..1]","determiningPartyReference->PartyReference[0..1]","foreignOwnershipEvent[0..1]"]
  },{
    "name":"triggerCondition",
    "documentation":"The specification of whether a payout will occur on an option depending upon whether the spot rate is above or below the trigger rate.",
    "characteristics":{
      "enumeration":[{
        "value":"Above"
      },{
        "value":"Below"
      }]
    },
    "extend":"token"
  },{
    "name":"OrganizationType",
    "documentation":"A code that describes what type of role an organization plays, for example a SwapsDealer, a Major Swaps Participant, or Other",
    "extend":"token"
  },{
    "name":"DateReference",
    "documentation":"Reference to an identified date or a complex date structure.",
    "extend":"Reference"
  },{
    "name":"Message",
    "documentation":"A type refining the generic message content model to make it specific to response messages.",
    "extend":"Document"
  },{
    "name":"strikePrice",
    "extend":"anySimpleType"
  },{
    "name":"ContractIdentifier",
    "documentation":"A type defining a contract identifier issued by the indicated party.",
    "relationships":["partyReference->PartyReference[1..1]","contractId->ContractId[1..]","versionedContractId->VersionedContractId[1..]"]
  },{
    "name":"underlyingAsset"
  },{
    "name":"streetLine",
    "extend":"anySimpleType"
  },{
    "name":"adjustedEndDate",
    "extend":"anySimpleType"
  },{
    "name":"ReportingPurpose",
    "documentation":"A value that explains the reason or purpose that information is being reported. Examples might include RealTimePublic reporting, PrimaryEconomicTerms reporting, Confirmation reporting, or Snapshot reporting.",
    "extend":"Scheme"
  },{
    "name":"SPKIData"
  },{
    "name":"verificationStatusAcknowledgement"
  },{
    "name":"nthToDefault",
    "extend":"nonNegativeInteger"
  },{
    "name":"SwaptionPhysicalSettlement",
    "relationships":["clearedPhysicalSettlement[1..1]"]
  },{
    "name":"ExtensionEvent",
    "documentation":"A type to define the adjusted dates associated with an individual extension event.",
    "relationships":["adjustedExerciseDate[1..1]","adjustedExtendedTerminationDate[1..1]"]
  },{
    "name":"DeClear",
    "documentation":"A structure describing an de-clear event.",
    "relationships":["tradeIdentifier->PartyTradeIdentifier[1..]","effectiveDate[1..1]","reason->DeclearReason[0..1]"]
  },{
    "name":"unadjustedVarianceCap",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"missingElement",
    "extend":"anySimpleType"
  },{
    "name":"creditEventNotification"
  },{
    "name":"Bond",
    "documentation":"An exchange traded bond.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","issuerName[1..1]","issuerPartyReference->PartyReference[1..1]","seniority->CreditSeniority[0..1]","couponType->CouponType[0..1]","couponRate[0..1]","maturity[0..1]","parValue[0..1]","faceAmount[0..1]","paymentFrequency->Period[0..1]","dayCountFraction->DayCountFraction[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"unadjustedEndDate",
    "extend":"anySimpleType"
  },{
    "name":"RoutingIds",
    "documentation":"A type that provides for identifying a party involved in the routing of a payment by means of one or more standard identification codes. For example, both a SWIFT BIC code and a national bank identifier may be required.",
    "relationships":["routingId->RoutingId[1..]"]
  },{
    "name":"creditEventNotice"
  },{
    "name":"PercentageTolerance",
    "documentation":"The acceptable tolerance in the delivered quantity of a physical commodity product in terms of a percentage of the agreed delivery quantity.",
    "relationships":["postitive[1..1]","negative[1..1]","option->PartyReference[0..1]"]
  },{
    "name":"G",
    "extend":"base64Binary"
  },{
    "name":"compositionOfCombinedConsideration",
    "extend":"anySimpleType"
  },{
    "name":"AdjustableOrAdjustedDate",
    "documentation":"A type for defining a date that shall be subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
    "relationships":["unadjustedDate->IdentifiedDate[1..1]","dateAdjustments->BusinessDayAdjustments[1..1]","adjustedDate->IdentifiedDate[0..1]","adjustedDate->IdentifiedDate[1..1]"]
  },{
    "name":"ElectricityDeliveryPeriods",
    "documentation":"The different options for specifying the Delivery Periods for a physically settled electricity trade.",
    "relationships":["periods->AdjustableDates[1..1]","periodsSchedule->CommodityCalculationPeriodsSchedule[1..1]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]","settlementPeriods->SettlementPeriods[0..]"],
    "extend":"CommodityDeliveryPeriods"
  },{
    "name":"expiryTime",
    "extend":"anySimpleType"
  },{
    "name":"Allocation",
    "relationships":["allocationTradeId->TradeIdentifier[1..]","partyReference->PartyReference[1..1]","accountReference->AccountReference[0..1]","allocatedFraction[1..1]","allocatedNotional->Money[1..2]","collateral->Collateral[0..1]","creditChargeAmount->Money[0..1]","approvals->Approvals[0..1]","masterConfirmationDate[0..1]","relatedParty->RelatedParty[0..]"]
  },{
    "name":"IDREF",
    "extend":"NCName"
  },{
    "name":"float",
    "extend":"anySimpleType"
  },{
    "name":"WeatherLeg",
    "documentation":"Weather Leg of a Commodity Swap defines Weather Index Swap transactions. Weather Index Swap transactions are OTC derivative transactions which settle financially based on an index calculated from observations of temperature and precipitation at weather stations throughout the world. Sub-Annex C of the 2005 ISDA Commodity Definitions provides definitions and terms for a number of types of weather indices. These indices include: HDD (heating degree days), CDD (cooling degree days), CPD (critical precipitation days). Weather Index Swap transactions result in a cash flow to one of the two counterparties each Calculation Period depending on the relationship between the Settlement Level and the Weather Index Level.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","weatherIndexLevel->WeatherIndex[1..1]","weatherCalculationPeriods->WeatherCalculationPeriods[1..1]","weatherCalculationPeriodsReference->CalculationPeriodsReference[1..1]","weatherNotionalAmount->NonNegativeMoney[1..1]","calculation->WeatherLegCalculation[1..1]","paymentDates->CommodityRelativePaymentDates[1..1]","weatherIndexData->WeatherIndexData[1..1]"],
    "extend":"FinancialSwapLeg"
  },{
    "name":"masterConfirmationAnnexDate",
    "extend":"anySimpleType"
  },{
    "name":"dayCount",
    "extend":"nonNegativeInteger"
  },{
    "name":"ProblemLocation",
    "documentation":"Provides a lexical location (i.e. a line number and character for bad XML) or an XPath location (i.e. place to identify the bad location for valid XML).",
    "extend":"normalizedString"
  },{
    "name":"ResetRelativeToEnum",
    "documentation":"The specification of whether resets occur relative to the first or last day of a calculation period.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationPeriodStartDate"
      },{
        "value":"CalculationPeriodEndDate"
      }]
    },
    "extend":"token"
  },{
    "name":"InterpolationPeriodEnum",
    "documentation":"Defines applicable periods for interpolation.",
    "characteristics":{
      "enumeration":[{
        "value":"Initial"
      },{
        "value":"InitialAndFinal"
      },{
        "value":"Final"
      },{
        "value":"AnyPeriod"
      }]
    },
    "extend":"token"
  },{
    "name":"yieldCurveValuation"
  },{
    "name":"sizeInBytes",
    "extend":"anySimpleType"
  },{
    "name":"fixedLeg"
  },{
    "name":"bullionPhysicalLeg"
  },{
    "name":"Beneficiary",
    "documentation":"A type defining the beneficiary of the funds.",
    "relationships":["routingIds->RoutingIds[1..1]","routingExplicitDetails->RoutingExplicitDetails[1..1]","routingIdsAndExplicitDetails->RoutingIdsAndExplicitDetails[1..1]","beneficiaryPartyReference->PartyReference[0..1]"]
  },{
    "name":"adjustedPrincipalExchangeDate",
    "extend":"anySimpleType"
  },{
    "name":"marketFixedRate",
    "extend":"anySimpleType"
  },{
    "name":"CommodityRelativePaymentDates",
    "documentation":"The Payment Dates of the trade relative to the Calculation Periods.",
    "relationships":["payRelativeTo[1..1]","payRelativeToEvent->CommodityPayRelativeToEvent[1..1]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]","paymentDaysOffset->DateOffset[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]"]
  },{
    "name":"TransformsType",
    "relationships":["Transform->TransformType[1..]"]
  },{
    "name":"volatilityRepresentation"
  },{
    "name":"calculationPeriodNumberOfDays",
    "extend":"nonNegativeInteger"
  },{
    "name":"DirectionalLeg",
    "documentation":"A type describing return which is driven by a Variance Calculation.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]"],
    "extend":"Leg"
  },{
    "name":"AccountName",
    "documentation":"The data type used for the name of the account.",
    "extend":"Scheme"
  },{
    "name":"InterestCalculationMethodEnum",
    "documentation":">Defines whether agent bank is making an interest payment based on the lender pro-rata share at the end of the period or based on the lender position throughout the period. Agent Banks decide which way to calculate the interest for a deal.",
    "characteristics":{
      "enumeration":[{
        "value":"ProRataShare"
      },{
        "value":"FacilityPosition"
      }]
    },
    "extend":"token"
  },{
    "name":"EquityValuation",
    "documentation":"A type for defining how and when an equity option is to be valued.",
    "relationships":["valuationDate->AdjustableDateOrRelativeDateSequence[1..1]","valuationDates->AdjustableRelativeOrPeriodicDates[1..1]","valuationTimeType[0..1]","valuationTime->BusinessCenterTime[0..1]","futuresPriceValuation[0..1]","optionsPriceValuation[0..1]","numberOfValuationDates[0..1]","dividendValuationDates->AdjustableRelativeOrPeriodicDates[0..1]","fPVFinalPriceElectionFallback[0..1]"]
  },{
    "name":"discountRate",
    "extend":"anySimpleType"
  },{
    "name":"upperBarrier",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"Party",
    "documentation":"A type defining a legal entity or a subdivision of a legal entity.Parties can perform multiple roles in a trade lifecycle. For example, the principal parties obligated to make payments from time to time during the term of the trade, but may include other parties involved in, or incidental to, the trade, such as parties acting in the role of novation transferor/transferee, broker, calculation agent, etc. In FpML roles are defined in multiple places within a document.",
    "relationships":["partyId->PartyId[1..]","partyName->PartyName[0..1]","classification->IndustryClassification[0..]","creditRating->CreditRating[0..]","country->CountryCode[0..1]","jurisdiction->GoverningLaw[0..]","organizationType->OrganizationType[0..1]","contactInfo->ContactInformation[0..1]","businessUnit->BusinessUnit[0..]","person->Person[0..]"]
  },{
    "name":"creditAgreementDate",
    "extend":"anySimpleType"
  },{
    "name":"AmountReference",
    "documentation":"Specifies a reference to a monetary amount.",
    "extend":"Reference"
  },{
    "name":"loan"
  },{
    "name":"brokerEquityOption"
  },{
    "name":"type",
    "documentation":"The type of telephone number used to reach a contact.",
    "characteristics":{
      "enumeration":[{
        "value":"Work"
      },{
        "value":"Mobile"
      },{
        "value":"Fax"
      },{
        "value":"Personal"
      }]
    },
    "extend":"token"
  },{
    "name":"creditEventDate",
    "extend":"anySimpleType"
  },{
    "name":"ask",
    "extend":"anySimpleType"
  },{
    "name":"requestTradeReferenceInformationUpdateRetracted"
  },{
    "name":"Money",
    "documentation":"A type defining a currency amount.",
    "relationships":["currency->Currency[1..1]","amount[1..1]"],
    "extend":"MoneyBase"
  },{
    "name":"CreditEvent"
  },{
    "name":"maturityException"
  },{
    "name":"tradeReferenceInformationUpdateAcknowledgement"
  },{
    "name":"ReportSectionIdentification",
    "documentation":"A type that allows the specific report and section to be identified.",
    "relationships":["reportId->ReportId[0..1]","sectionNumber[0..1]"]
  },{
    "name":"unadjustedPaymentDate",
    "extend":"anySimpleType"
  },{
    "name":"J",
    "extend":"base64Binary"
  },{
    "name":"ReportingRegimeName",
    "documentation":"An identifier of an reporting regime or format used for regulatory reporting, for example DoddFrankAct, MiFID, HongKongOTCDRepository, etc.",
    "extend":"Scheme"
  },{
    "name":"strikeQuoteBasis",
    "documentation":"A type which permits the Dual Currency strike quote basis to be expressed in terms of the deposit and alternate currencies.",
    "characteristics":{
      "enumeration":[{
        "value":"DepositCurrencyPerAlternateCurrency"
      },{
        "value":"AlternateCurrencyPerDepositCurrency"
      }]
    },
    "extend":"token"
  },{
    "name":"dayOfWeek",
    "documentation":"A day of the seven-day week.",
    "characteristics":{
      "enumeration":[{
        "value":"MON"
      },{
        "value":"TUE"
      },{
        "value":"WED"
      },{
        "value":"THU"
      },{
        "value":"FRI"
      },{
        "value":"SAT"
      },{
        "value":"SUN"
      }]
    },
    "extend":"token"
  },{
    "name":"discountFactor",
    "extend":"anySimpleType"
  },{
    "name":"EuropeanExercise",
    "documentation":"A type defining the exercise period for a European style option together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fees.",
    "relationships":["expirationDate->AdjustableOrRelativeDate[1..1]","relevantUnderlyingDate->AdjustableOrRelativeDates[0..1]","earliestExerciseTime->BusinessCenterTime[1..1]","expirationTime->BusinessCenterTime[1..1]","partialExercise->PartialExercise[0..1]","exerciseFee->ExerciseFee[0..1]"],
    "extend":"Exercise"
  },{
    "name":"NotionalReference",
    "documentation":"A reference to the notional amount.",
    "extend":"Reference"
  },{
    "name":"fxCurve"
  },{
    "name":"DividendConditions",
    "documentation":"A type describing the conditions governing the payment of dividends to the receiver of the equity return. With the exception of the dividend payout ratio, which is defined for each of the underlying components.",
    "relationships":["dividendReinvestment[0..1]","dividendEntitlement[0..1]","dividendAmount[0..1]","dividendPaymentDate->DividendPaymentDate[0..1]","dividendPeriodEffectiveDate->DateReference[0..1]","dividendPeriodEndDate->DateReference[0..1]","dividendPeriod[1..1]","extraOrdinaryDividends->PartyReference[0..1]","excessDividendAmount[0..1]","currency->IdentifiedCurrency[1..1]","determinationMethod->DeterminationMethod[1..1]","currencyReference->IdentifiedCurrencyReference[1..1]","dividendFxTriggerDate->DividendPaymentDate[0..1]","interestAccrualsMethod->InterestAccrualsCompoundingMethod[0..1]","numberOfIndexUnits[0..1]","declaredCashDividendPercentage[0..1]","declaredCashEquivalentDividendPercentage[0..1]","nonCashDividendTreatment[0..1]","dividendComposition[0..1]","specialDividends[0..1]"]
  },{
    "name":"BusinessUnit",
    "documentation":"A type that represents information about a unit within an organization.",
    "relationships":["name[0..1]","businessUnitId->Unit[0..1]","contactInfo->ContactInformation[0..1]","country->CountryCode[0..1]"]
  },{
    "name":"dividendPayoutConditions",
    "extend":"anySimpleType"
  },{
    "name":"AveragePriceLeg",
    "documentation":"The average price leg of an average price commodity bullion or non-precious metal forward transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","calculationDates->AdjustableDates[1..1]","calculationPeriods->AdjustableDates[1..1]","calculationPeriodsSchedule->CommodityCalculationPeriodsSchedule[1..1]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]","commodity->Commodity[1..1]","quantityReference->QuantityReference[1..1]","pricingStartDate->AdjustableDate[1..1]","calculation->FloatingLegCalculation[1..1]","relativePaymentDates->CommodityRelativePaymentDates[1..1]","paymentDates->AdjustableDatesOrRelativeDateOffset[1..1]","masterAgreementPaymentDates[1..1]"],
    "extend":"CommoditySwapLeg"
  },{
    "name":"mandatorilyClearable",
    "extend":"anySimpleType"
  },{
    "name":"numberOfOptions",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"KeyInfo"
  },{
    "name":"clearingConfirmed"
  },{
    "name":"PartyPortfolioName",
    "documentation":"A type to represent a portfolio name for a particular party.",
    "relationships":["partyReference->PartyReference[1..1]","portfolioName->PortfolioName[1..]"]
  },{
    "name":"BrokerConfirmation",
    "documentation":"Identifies the market sector in which the trade has been arranged.",
    "relationships":["brokerConfirmationType->BrokerConfirmationType[1..1]"]
  },{
    "name":"EquityDerivativeShortFormBase",
    "documentation":"A type for defining the broker equity options.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityEffectiveDate[0..1]","underlyer->Underlyer[1..1]","notional->NonNegativeMoney[0..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","feature->OptionFeatures[0..1]","fxFeature->FxFeature[0..1]","strategyFeature->StrategyFeature[0..1]","strike->EquityStrike[1..1]","spotPrice[0..1]","numberOfOptions[1..1]","equityPremium->EquityPremium[1..1]"],
    "extend":"EquityDerivativeBase"
  },{
    "name":"Document",
    "documentation":"A type defining a content model that includes valuation (pricing and risk) data without expressing any processing intention."
  },{
    "name":"adjustedEarlyTerminationDate",
    "extend":"anySimpleType"
  },{
    "name":"WeatherStationAirport",
    "documentation":"A code identifying a Weather Station Airport (based on the the IATA standard).",
    "extend":"Scheme"
  },{
    "name":"eEPApplicable",
    "extend":"anySimpleType"
  },{
    "name":"faceAmount",
    "extend":"anySimpleType"
  },{
    "name":"InterestLegCalculationPeriodDatesReference",
    "documentation":"Reference to the calculation period dates of the interest leg.",
    "extend":"Reference"
  },{
    "name":"environmentalPhysicalLeg"
  },{
    "name":"FloatingAmountProvisions",
    "relationships":["WACCapInterestProvision[0..1]","stepUpProvision[0..1]"]
  },{
    "name":"resetDate",
    "extend":"anySimpleType"
  },{
    "name":"OptionExercise",
    "documentation":"A structure describing an option exercise.",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]","optionSeller->PartyReference[0..1]","optionBuyer->PartyReference[0..1]","originalTrade->Trade[1..1]","tradeIdentifier->PartyTradeIdentifier[1..]","exerciseDate[0..1]","exerciseTime[0..1]","expiry[1..1]","fullExercise[1..1]","exerciseInNotionalAmount->Money[1..1]","outstandingNotionalAmount->Money[1..1]","exerciseInNumberOfOptions[1..1]","outstandingNumberOfOptions[1..1]","exerciseInNumberOfUnits[1..1]","outstandingNumberOfUnits[1..1]","settlementType[1..1]","cashSettlement->SimplePayment[1..1]","physicalSettlement->PhysicalSettlement[1..1]","payment->NonNegativePayment[0..1]"],
    "extend":"AbstractEvent"
  },{
    "name":"Signature"
  },{
    "name":"Lag",
    "documentation":"An observation period that is offset from a Calculation Period.",
    "relationships":["lagDuration->Period[1..1]","firstObservationDateOffset->Period[0..1]"]
  },{
    "name":"notDomesticLaw",
    "extend":"anySimpleType"
  },{
    "name":"verificationStatusException"
  },{
    "name":"PrincipalExchanges",
    "documentation":"A type defining which principal exchanges occur for the stream.",
    "relationships":["initialExchange[1..1]","finalExchange[1..1]","intermediateExchange[1..1]"]
  },{
    "name":"PartyName",
    "documentation":"The data type used for the legal name of an organization.",
    "extend":"Scheme"
  },{
    "name":"PositionId",
    "documentation":"A unique identifier for the position. The id attribute is defined for intradocument referencing.",
    "extend":"Scheme"
  },{
    "name":"DividendPaymentDate",
    "documentation":"A type describing the date on which the dividend will be paid/received. This type is also used to specify the date on which the FX rate will be determined, when applicable.",
    "relationships":["dividendDateReference[1..1]","paymentDateOffset->Offset[0..1]","adjustableDate->AdjustableDate[1..1]"]
  },{
    "name":"commodityOption"
  },{
    "name":"token",
    "extend":"normalizedString"
  },{
    "name":"CommodityBase",
    "extend":"Scheme"
  },{
    "name":"Seed",
    "extend":"base64Binary"
  },{
    "name":"CalculationAmount",
    "relationships":["currency->Currency[1..1]","amount[1..1]","step->Step[0..]"],
    "extend":"Money"
  },{
    "name":"SettlementTypeEnum",
    "documentation":"Shows how the transaction is to be settled when it is exercised.",
    "extend":"anySimpleType"
  },{
    "name":"NotionalStepRule",
    "documentation":"A type defining a parametric representation of the notional step schedule, i.e. parameters used to generate the notional balance on each step date. The step change in notional can be expressed in terms of either a fixed amount or as a percentage of either the initial notional or previous notional amount. This parametric representation is intended to cover the more common amortizing/accreting.",
    "relationships":["calculationPeriodDatesReference->CalculationPeriodDatesReference[1..1]","stepFrequency->Period[1..1]","firstNotionalStepDate[1..1]","lastNotionalStepDate[1..1]","notionalStepAmount[1..1]","notionalStepRate[1..1]","stepRelativeTo[1..1]"]
  },{
    "name":"TradeMaturity",
    "documentation":"A structure describing a trade maturing.",
    "relationships":["tradeIdentifier->PartyTradeIdentifier[1..]","date[1..1]"]
  },{
    "name":"ExerciseFeeSchedule",
    "documentation":"A type to define a fee or schedule of fees to be payable on the exercise of an option. This fee may be defined as an amount or a percentage of the notional exercised.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","notionalReference->ScheduleReference[1..1]","feeAmountSchedule->AmountSchedule[1..1]","feeRateSchedule->Schedule[1..1]","feePaymentDate->RelativeDateOffset[1..1]"]
  },{
    "name":"ConfirmationDisputed",
    "documentation":"A message indicating that a confirmation has not been agreed by a counterparty.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]","reason->Reason[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"strike",
    "extend":"anySimpleType"
  },{
    "name":"TerminatingEvent",
    "documentation":"A type that describes why a trade terminated.",
    "extend":"Scheme"
  },{
    "name":"observedFxSpotRate",
    "extend":"anySimpleType"
  },{
    "name":"DataDocument",
    "documentation":"A type defining a content model that includes valuation (pricing and risk) data without expressing any processing intention.",
    "relationships":["validation->Validation[0..]","onBehalfOf->OnBehalfOf[0..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[0..]","portfolio->Portfolio[0..]","party->Party[1..]","account->Account[0..]"],
    "extend":"Document"
  },{
    "name":"latestValueDate",
    "extend":"anySimpleType"
  },{
    "name":"PricingDataPointCoordinate",
    "documentation":"A set of index values that identify a pricing data point. For example: (strike = 17%, expiration = 6M, term = 1Y.",
    "relationships":["term->TimeDimension[1..1]","expiration->TimeDimension[1..1]","strike[1..1]","generic->GenericDimension[1..1]"]
  },{
    "name":"MasterConfirmation",
    "documentation":"An entity for defining the master confirmation agreement executed between the parties.",
    "relationships":["masterConfirmationType->MasterConfirmationType[1..1]","masterConfirmationDate[1..1]","masterConfirmationAnnexDate[0..1]","masterConfirmationAnnexType->MasterConfirmationAnnexType[0..1]"]
  },{
    "name":"recallSpread",
    "extend":"anySimpleType"
  },{
    "name":"Knock",
    "documentation":"Knock In means option to exercise comes into existence. Knock Out means option to exercise goes out of existence.",
    "relationships":["knockIn->TriggerEvent[0..1]","knockOut->TriggerEvent[0..1]"]
  },{
    "name":"GasPhysicalLeg",
    "documentation":"Physically settled leg of a physically settled gas transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","deliveryPeriods->GasDeliveryPeriods[1..1]","gas->GasProduct[1..1]","deliveryConditions->GasDelivery[1..1]","deliveryQuantity->GasPhysicalQuantity[1..1]"],
    "extend":"PhysicalSwapLeg"
  },{
    "name":"AdditionalFixedPayments",
    "relationships":["interestShortfallReimbursement[0..1]","principalShortfallReimbursement[0..1]","writedownReimbursement[0..1]"]
  },{
    "name":"FloatingRateCalculation",
    "documentation":"A type defining the floating rate and definitions relating to the calculation of floating rate amounts.",
    "relationships":["floatingRateIndex->FloatingRateIndex[1..1]","indexTenor->Period[0..1]","floatingRateMultiplierSchedule->Schedule[0..1]","spreadSchedule->SpreadSchedule[0..]","rateTreatment[0..1]","capRateSchedule->StrikeSchedule[0..]","floorRateSchedule->StrikeSchedule[0..]","initialRate[0..1]","finalRateRounding->Rounding[0..1]","averagingMethod[0..1]","negativeInterestRateTreatment[0..1]"],
    "extend":"FloatingRate"
  },{
    "name":"ElectricityDeliveryUnitFirm",
    "documentation":"The physical delivery obligation options specific to a unit firm transaction.",
    "relationships":["applicable[1..1]","generationAsset->CommodityDeliveryPoint[0..1]"]
  },{
    "name":"AdjustableDateOrRelativeDateSequence",
    "documentation":"A type describing a date defined as subject to adjustment or defined in reference to another date through one or several date offsets.",
    "relationships":["adjustableDate->AdjustableDate[1..1]","relativeDateSequence->RelativeDateSequence[1..1]"]
  },{
    "name":"limitationPeriod",
    "extend":"integer"
  },{
    "name":"CorrespondentInformation",
    "documentation":"A type that describes the information to identify a correspondent bank that will make delivery of the funds on the paying bank's behalf in the country where the payment is to be made.",
    "relationships":["routingIds->RoutingIds[1..1]","routingExplicitDetails->RoutingExplicitDetails[1..1]","routingIdsAndExplicitDetails->RoutingIdsAndExplicitDetails[1..1]","correspondentPartyReference->PartyReference[0..1]"]
  },{
    "name":"bermudaExercise"
  },{
    "name":"EnvironmentalProductTypeEnum",
    "documentation":"Emissions Product (e.g. allowance or CER).",
    "characteristics":{
      "enumeration":[{
        "value":"EUAllowance"
      },{
        "value":"EUCredit"
      },{
        "value":"AlternativeAllowance"
      },{
        "value":"NOXEmissionsProduct"
      },{
        "value":"RegionalEmissionsProduct"
      },{
        "value":"RGGIEmissionsProduct"
      },{
        "value":"SO2EmissionsProduct"
      },{
        "value":"StateEmissionProduct"
      },{
        "value":"VoluntaryEmissionProduct"
      }]
    },
    "extend":"token"
  },{
    "name":"InstrumentSet",
    "documentation":"A collection of instruments usable for quotation purposes. In future releases, quotable derivative assets may be added after the underlying asset.",
    "relationships":["underlyingAsset->Asset[1..1]","curveInstrument->Asset[1..1]"]
  },{
    "name":"Payment",
    "documentation":"A type for defining payments. In Transparency view, normally the payer and receiver party references are not used; however they may be provided if necessary for administrative activities such as Reporting Party Determination in FX.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentAmount->NonNegativeMoney[1..1]","paymentDate->AdjustableOrAdjustedDate[0..1]","paymentType->PaymentType[0..1]","settlementInformation->SettlementInformation[0..1]","discountFactor[0..1]","presentValueAmount->Money[0..1]"],
    "extend":"PaymentBase"
  },{
    "name":"varianceOptionTransactionSupplement"
  },{
    "name":"allDividends",
    "extend":"anySimpleType"
  },{
    "name":"StrikeSpread",
    "documentation":"A type for defining a strike spread feature.",
    "relationships":["upperStrike->OptionStrike[1..1]","upperStrikeNumberOfOptions[1..1]"]
  },{
    "name":"EquityPremium",
    "documentation":"A type used to describe the amount paid for an equity option.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","premiumType[0..1]","paymentAmount->NonNegativeMoney[0..1]","paymentDate->AdjustableDate[0..1]","swapPremium[0..1]","pricePerOption->NonNegativeMoney[0..1]","percentageOfNotional[0..1]"],
    "extend":"PaymentBase"
  },{
    "name":"VersionedContractId",
    "documentation":"Contract Id with Version Support",
    "relationships":["contractId->ContractId[1..1]","version[1..1]","effectiveDate->IdentifiedDate[0..1]"]
  },{
    "name":"VerificationStatus",
    "documentation":"The verification status of the position as reported by the sender (Verified, Disputed).",
    "extend":"Scheme"
  },{
    "name":"Swaption",
    "documentation":"A type to define an option on a swap.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","premium->Payment[0..]","exercise->Exercise[1..1]","exerciseProcedure->ExerciseProcedure[0..1]","calculationAgent->CalculationAgent[0..1]","cashSettlement->CashSettlement[1..1]","physicalSettlement->SwaptionPhysicalSettlement[1..1]","swaptionStraddle[1..1]","swaptionAdjustedDates->SwaptionAdjustedDates[0..1]","swap->Swap[1..1]"],
    "extend":"Product"
  },{
    "name":"CommoditySwapLeg",
    "documentation":"The average price leg of an average price commodity bullion or non-precious metal forward transaction.",
    "extend":"Leg"
  },{
    "name":"SettlementPriceSource",
    "documentation":"The source from which the settlement price is to be obtained, e.g. a Reuters page, Prezzo di Riferimento, etc.",
    "extend":"Scheme"
  },{
    "name":"FxAverageRateObservationSchedule",
    "documentation":"A type that describes average rate options rate observations. This is used to describe a parametric frequency of rate observations against a particular rate. Typical frequencies might include daily, every Friday, etc.",
    "relationships":["startDate[1..1]","endDate[1..1]","calculationPeriodFrequency->CalculationPeriodFrequency[1..1]"]
  },{
    "name":"LengthUnitEnum",
    "documentation":"Used for indicating the length unit in the Resource type.",
    "characteristics":{
      "enumeration":[{
        "value":"Pages"
      },{
        "value":"TimeUnit"
      }]
    },
    "extend":"token"
  },{
    "name":"numberOfIndexUnits",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"agreementsRegardingHedging",
    "extend":"anySimpleType"
  },{
    "name":"RateSourcePage",
    "extend":"Scheme"
  },{
    "name":"Trigger",
    "documentation":"Trigger point at which feature is effective.",
    "relationships":["level[1..1]","levelPercentage[1..1]","creditEvents->CreditEvents[1..1]","creditEventsReference->CreditEventsReference[1..1]","triggerType[0..1]","triggerTimeType[0..1]"]
  },{
    "name":"compounding",
    "extend":"anySimpleType"
  },{
    "name":"AccountReference",
    "documentation":"Reference to an account.",
    "extend":"Reference"
  },{
    "name":"SpreadSchedule",
    "documentation":"Adds an optional spread type element to the Schedule to identify a long or short spread value.",
    "relationships":["initialValue[1..1]","step->Step[0..]","type->SpreadScheduleType[0..1]"],
    "extend":"Schedule"
  },{
    "name":"fra"
  },{
    "name":"CommodityProductGrade",
    "documentation":"A scheme identifying the grade of physical commodity product to be delivered.",
    "extend":"Scheme"
  },{
    "name":"Rate",
    "documentation":"A type defining a floating rate."
  },{
    "name":"triggerRate",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"AssetPool",
    "documentation":"Characterise the asset pool behind an asset backed bond.",
    "relationships":["version[1..1]","effectiveDate->IdentifiedDate[0..1]","initialFactor[1..1]","currentFactor[0..1]"]
  },{
    "name":"OptionExpiryBase",
    "documentation":"A structure describing an option expiring.",
    "relationships":["tradeIdentifier->PartyTradeIdentifier[1..]","date[1..1]","time[1..1]"]
  },{
    "name":"YieldCurve",
    "documentation":"A generic yield curve object, which can be valued in a variety of ways.",
    "relationships":["name[0..1]","currency->Currency[0..1]","algorithm[0..1]","forecastRateIndex->ForecastRateIndex[0..1]"],
    "extend":"PricingStructure"
  },{
    "name":"firstPaymentDate",
    "extend":"anySimpleType"
  },{
    "name":"GracePeriodExtension",
    "relationships":["applicable[1..1]","gracePeriod->Offset[0..1]"]
  },{
    "name":"publiclyReported",
    "extend":"anySimpleType"
  },{
    "name":"flatRate",
    "documentation":"The method by which the Flat Rate is calculated for a commodity freight transaction.",
    "characteristics":{
      "enumeration":[{
        "value":"Fixed"
      },{
        "value":"Floating"
      }]
    },
    "extend":"token"
  },{
    "name":"firstNotionalStepDate",
    "extend":"anySimpleType"
  },{
    "name":"recoveryRate",
    "extend":"anySimpleType"
  },{
    "name":"TelephoneTypeEnum",
    "documentation":"The type of telephone number used to reach a contact.",
    "characteristics":{
      "enumeration":[{
        "value":"Work"
      },{
        "value":"Mobile"
      },{
        "value":"Fax"
      },{
        "value":"Personal"
      }]
    },
    "extend":"token"
  },{
    "name":"RelatedBusinessUnit",
    "relationships":["businessUnitReference->BusinessUnitReference[1..1]","role->BusinessUnitRole[1..1]"]
  },{
    "name":"ExtendibleProvisionAdjustedDates",
    "documentation":"A type defining the adjusted dates associated with a provision to extend a swap.",
    "relationships":["extensionEvent->ExtensionEvent[1..]"]
  },{
    "name":"PricingStructureReference",
    "documentation":"Reference to a pricing structure or any derived components (i.e. yield curve).",
    "extend":"Reference"
  },{
    "name":"BusinessProcess",
    "documentation":"A type that can be used to identify the type of business process in a request. Examples include Allocation, Clearing, Confirmation, etc.",
    "extend":"Scheme"
  },{
    "name":"ValuationDatesReference",
    "documentation":"Reference to a Valuation dates node.",
    "extend":"Reference"
  },{
    "name":"InterestShortfallCapEnum",
    "documentation":"The specification of the interest shortfall cap, applicable to mortgage derivatives.",
    "characteristics":{
      "enumeration":[{
        "value":"Fixed"
      },{
        "value":"Variable"
      }]
    },
    "extend":"token"
  },{
    "name":"Trader",
    "extend":"Scheme"
  },{
    "name":"maximumBoundaryPercent",
    "extend":"anySimpleType"
  },{
    "name":"WACCapInterestProvision",
    "extend":"anySimpleType"
  },{
    "name":"SettlementRateSource",
    "documentation":"A type describing the method for obtaining a settlement rate.",
    "relationships":["informationSource->InformationSource[1..1]","cashSettlementReferenceBanks->CashSettlementReferenceBanks[1..1]"]
  },{
    "name":"extraElement",
    "extend":"anySimpleType"
  },{
    "name":"AveragingMethodEnum",
    "documentation":"The method of calculation to be used when averaging rates. Per ISDA 2000 Definitions, Section 6.2. Certain Definitions Relating to Floating Amounts.",
    "characteristics":{
      "enumeration":[{
        "value":"Unweighted"
      },{
        "value":"Weighted"
      }]
    },
    "extend":"token"
  },{
    "name":"CommodityDeliveryRisk",
    "documentation":"A scheme identifying how the parties to the trade aportion responsibility for the delivery of the commodity product (for example Free On Board, Cost, Insurance, Freight)",
    "extend":"Scheme"
  },{
    "name":"SplitSettlement",
    "documentation":"A type that supports the division of a gross settlement amount into a number of split settlements, each requiring its own settlement instruction.",
    "relationships":["splitSettlementAmount->Money[1..1]","beneficiaryBank->Routing[0..1]","beneficiary->Routing[1..1]"]
  },{
    "name":"RelatedPerson",
    "relationships":["personReference->PersonReference[1..1]","role->PersonRole[1..1]"]
  },{
    "name":"PCDeliverableObligationCharac",
    "relationships":["applicable[1..1]","partialCashSettlement[0..1]"]
  },{
    "name":"AdjustedPaymentDates",
    "relationships":["adjustedPaymentDate[1..1]","paymentAmount->Money[1..1]"]
  },{
    "name":"AdditionalTerm",
    "extend":"Scheme"
  },{
    "name":"ElectricityTransmissionContingency",
    "documentation":"A structure to specify the tranmission contingency and the party that bears the obligation.",
    "relationships":["contingency->ElectricityTransmissionContingencyType[1..1]","contingentParty->PartyReference[1..2]"]
  },{
    "name":"ExerciseNotice",
    "documentation":"A type defining to whom and where notice of execution should be given. The partyReference refers to one of the principal parties of the trade. If present the exerciseNoticePartyReference refers to a party, other than the principal party, to whome notice should be given.",
    "relationships":["partyReference->PartyReference[1..1]","exerciseNoticePartyReference->PartyReference[0..1]","businessCenter->BusinessCenter[1..1]"]
  },{
    "name":"ConfirmationRetracted",
    "documentation":"A message indicating that a confirmation request has been withdrawn by the submitter.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"adjustedTerminationDate",
    "extend":"anySimpleType"
  },{
    "name":"valuationDate",
    "extend":"anySimpleType"
  },{
    "name":"BusinessDayAdjustments",
    "documentation":"A type defining the business day convention and financial business centers used for adjusting any relevant date if it would otherwise fall on a day that is not a business day in the specified business centers.",
    "relationships":["businessDayConvention[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]"]
  },{
    "name":"allGuarantees",
    "extend":"anySimpleType"
  },{
    "name":"CorrelationAmount",
    "documentation":"Correlation Amount.",
    "relationships":["calculationDates->AdjustableRelativeOrPeriodicDates[0..1]","observationStartDate->AdjustableOrRelativeDate[0..1]","optionsExchangeDividends[0..1]","additionalDividends[0..1]","allDividends[0..1]","correlation->Correlation[1..1]"],
    "extend":"CalculatedAmount"
  },{
    "name":"PersonId",
    "documentation":"An identifier used to identify an individual person.",
    "extend":"Scheme"
  },{
    "name":"quoteBasis",
    "documentation":"How an exchange rate is quoted.",
    "characteristics":{
      "enumeration":[{
        "value":"Currency1PerCurrency2"
      },{
        "value":"Currency2PerCurrency1"
      }]
    },
    "extend":"token"
  },{
    "name":"PaymentType",
    "extend":"Scheme"
  },{
    "name":"excluded",
    "extend":"anySimpleType"
  },{
    "name":"FxCashSettlement",
    "documentation":"A type that is used for describing cash settlement of an option / non deliverable forward. It includes the currency to settle into together with the fixings required to calculate the currency amount.",
    "relationships":["settlementCurrency->Currency[1..1]","fixing->FxFixing[0..]"]
  },{
    "name":"indexFactor",
    "extend":"anySimpleType"
  },{
    "name":"unsignedInt",
    "extend":"unsignedLong"
  },{
    "name":"executionRetracted"
  },{
    "name":"BusinessEventIdentifier",
    "documentation":"A type defining an event identifier issued by the indicated party.",
    "relationships":["partyReference->PartyReference[1..1]","accountReference->AccountReference[0..1]","eventId->EventId[1..1]"]
  },{
    "name":"QuoteBasisEnum",
    "documentation":"How an exchange rate is quoted.",
    "characteristics":{
      "enumeration":[{
        "value":"Currency1PerCurrency2"
      },{
        "value":"Currency2PerCurrency1"
      }]
    },
    "extend":"token"
  },{
    "name":"PortfolioReference",
    "documentation":"A structure used to group together individual messages that can be acted on at a group level.",
    "relationships":["portfolioName->PortfolioName[1..1]","sequenceNumber[1..1]","submissionsComplete[0..1]"],
    "extend":"PortfolioReferenceBase"
  },{
    "name":"eventStatusResponse"
  },{
    "name":"fallbackBondApplicable",
    "extend":"anySimpleType"
  },{
    "name":"WeeklyRollConventionEnum",
    "documentation":"The specification of a weekly roll day.",
    "extend":"anySimpleType"
  },{
    "name":"AssetValuation",
    "documentation":"A structure that holds a set of measures about an asset, including possibly their sensitivities.",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","quote->Quotation[0..]","fxRate->FxRate[0..]"],
    "extend":"Valuation"
  },{
    "name":"LegIdentifier",
    "documentation":"Version aware identification of a leg.",
    "relationships":["legId->LegId[1..1]","version[1..1]","effectiveDate->IdentifiedDate[0..1]"]
  },{
    "name":"CompoundingRate",
    "documentation":"A type defining a compounding rate. The compounding interest can either point back to the floating rate calculation of interest calculation node on the Interest Leg, or be defined specifically.",
    "relationships":["interestLegRate->FloatingRateCalculationReference[1..1]","specificRate->InterestAccrualsMethod[1..1]"]
  },{
    "name":"ValuationPostponement",
    "documentation":"Specifies how long to wait to get a quote from a settlement rate option upon a price source disruption.",
    "relationships":["maximumDaysOfPostponement[1..1]"]
  },{
    "name":"BulletPayment",
    "documentation":"A product to represent a single cashflow.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","payment->Payment[1..1]"],
    "extend":"Product"
  },{
    "name":"minimumExclusive",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"curveInstrument"
  },{
    "name":"publicReportUpdated",
    "extend":"anySimpleType"
  },{
    "name":"AbsoluteTolerance",
    "documentation":"The acceptable tolerance in the delivered quantity of a physical commodity product in terms of a number of units of that product.",
    "relationships":["positive[1..1]","negative[1..1]","unit->QuantityUnit[1..1]","optionOwnerPartyReference->PartyReference[0..1]"]
  },{
    "name":"CoalProduct",
    "documentation":"A type defining the characteristics of the coal being traded in a physically settled gas transaction.",
    "relationships":["type->CoalProductType[1..1]","coalProductSpecifications->CoalProductSpecifications[1..1]","source->CoalProductSource[1..]","sCoTASpecifications[0..1]","btuQualityAdjustment->CoalQualityAdjustments[1..1]","so2QualityAdjustment->CoalQualityAdjustments[0..1]"]
  },{
    "name":"ValuationScenario",
    "documentation":"A set of rules for generating a valuation.",
    "relationships":["name[0..1]","valuationDate->IdentifiedDate[1..1]","marketReference->MarketReference[0..1]","shift->PricingParameterShift[0..]","replacement->PricingInputReplacement[0..]"]
  },{
    "name":"BusinessCenters",
    "documentation":"A type for defining business day calendar used in determining whether a day is a business day or not. A list of business day calendar locations may be ordered in the document alphabetically based on business day calendar location code. An FpML document containing an unordered business day calendar location list is still regarded as a conformant document.",
    "relationships":["businessCenter->BusinessCenter[1..]"]
  },{
    "name":"repudiationMoratorium"
  },{
    "name":"ExternalDocument",
    "documentation":"A for holding information about documents external to the FpML.",
    "relationships":["mimeType->MimeType[1..1]","string[1..1]","hexadecimalBinary[1..1]","base64Binary[1..1]","url[1..1]","attachmentReference->HTTPAttachmentReference[1..1]"]
  },{
    "name":"followUpConfirmation",
    "extend":"anySimpleType"
  },{
    "name":"cashSettlementBusinessDays",
    "extend":"integer"
  },{
    "name":"maximumNumberOfOptions",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"PartyMessageInformation",
    "documentation":"A type defining additional information that may be recorded against a message.",
    "relationships":["partyReference->PartyReference[1..1]"]
  },{
    "name":"TradeId",
    "documentation":"A trade reference identifier allocated by a party. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
    "extend":"Scheme"
  },{
    "name":"InstrumentTradeDetails",
    "documentation":"The economics of a trade of a multiply traded instrument.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","underlyingAsset->Asset[1..1]","quantity->InstrumentTradeQuantity[0..1]","pricing->InstrumentTradePricing[0..1]","principal->InstrumentTradePrincipal[0..1]"],
    "extend":"Product"
  },{
    "name":"RoutingId",
    "extend":"Scheme"
  },{
    "name":"MainPublication",
    "documentation":"A type to define the main publication source.",
    "extend":"Scheme"
  },{
    "name":"PaymentDatesReference",
    "documentation":"Reference to a payment dates structure.",
    "extend":"Reference"
  },{
    "name":"quotationMethod",
    "documentation":"The specification of the type of quotation rate to be obtained from each cash settlement reference bank.",
    "characteristics":{
      "enumeration":[{
        "value":"Bid"
      },{
        "value":"Ask"
      },{
        "value":"Mid"
      },{
        "value":"ExercisingPartyPays"
      }]
    },
    "extend":"token"
  },{
    "name":"InterestLeg",
    "documentation":"A type describing the fixed income leg of the equity swap.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","interestLegCalculationPeriodDates->InterestLegCalculationPeriodDates[1..1]","notional->ReturnSwapNotional[1..1]","interestAmount->LegAmount[1..1]","interestCalculation->InterestCalculation[1..1]","stubCalculationPeriod->StubCalculationPeriod[0..1]"],
    "extend":"DirectionalLeg"
  },{
    "name":"publiclyAvailableInformation",
    "extend":"anySimpleType"
  },{
    "name":"CommodityDayTypeEnum",
    "documentation":"A day type classification used in counting the number of days between two dates for a commodity transaction.",
    "extend":"anySimpleType"
  },{
    "name":"PayRelativeToEnum",
    "documentation":"The specification of whether payments occur relative to the calculation period start or end date, or the reset date.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationPeriodStartDate"
      },{
        "value":"CalculationPeriodEndDate"
      },{
        "value":"LastPricingDate"
      },{
        "value":"ResetDate"
      },{
        "value":"ValuationDate"
      }]
    },
    "extend":"token"
  },{
    "name":"averagingInOut",
    "documentation":"The type of averaging used in an Asian option.",
    "characteristics":{
      "enumeration":[{
        "value":"In"
      },{
        "value":"Out"
      },{
        "value":"Both"
      }]
    },
    "extend":"token"
  },{
    "name":"InterestAccrualsMethod",
    "documentation":"A type defining the way in which interests are accrued: the applicable rate (fixed or floating reference) and the compounding method.",
    "relationships":["floatingRateCalculation->FloatingRateCalculation[1..1]","fixedRate[1..1]"]
  },{
    "name":"CommodityPhysicalQuantity",
    "documentation":"A type defining the physical quantity of the commodity to be delivered.",
    "relationships":["physicalQuantity->CommodityNotionalQuantity[1..1]","physicalQuantitySchedule->CommodityPhysicalQuantitySchedule[1..1]","totalPhysicalQuantity->UnitQuantity[0..1]"],
    "extend":"CommodityPhysicalQuantityBase"
  },{
    "name":"allocationRefused"
  },{
    "name":"notContingent",
    "extend":"anySimpleType"
  },{
    "name":"CommodityHubCode",
    "documentation":"A scheme identifying the code for a hub or other reference for a physically settled commodity trade.",
    "extend":"Scheme"
  },{
    "name":"MgmtData"
  },{
    "name":"publicSource",
    "extend":"anySimpleType"
  },{
    "name":"BusinessCenter",
    "documentation":"A code identifying a business day calendar location. A business day calendar location is drawn from the list identified by the business day calendar location scheme.",
    "extend":"Scheme"
  },{
    "name":"CompressionActivity",
    "documentation":"A type that shows how multiple trades have been combined into a result.",
    "relationships":["compressionType->CompressionType[0..1]","replacementTradeIdentifier->TradeIdentifier[0..1]","originatingTradeIdentifier->TradeIdentifier[0..]","replacementTradeId->TradeId[0..1]","originatingTradeId->TradeId[0..]"]
  },{
    "name":"Object"
  },{
    "name":"FxSingleLeg",
    "documentation":"A type defining either a spot or forward FX transactions.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","exchangedCurrency1->Payment[1..1]","exchangedCurrency2->Payment[1..1]","dealtCurrency[0..1]","tenorName[1..1]","tenorPeriod->Period[1..1]","valueDate[1..1]","currency1ValueDate[1..1]","currency2ValueDate[1..1]","exchangeRate->ExchangeRate[1..1]","nonDeliverableSettlement->FxCashSettlement[0..1]"],
    "extend":"Product"
  },{
    "name":"SinglePartyOption",
    "documentation":"A type describing the buyer and seller of an option.",
    "relationships":["buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]"]
  },{
    "name":"calculationAgentParty",
    "documentation":"The specification of how a calculation agent will be determined.",
    "characteristics":{
      "enumeration":[{
        "value":"ExercisingParty"
      },{
        "value":"NonExercisingParty"
      },{
        "value":"AsSpecifiedInMasterAgreement"
      },{
        "value":"AsSpecifiedInStandardTermsSupplement"
      }]
    },
    "extend":"token"
  },{
    "name":"creditEventAcknowledgement"
  },{
    "name":"floatingRateMultiplier",
    "extend":"anySimpleType"
  },{
    "name":"Calculation",
    "documentation":"A type definining the parameters used in the calculation of fixed or floating calculation period amounts.",
    "relationships":["notionalSchedule->Notional[1..1]","fxLinkedNotionalSchedule->FxLinkedNotionalSchedule[1..1]","fixedRateSchedule->Schedule[1..1]","futureValueNotional->FutureValueAmount[0..1]","rateCalculation->Rate[1..1]","dayCountFraction->DayCountFraction[1..1]","discounting->Discounting[0..1]","compoundingMethod[0..1]"]
  },{
    "name":"ContractualDefinitions",
    "documentation":"The definitions, such as those published by ISDA, that will define the terms of the trade.",
    "extend":"Scheme"
  },{
    "name":"EquityEuropeanExercise",
    "documentation":"A type for defining exercise procedures associated with a European style exercise of an equity option.",
    "relationships":["expirationDate->AdjustableOrRelativeDate[1..1]","equityExpirationTimeType[1..1]","equityExpirationTime->BusinessCenterTime[0..1]","expirationTimeDetermination->DeterminationMethod[1..1]"],
    "extend":"Exercise"
  },{
    "name":"OptionalEarlyTerminationAdjustedDates",
    "documentation":"A type defining the adjusted dates associated with an optional early termination provision.",
    "relationships":["earlyTerminationEvent->EarlyTerminationEvent[1..]"]
  },{
    "name":"QuoteTiming",
    "documentation":"The type of the time of the quote.",
    "extend":"Scheme"
  },{
    "name":"Tranche",
    "documentation":"This type represents a CDS Tranche.",
    "relationships":["attachmentPoint[1..1]","exhaustionPoint[1..1]","incurredRecoveryApplicable[0..1]"]
  },{
    "name":"EnvironmentalAbandonmentOfSchemeEnum",
    "documentation":"Upon the occurrence of an Abandonment of Scheme, as defined in clause (h)(iv) of the Emissions Annex, one of the following elections, the specific terms of which are set forth in clause (b)(iii) of the Emissions Annex, will govern the partiesâ€™ rights and obligations with respect to this Emissions Transaction. If none of the above options is selected, Option A(1) will apply.",
    "characteristics":{
      "enumeration":[{
        "value":"OptionA(1)"
      },{
        "value":"OptionA(2)"
      },{
        "value":"OptionB"
      },{
        "value":"OptionC"
      }]
    },
    "extend":"token"
  },{
    "name":"YieldCurveMethod",
    "documentation":"A type defining the parameters required for each of the ISDA defined yield curve methods for cash settlement.",
    "relationships":["settlementRateSource->SettlementRateSource[0..1]","quotationRateType[1..1]"]
  },{
    "name":"FixedAmountCalculation",
    "relationships":["calculationAmount->CalculationAmount[0..1]","fixedRate->FixedRate[1..1]","dayCountFraction->DayCountFraction[0..1]"]
  },{
    "name":"HourMinuteTime",
    "documentation":"A type defining a time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
    "extend":"time"
  },{
    "name":"EquityStrike",
    "documentation":"A type for defining the strike price for an equity option. The strike price is either: (i) in respect of an index option transaction, the level of the relevant index specified or otherwise determined in the transaction; or (ii) in respect of a share option transaction, the price per share specified or otherwise determined in the transaction. This can be expressed either as a percentage of notional amount or as an absolute value.",
    "relationships":["strikePrice[1..1]","strikePercentage[1..1]","strikeDeterminationDate->AdjustableOrRelativeDate[0..1]","currency->Currency[0..1]"]
  },{
    "name":"WeatherIndexData",
    "relationships":["referenceLevel->ReferenceLevel[1..1]","dataProvider->DataProvider[1..1]","finalEditedData[1..1]","weatherStation->WeatherStation[1..1]","weatherStationFallback->WeatherStation[1..1]","weatherStationSecondFallback->WeatherStation[1..1]","alternativeDataProvider[1..1]","synopticDataFallback[1..1]","adjustmentToFallbackWeatherStation[0..1]","primaryDisruptionFallbacks->DisruptionFallback[0..1]","secondaryDisruptionFallbacks->DisruptionFallback[0..1]"]
  },{
    "name":"paymentDelay",
    "extend":"anySimpleType"
  },{
    "name":"rateTreatment",
    "documentation":"The specification of methods for converting rates from one basis to another.",
    "characteristics":{
      "enumeration":[{
        "value":"BondEquivalentYield"
      },{
        "value":"MoneyMarketYield"
      }]
    },
    "extend":"token"
  },{
    "name":"TradeHeader",
    "documentation":"A type defining trade related information which is not product specific.",
    "relationships":["partyTradeIdentifier->PartyTradeIdentifier[1..]","partyTradeInformation->PartyTradeInformation[0..]","tradeDate->IdentifiedDate[1..1]","clearedDate->IdentifiedDate[0..1]"]
  },{
    "name":"DividendSwapOptionTransactionSupplement",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityPremium->EquityPremium[1..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","exchangeLookAlike[0..1]","methodOfAdjustment[0..1]","optionEntitlement[1..1]","multiplier[1..1]","dividendSwapTransactionSupplement->DividendSwapTransactionSupplement[1..1]"],
    "extend":"OptionBase"
  },{
    "name":"PositionOriginEnum",
    "documentation":"A type used to report how a position originated.",
    "characteristics":{
      "enumeration":[{
        "value":"Trade"
      },{
        "value":"Allocation"
      },{
        "value":"Novation"
      },{
        "value":"Netting"
      },{
        "value":"Exercise"
      }]
    },
    "extend":"token"
  },{
    "name":"spreadConversionFactor",
    "extend":"anySimpleType"
  },{
    "name":"effectiveTo",
    "extend":"anySimpleType"
  },{
    "name":"agreementDate",
    "extend":"anySimpleType"
  },{
    "name":"commodityForward"
  },{
    "name":"DerivedValuationScenario",
    "documentation":"A valuation scenario that is derived from another valuation scenario.",
    "relationships":["name[0..1]","baseValuationScenario->ValuationScenarioReference[1..1]","valuationDate->IdentifiedDate[0..1]","marketReference->MarketReference[0..1]","shift->PricingParameterShift[0..]"]
  },{
    "name":"VarianceOptionTransactionSupplement",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityPremium->EquityPremium[1..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","exchangeLookAlike[0..1]","methodOfAdjustment[0..1]","optionEntitlement[1..1]","multiplier[1..1]","varianceSwapTransactionSupplement->VarianceSwapTransactionSupplement[1..1]"],
    "extend":"OptionBase"
  },{
    "name":"RequestEventStatus",
    "documentation":"A type defining the content model for a message allowing one party to query the status of one event (trade or post-trade event) previously sent to another party.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","businessProcess->BusinessProcess[0..1]","eventIdentifier->EventIdentifier[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"DSAKeyValueType",
    "relationships":["P[1..1]","Q[1..1]","G[0..1]","Y[1..1]","J[0..1]","Seed[1..1]","PgenCounter[1..1]"]
  },{
    "name":"ENTITY",
    "extend":"NCName"
  },{
    "name":"TradeIdentifier",
    "documentation":"A type defining one or more trade identifiers allocated to the trade by a party. A link identifier allows the trade to be associated with other related trades, e.g. trades forming part of a larger structured transaction. It is expected that for external communication of trade there will be only one tradeId sent in the document per party.",
    "relationships":["issuer->IssuerId[1..1]","tradeId->TradeId[1..1]","partyReference->PartyReference[1..1]","accountReference->AccountReference[0..1]","tradeId->TradeId[1..1]","versionedTradeId->VersionedTradeId[1..1]"]
  },{
    "name":"PricingDataPointCoordinateReference",
    "documentation":"Reference to a Pricing Data Point Coordinate.",
    "extend":"Reference"
  },{
    "name":"principalShortfallReimbursement",
    "extend":"anySimpleType"
  },{
    "name":"minimumInclusive",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"multipleCreditEventNotices",
    "extend":"anySimpleType"
  },{
    "name":"FxDigitalOption",
    "documentation":"Describes an option having a triggerable fixed payout.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","tenorPeriod->Period[0..1]","americanExercise->FxDigitalAmericanExercise[1..1]","touch->FxTouch[1..]","europeanExercise->FxEuropeanExercise[1..1]","trigger->FxTrigger[1..]","exerciseProcedure->ExerciseProcedure[0..1]","payout->FxOptionPayout[1..1]","premium->FxOptionPremium[0..]"],
    "extend":"Option"
  },{
    "name":"dateTime",
    "extend":"anySimpleType"
  },{
    "name":"QuantityReference",
    "documentation":"A pointer tyle reference to a Quantity defined elsewhere.",
    "extend":"Reference"
  },{
    "name":"vegaNotionalAmount",
    "extend":"anySimpleType"
  },{
    "name":"confirmationAcknowledgement"
  },{
    "name":"fixedSettlement",
    "extend":"anySimpleType"
  },{
    "name":"ElectricityPhysicalDeliveryQuantity",
    "documentation":"A type defining the physical quantity of the electricity to be delivered.",
    "relationships":["quantityUnit->QuantityUnit[1..1]","quantityFrequency->CommodityQuantityFrequency[1..1]","quantity[1..1]","settlementPeriodsReference->SettlementPeriodsReference[1..]"],
    "extend":"CommodityNotionalQuantity"
  },{
    "name":"EventId",
    "documentation":"A post-trade event reference identifier allocated by a party. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
    "extend":"Scheme"
  },{
    "name":"rateIndex"
  },{
    "name":"lossOfStockBorrow",
    "extend":"anySimpleType"
  },{
    "name":"NegativeInterestRateTreatmentEnum",
    "documentation":"The method of calculating payment obligations when a floating rate is negative (either due to a quoted negative floating rate or by operation of a spread that is subtracted from the floating rate).",
    "characteristics":{
      "enumeration":[{
        "value":"NegativeInterestRateMethod"
      },{
        "value":"ZeroInterestRateMethod"
      }]
    },
    "extend":"token"
  },{
    "name":"RequestAllocation",
    "documentation":"A message requesting that a trade be split among several accounts.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","relatedParty->RelatedParty[0..]","blockTradeIdentifier->TradeIdentifier[1..1]","allocations->Allocations[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"weight",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"requestExecution"
  },{
    "name":"GasDelivery",
    "documentation":"The specification of the gas to be delivered.",
    "relationships":["deliveryPoint->GasDeliveryPoint[1..1]","entryPoint->CommodityDeliveryPoint[1..1]","withdrawalPoint->CommodityDeliveryPoint[1..1]","deliveryType[1..1]","buyerHub->CommodityHub[1..1]","sellerHub->CommodityHub[1..1]"]
  },{
    "name":"Withdrawal",
    "documentation":"A structure describing the removal of a trade from a service, such as a reporting service.",
    "relationships":["partyTradeIdentifier->PartyTradeIdentifier[1..]","effectiveDate[1..1]","requestedAction->RequestedWithdrawalAction[0..1]","reason->WithdrawalReason[0..]"]
  },{
    "name":"DividendPeriodEnum",
    "documentation":"Defines the First Period or the Second Period, as specified in the 2002 ISDA Equity Derivatives Definitions.",
    "characteristics":{
      "enumeration":[{
        "value":"FirstPeriod"
      },{
        "value":"SecondPeriod"
      }]
    },
    "extend":"token"
  },{
    "name":"CompressionType",
    "documentation":"A type that identifies the type of trade amalgamation, for example netting or portfolio compression.",
    "extend":"Scheme"
  },{
    "name":"gMonth",
    "extend":"anySimpleType"
  },{
    "name":"tradeReferenceInformationUpdateException"
  },{
    "name":"genericProduct"
  },{
    "name":"ClearanceSystem",
    "documentation":"Unless otherwise specified, the principal clearance system customarily used for settling trades in the relevant underlying.",
    "extend":"Scheme"
  },{
    "name":"AbstractEvent",
    "documentation":"Abstract base type for all events.",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]"]
  },{
    "name":"strategy"
  },{
    "name":"TimeTypeEnum",
    "documentation":"Defines points in the day when equity option exercise and valuation can occur.",
    "characteristics":{
      "enumeration":[{
        "value":"Close"
      },{
        "value":"Open"
      },{
        "value":"OSP"
      },{
        "value":"SpecificTime"
      },{
        "value":"XETRA"
      },{
        "value":"DerivativesClose"
      },{
        "value":"AsSpecifiedInMasterConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"adjustedFxSpotFixingDate",
    "extend":"anySimpleType"
  },{
    "name":"CalculationPeriodDatesReference",
    "documentation":"Reference to a calculation period dates component.",
    "extend":"Reference"
  },{
    "name":"CommoditySwaption",
    "documentation":"Commodity Swaption.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","commoditySwap->CommoditySwaptionUnderlying[1..1]","physicalExercise->CommodityPhysicalExercise[1..1]","premium->CommodityPremium[1..1]","commonPricing[0..1]","marketDisruption->CommodityMarketDisruption[0..1]","settlementDisruption[0..1]","rounding->Rounding[0..1]"],
    "extend":"Product"
  },{
    "name":"RelativeDates",
    "documentation":"A type describing a set of dates defined as relative to another set of dates.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","dayType[0..1]","businessDayConvention[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]","dateRelativeTo->DateReference[1..1]","adjustedDate->IdentifiedDate[0..1]","periodSkip[0..1]","scheduleBounds->DateRange[0..1]"],
    "extend":"RelativeDateOffset"
  },{
    "name":"CashPhysicalEnum",
    "documentation":"Shows how the transaction is to be settled when it is exercised.",
    "characteristics":{
      "enumeration":[{
        "value":"Cash"
      },{
        "value":"Physical"
      }]
    },
    "extend":"token"
  },{
    "name":"SimplePayment",
    "documentation":"A complex type to specified payments in a simpler fashion than the Payment type. This construct should be used from the version 4.3 onwards.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentAmount->NonNegativeMoney[1..1]","paymentDate->AdjustableOrRelativeDate[1..1]"],
    "extend":"PaymentBase"
  },{
    "name":"PubliclyAvailableInformation",
    "relationships":["standardPublicSources[0..1]","publicSource[0..]","specifiedNumber[0..1]"]
  },{
    "name":"firstCompoundingPeriodEndDate",
    "extend":"anySimpleType"
  },{
    "name":"ExerciseProcedure",
    "documentation":"A type describing how notice of exercise should be given. This can be either manual or automatic.",
    "relationships":["manualExercise->ManualExercise[1..1]","automaticExercise->AutomaticExercise[1..1]","followUpConfirmation[1..1]","limitedRightToConfirm[0..1]","splitTicket[0..1]"]
  },{
    "name":"RetrievalMethodType",
    "relationships":["Transforms->TransformsType[0..1]"]
  },{
    "name":"ConvertibleBond",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","issuerName[1..1]","issuerPartyReference->PartyReference[1..1]","seniority->CreditSeniority[0..1]","couponType->CouponType[0..1]","couponRate[0..1]","maturity[0..1]","parValue[0..1]","faceAmount[0..1]","paymentFrequency->Period[0..1]","dayCountFraction->DayCountFraction[0..1]","underlyingEquity->EquityAsset[0..1]","redemptionDate[0..1]"],
    "extend":"Bond"
  },{
    "name":"InterestLegCalculationPeriodDates",
    "documentation":"Component that holds the various dates used to specify the interest leg of the return swap. It is used to define the InterestPeriodDates identifyer.",
    "relationships":["effectiveDate->AdjustableOrRelativeDate[1..1]","terminationDate->AdjustableOrRelativeDate[1..1]","interestLegResetDates->InterestLegResetDates[1..1]","interestLegPaymentDates->AdjustableRelativeOrPeriodicDates2[1..1]"]
  },{
    "name":"DeliverableObligations",
    "relationships":["accruedInterest[0..1]","category[0..1]","notSubordinated[0..1]","specifiedCurrency->SpecifiedCurrency[0..1]","notSovereignLender[0..1]","notDomesticCurrency->NotDomesticCurrency[0..1]","notDomesticLaw[0..1]","listed[0..1]","notContingent[0..1]","notDomesticIssuance[0..1]","assignableLoan->PCDeliverableObligationCharac[0..1]","consentRequiredLoan->PCDeliverableObligationCharac[0..1]","directLoanParticipation->LoanParticipation[0..1]","transferable[0..1]","maximumMaturity->Period[0..1]","acceleratedOrMatured[0..1]","notBearer[0..1]","fullFaithAndCreditObLiability[1..1]","generalFundObligationLiability[1..1]","revenueObligationLiability[1..1]","indirectLoanParticipation->LoanParticipation[0..1]","excluded[0..1]","othReferenceEntityObligations[0..1]"]
  },{
    "name":"executionAcknowledgement"
  },{
    "name":"FlatRateEnum",
    "documentation":"The method by which the Flat Rate is calculated for a commodity freight transaction.",
    "characteristics":{
      "enumeration":[{
        "value":"Fixed"
      },{
        "value":"Floating"
      }]
    },
    "extend":"token"
  },{
    "name":"GasProductTypeEnum",
    "documentation":"The type of gas product.",
    "characteristics":{
      "enumeration":[{
        "value":"NaturalGas"
      }]
    },
    "extend":"token"
  },{
    "name":"RegulatorId",
    "documentation":"An ID assigned by a regulator to an organization registered with it. (NOTE: should this just by represented by an alternate party ID?)",
    "extend":"Scheme"
  },{
    "name":"delisting",
    "documentation":"Defines the consequences of nationalisation, insolvency and delisting events relating to the underlying.",
    "characteristics":{
      "enumeration":[{
        "value":"NegotiatedCloseout"
      },{
        "value":"CancellationAndPayment"
      }]
    },
    "extend":"token"
  },{
    "name":"BasicAssetValuation",
    "documentation":"A structure that holds a set of measures about an asset.",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","quote->BasicQuotation[1..]"],
    "extend":"Valuation"
  },{
    "name":"CoalProductSource",
    "documentation":"A scheme identifying the sources of coal for a physically settled coal trade.",
    "extend":"Scheme"
  },{
    "name":"FxTouch",
    "documentation":"Describes an FX touch condition.",
    "relationships":["touchCondition[1..1]","quotedCurrencyPair->QuotedCurrencyPair[1..1]","triggerRate[1..1]","spotRate[0..1]","informationSource->InformationSource[1..]","observationStartDate[1..1]","observationEndDate[1..1]"]
  },{
    "name":"businessDaysThereafter",
    "extend":"nonNegativeInteger"
  },{
    "name":"voltage",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"productType",
    "documentation":"Emissions Product (e.g. allowance or CER).",
    "characteristics":{
      "enumeration":[{
        "value":"EUAllowance"
      },{
        "value":"EUCredit"
      },{
        "value":"AlternativeAllowance"
      },{
        "value":"NOXEmissionsProduct"
      },{
        "value":"RegionalEmissionsProduct"
      },{
        "value":"RGGIEmissionsProduct"
      },{
        "value":"SO2EmissionsProduct"
      },{
        "value":"StateEmissionProduct"
      },{
        "value":"VoluntaryEmissionProduct"
      }]
    },
    "extend":"token"
  },{
    "name":"AveragingInOutEnum",
    "documentation":"The type of averaging used in an Asian option.",
    "characteristics":{
      "enumeration":[{
        "value":"In"
      },{
        "value":"Out"
      },{
        "value":"Both"
      }]
    },
    "extend":"token"
  },{
    "name":"DayTypeEnum",
    "documentation":"A day type classification used in counting the number of days between two dates.",
    "characteristics":{
      "enumeration":[{
        "value":"Business"
      },{
        "value":"Calendar"
      },{
        "value":"CommodityBusiness"
      },{
        "value":"CurrencyBusiness"
      },{
        "value":"ExchangeBusiness"
      },{
        "value":"ScheduledTradingDay"
      }]
    },
    "extend":"token"
  },{
    "name":"int",
    "extend":"long"
  },{
    "name":"allocationsUpdated",
    "extend":"anySimpleType"
  },{
    "name":"WeatherSettlementLevelEnum",
    "characteristics":{
      "enumeration":[{
        "value":"Cumulative"
      },{
        "value":"Average"
      },{
        "value":"Mximum"
      },{
        "value":"Minimum"
      }]
    },
    "extend":"token"
  },{
    "name":"CreditSupportAgreement",
    "documentation":"The agreement executed between the parties and intended to govern collateral arrangement for all OTC derivatives transactions between those parties.",
    "relationships":["type->CreditSupportAgreementType[1..1]","date[1..1]","identifier->CreditSupportAgreementIdentifier[0..1]"]
  },{
    "name":"DeliveryDatesEnum",
    "documentation":"In respect of a Transaction and a Commodity Reference Price, the relevant date or month for delivery of the underlying Commodity.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationPeriod"
      },{
        "value":"FirstNearby"
      },{
        "value":"SecondNearby"
      },{
        "value":"ThirdNearby"
      },{
        "value":"FourthNearby"
      },{
        "value":"FifthNearby"
      },{
        "value":"SixthNearby"
      },{
        "value":"SeventhNearby"
      },{
        "value":"EighthNearby"
      },{
        "value":"NinthNearby"
      },{
        "value":"TenthNearby"
      },{
        "value":"EleventhNearby"
      },{
        "value":"TwelfthNearby"
      },{
        "value":"ThirteenthNearby"
      },{
        "value":"FourteenthNearby"
      },{
        "value":"Spot"
      },{
        "value":"FirstNearbyWeek"
      },{
        "value":"SecondNearbyWeek"
      },{
        "value":"ThirdNearbyWeek"
      },{
        "value":"FourthNearbyWeek"
      },{
        "value":"FifthNearbyWeek"
      },{
        "value":"SixthNearbyWeek"
      },{
        "value":"SeventhNearbyWeek"
      },{
        "value":"EighthNearbyWeek"
      },{
        "value":"NinthNearbyWeek"
      },{
        "value":"TenthNearbyWeek"
      },{
        "value":"EleventhNearbyWeek"
      },{
        "value":"TwelfthNearbyWeek"
      },{
        "value":"ThirteenthNearbyWeek"
      },{
        "value":"FourteenthNearbyWeek"
      },{
        "value":"FifteenthNearbyWeek"
      },{
        "value":"SixteenthNearbyWeek"
      },{
        "value":"SeventeenthNearbyWeek"
      },{
        "value":"EighteenthNearbyWeek"
      },{
        "value":"NineteenthNearbyWeek"
      },{
        "value":"TwentiethNearbyWeek"
      },{
        "value":"TwentyFirstNearbyWeek"
      },{
        "value":"TwentySecondNearbyWeek"
      },{
        "value":"TwentyThirdNearbyWeek"
      },{
        "value":"TwentyFourthearbyWeek"
      },{
        "value":"TwentyFifthNearbyWeek"
      },{
        "value":"TwentySixthNearbyWeek"
      },{
        "value":"TwentySeventhNearbyWeek"
      },{
        "value":"TwentyEighthNearbyWeek"
      },{
        "value":"TwentyNinthNearbyWeek"
      },{
        "value":"ThirtiethNearbyWeek"
      },{
        "value":"ThirtyFirstNearbyWeek"
      },{
        "value":"ThirtySecondNearbyWeek"
      },{
        "value":"ThirtyThirdNearbyWeek"
      },{
        "value":"ThirtyFourthNearbyWeek"
      },{
        "value":"ThirtyFifthNearbyWeek"
      },{
        "value":"ThirtySixthNearbyWeek"
      },{
        "value":"ThirtySeventhNearbyWeek"
      },{
        "value":"ThirtyEighthNearbyWeek"
      },{
        "value":"ThirtyNinthNearbyWeek"
      },{
        "value":"FortiethNearbyWeek"
      },{
        "value":"FortyFirstNearbyWeek"
      },{
        "value":"FortySecondNearbyWeek"
      },{
        "value":"FortyThirdNearbyWeek"
      },{
        "value":"FortyFourthNearbyWeek"
      },{
        "value":"FortyFifthNearbyWeek"
      },{
        "value":"FortySixthNearbyWeek"
      },{
        "value":"FortySeventhNearbyWeek"
      },{
        "value":"FortyEighthNearbyWeek"
      },{
        "value":"FortyNinthNearbyWeek"
      },{
        "value":"FiftiethNearbyWeek"
      },{
        "value":"FiftyFirstNearbyWeek"
      },{
        "value":"FiftySecondNearbyWeek"
      }]
    },
    "extend":"token"
  },{
    "name":"originalPrincipalAmount",
    "extend":"anySimpleType"
  },{
    "name":"MultipleValuationDates",
    "relationships":["businessDays[0..1]","businessDaysThereafter[0..1]","numberValuationDates[0..1]"],
    "extend":"SingleValuationDate"
  },{
    "name":"Discounting",
    "documentation":"A type defining discounting information. The 2000 ISDA definitions, section 8.4. discounting (related to the calculation of a discounted fixed amount or floating amount) apply. This type must only be included if discounting applies.",
    "relationships":["discountingType[1..1]","discountRate[1..1]","discountRateDayCountFraction->DayCountFraction[0..1]"]
  },{
    "name":"Obligations",
    "relationships":["category[1..1]","notSubordinated[0..1]","specifiedCurrency->SpecifiedCurrency[0..1]","notSovereignLender[0..1]","notDomesticCurrency->NotDomesticCurrency[0..1]","notDomesticLaw[0..1]","listed[0..1]","notDomesticIssuance[0..1]","fullFaithAndCreditObLiability[1..1]","generalFundObligationLiability[1..1]","revenueObligationLiability[1..1]","notContingent[0..1]","excluded[0..1]","othReferenceEntityObligations[0..1]","designatedPriority->Lien[0..1]","cashSettlementOnly[0..1]","deliveryOfCommitments[0..1]","continuity[0..1]"]
  },{
    "name":"PointValue",
    "documentation":"Constrains the forward point tick/pip factor to 1, 0.1, 0.01, 0.001, etc.",
    "extend":"decimal"
  },{
    "name":"messageRejected"
  },{
    "name":"CommodityPayRelativeToEvent",
    "documentation":"A scheme identifying the physical event relative to which payment occurs.",
    "extend":"Scheme"
  },{
    "name":"IssuerId",
    "documentation":"The data type used for issuer identifiers.",
    "extend":"Scheme"
  },{
    "name":"penaltyApplicable",
    "extend":"anySimpleType"
  },{
    "name":"routingReferenceText",
    "extend":"anySimpleType"
  },{
    "name":"PriceQuoteUnits",
    "documentation":"The units in which a price is quoted.",
    "extend":"Scheme"
  },{
    "name":"sixtyBusinessDaySettlementCap",
    "extend":"anySimpleType"
  },{
    "name":"SPKIDataType",
    "relationships":["SPKISexp[1..1]"]
  },{
    "name":"additionalDividends",
    "extend":"anySimpleType"
  },{
    "name":"FixedRate",
    "documentation":"The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
    "extend":"decimal"
  },{
    "name":"StrikeQuoteBasisEnum",
    "documentation":"The specification of how an FX OTC option strike price is quoted.",
    "characteristics":{
      "enumeration":[{
        "value":"PutCurrencyPerCallCurrency"
      },{
        "value":"CallCurrencyPerPutCurrency"
      }]
    },
    "extend":"token"
  },{
    "name":"state",
    "extend":"anySimpleType"
  },{
    "name":"foreignOwnershipEvent",
    "extend":"anySimpleType"
  },{
    "name":"failureToPayInterest",
    "extend":"anySimpleType"
  },{
    "name":"standardContent",
    "extend":"anySimpleType"
  },{
    "name":"returnSwapLeg"
  },{
    "name":"initialLevel",
    "extend":"anySimpleType"
  },{
    "name":"discountingType",
    "documentation":"The method of calculating discounted payment amounts",
    "characteristics":{
      "enumeration":[{
        "value":"Standard"
      },{
        "value":"FRA"
      },{
        "value":"FRAYield"
      }]
    },
    "extend":"token"
  },{
    "name":"BullionPhysicalLeg",
    "documentation":"Physically settled leg of a physically settled Bullion Transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","bullionType[1..1]","deliveryLocation->BullionDeliveryLocation[1..1]","physicalQuantity->CommodityNotionalQuantity[1..1]","physicalQuantitySchedule->CommodityPhysicalQuantitySchedule[1..1]","totalPhysicalQuantity->UnitQuantity[0..1]","settlementDate->AdjustableOrRelativeDate[1..1]"],
    "extend":"PhysicalForwardLeg"
  },{
    "name":"nonFirm",
    "extend":"anySimpleType"
  },{
    "name":"FutureId",
    "documentation":"A type defining a short form unique identifier for a future contract.",
    "extend":"Scheme"
  },{
    "name":"StepRelativeToEnum",
    "documentation":"The specification of whether a percentage rate change, used to calculate a change in notional outstanding, is expressed as a percentage of the initial notional amount or the previously outstanding notional amount.",
    "characteristics":{
      "enumeration":[{
        "value":"Initial"
      },{
        "value":"Previous"
      }]
    },
    "extend":"token"
  },{
    "name":"CommoditySpreadSchedule",
    "documentation":"The Spread per Calculation Period. There must be a Spread specified for each Calculation Period, regardless of whether the Spread changes or remains the same between periods.",
    "relationships":["spreadStep->CommoditySpread[1..]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]"]
  },{
    "name":"TradeWrapper",
    "documentation":"A structure that contains a business event.",
    "relationships":["originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","tradeReferenceInformation->TradeReferenceInformation[1..1]"]
  },{
    "name":"SettlementInformation",
    "documentation":"A type that represents the choice of methods for settling a potential currency payment resulting from a trade: by means of a standard settlement instruction, by netting it out with other payments, or with an explicit settlement instruction.",
    "relationships":["standardSettlementStyle[1..1]","settlementInstruction->SettlementInstruction[1..1]"]
  },{
    "name":"maximumBusinessDays",
    "extend":"integer"
  },{
    "name":"rateCalculation"
  },{
    "name":"ID",
    "extend":"NCName"
  },{
    "name":"ReferenceLevelUnit",
    "documentation":"CPD Reference Level: millimeters or inches of daily precipitation HDD Reference Level: degree-days CDD Reference Level: degree-days.",
    "extend":"Scheme"
  },{
    "name":"dividendDateReference",
    "documentation":"The reference to a dividend date.",
    "characteristics":{
      "enumeration":[{
        "value":"ExDate"
      },{
        "value":"DividendPaymentDate"
      },{
        "value":"DividendValuationDate"
      },{
        "value":"RecordDate"
      },{
        "value":"TerminationDate"
      },{
        "value":"EquityPaymentDate"
      },{
        "value":"FollowingPaymentDate"
      },{
        "value":"AdHocDate"
      },{
        "value":"CumulativeEquityPaid"
      },{
        "value":"CumulativeLiborPaid"
      },{
        "value":"CumulativeEquityExDiv"
      },{
        "value":"CumulativeLiborExDiv"
      },{
        "value":"SharePayment"
      },{
        "value":"CashSettlementPaymentDate"
      },{
        "value":"FloatingAmountPaymentDate"
      },{
        "value":"CashSettlePaymentDateExDiv"
      },{
        "value":"CashSettlePaymentDateIssuerPayment"
      },{
        "value":"ExDividendPaymentDate"
      }]
    },
    "extend":"token"
  },{
    "name":"RateReference",
    "documentation":"Reference to any rate (floating, inflation) derived from the abstract Rate component."
  },{
    "name":"LinkId",
    "documentation":"The data type used for link identifiers.",
    "extend":"Scheme"
  },{
    "name":"fixingDate",
    "extend":"anySimpleType"
  },{
    "name":"confirmed",
    "extend":"anySimpleType"
  },{
    "name":"FxTenorPeriodEnum",
    "documentation":"The specification of a time period containing values such as Today, Tomorrow etc.",
    "characteristics":{
      "enumeration":[{
        "value":"Broken"
      },{
        "value":"Today"
      },{
        "value":"Tomorrow"
      },{
        "value":"TomorrowNext"
      },{
        "value":"Spot"
      },{
        "value":"SpotNext"
      }]
    },
    "extend":"token"
  },{
    "name":"periodQuantityTolerance",
    "extend":"anySimpleType"
  },{
    "name":"continuity",
    "extend":"anySimpleType"
  },{
    "name":"BrokerEquityOption",
    "documentation":"A type for defining the broker equity options.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityEffectiveDate[0..1]","underlyer->Underlyer[1..1]","notional->NonNegativeMoney[0..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","feature->OptionFeatures[0..1]","fxFeature->FxFeature[0..1]","strategyFeature->StrategyFeature[0..1]","strike->EquityStrike[1..1]","spotPrice[0..1]","numberOfOptions[1..1]","equityPremium->EquityPremium[1..1]","deltaCrossed[1..1]","brokerageFee->Money[1..1]","brokerNotes[1..1]"],
    "extend":"EquityDerivativeShortFormBase"
  },{
    "name":"CrossCurrencyMethod",
    "relationships":["cashSettlementReferenceBanks->CashSettlementReferenceBanks[0..1]","cashSettlementCurrency->Currency[1..2]","quotationRateType[1..1]"]
  },{
    "name":"DividendAdjustment",
    "documentation":"Container for Dividend Adjustment Periods, which are used to calculate the Deviation between Expected Dividend and Actual Dividend in that Period.",
    "relationships":["dividendPeriod->DividendPeriodDividend[1..]"]
  },{
    "name":"otherValue",
    "extend":"anySimpleType"
  },{
    "name":"ReportingRole",
    "documentation":"A type containing a code representing the role of a party in a report, e.g. the originator, the recipient, the counterparty, etc. This is used to clarify which participant's information is being reported.",
    "extend":"Scheme"
  },{
    "name":"conditionPrecedentBond",
    "extend":"anySimpleType"
  },{
    "name":"CollateralAllocationAccepted",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]"],
    "extend":"ResponseMessage"
  },{
    "name":"Compounding",
    "documentation":"Specifies the compounding method and the compounding rate.",
    "relationships":["compoundingMethod[0..1]","compoundingRate->CompoundingRate[1..1]","compoundingSpread[0..1]","compoundingDates->AdjustableRelativeOrPeriodicDates2[0..1]"]
  },{
    "name":"FrequencyType",
    "documentation":"Frequency Type.",
    "extend":"Scheme"
  },{
    "name":"BusinessDayAdjustmentsReference",
    "documentation":"Reference to a business day adjustments structure.",
    "extend":"Reference"
  },{
    "name":"StartingDate",
    "documentation":"A type specifying the date from which the early termination clause can be exercised.",
    "relationships":["dateRelativeTo->DateReference[1..1]","adjustableDate->AdjustableDate[1..1]"]
  },{
    "name":"requestEventStatus"
  },{
    "name":"product"
  },{
    "name":"serviceName",
    "extend":"string"
  },{
    "name":"CoalAttributePercentage",
    "documentation":"The different options for specifying the attributes of a coal quality measure as a percentage of the measured value.",
    "relationships":["standardContent[1..1]","rejectionLimit[0..1]","rejectionLimit[1..1]"]
  },{
    "name":"StrategyComponentIdentification",
    "documentation":"Associates trade identifiers with components of a strategy.",
    "relationships":["tradeIdentifierReference->PartyTradeIdentifierReference[1..1]","componentReference->ProductReference[1..1]"]
  },{
    "name":"nonNegativeInteger",
    "extend":"integer"
  },{
    "name":"CommodityEuropeanExercise",
    "documentation":"A type for defining exercise procedures associated with a European style exercise of a commodity option.",
    "relationships":["expirationDate->AdjustableOrRelativeDate[1..1]","expirationDate->AdjustableOrRelativeDate[1..]","exerciseFrequency->Frequency[0..1]","expirationTime->BusinessCenterTime[0..1]"],
    "extend":"Exercise"
  },{
    "name":"SettlementInstruction",
    "documentation":"A type that models a complete instruction for settling a currency payment, including the settlement method to be used, the correspondent bank, any intermediary banks and the ultimate beneficary.",
    "relationships":["settlementMethod->SettlementMethod[0..1]","correspondentInformation->CorrespondentInformation[0..1]","intermediaryInformation->IntermediaryInformation[0..]","beneficiaryBank->Beneficiary[0..1]","beneficiary->Beneficiary[1..1]","depositoryPartyReference->PartyReference[0..1]","splitSettlement->SplitSettlement[0..]"]
  },{
    "name":"sCoTASpecifications",
    "extend":"anySimpleType"
  },{
    "name":"MoneyBase",
    "documentation":"A type defining a currency amount as at a future value date.",
    "relationships":["currency->Currency[1..1]"]
  },{
    "name":"ResponseMessage",
    "documentation":"A type refining the generic message content model to make it specific to response messages.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]"],
    "extend":"Message"
  },{
    "name":"CommodityPhysicalAmericanExercise",
    "documentation":"The parameters for defining the expiration date(s) and time(s) for an American style option.",
    "relationships":["commencementDates->AdjustableOrRelativeDates[1..1]","expirationDates->AdjustableOrRelativeDates[1..1]","relativeCommencementDates->CommodityRelativeExpirationDates[1..1]","relativeExpirationDates->CommodityRelativeExpirationDates[1..1]","latestExerciseTime->PrevailingTime[0..1]","expirationTime->PrevailingTime[0..1]"],
    "extend":"Exercise"
  },{
    "name":"ResourceLength",
    "documentation":"The type that indicates the length of the resource.",
    "relationships":["lengthUnit[1..1]","lengthValue[1..1]"]
  },{
    "name":"ExecutionRetracted",
    "documentation":"A message retracting a notification to a party that a trade execution has occurred. (Typically this is sent by an execution platform to a participant.)",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"ElectricityPhysicalQuantity",
    "documentation":"The quantity of gas to be delivered.",
    "relationships":["physicalQuantity->ElectricityPhysicalDeliveryQuantity[1..]","physicalQuantitySchedule->ElectricityPhysicalDeliveryQuantitySchedule[1..]","totalPhysicalQuantity->UnitQuantity[0..1]"],
    "extend":"CommodityPhysicalQuantityBase"
  },{
    "name":"ElectricityPhysicalDeliveryQuantitySchedule",
    "documentation":"Allows the documentation of a shaped quantity trade where the quantity changes over the life of the transaction.",
    "relationships":["quantityStep->CommodityNotionalQuantity[1..]","deliveryPeriodsReference->CalculationPeriodsReference[1..1]","deliveryPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","settlementPeriodsReference->SettlementPeriodsReference[1..]"],
    "extend":"CommodityPhysicalQuantitySchedule"
  },{
    "name":"FxSpotRateSource",
    "documentation":"A type defining the source and time for an fx rate.",
    "relationships":["primaryRateSource->InformationSource[1..1]","secondaryRateSource->InformationSource[0..1]","fixingTime->BusinessCenterTime[0..1]"]
  },{
    "name":"VarianceLeg",
    "documentation":"A type describing return which is driven by a Variance Calculation.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","underlyer->Underlyer[1..1]","settlementType[0..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementAmount->Money[1..1]","settlementCurrency->Currency[1..1]","fxFeature->FxFeature[0..1]","valuation->EquityValuation[1..1]","amount->VarianceAmount[1..1]"],
    "extend":"DirectionalLegUnderlyerValuation"
  },{
    "name":"FxOptionPayout",
    "documentation":"A type that contains full details of a predefined fixed payout which may occur (or not) in a Barrier Option or Digital Option when a trigger event occurs (or not).",
    "relationships":["currency->Currency[1..1]","amount[1..1]","payoutStyle[1..1]","settlementInformation->SettlementInformation[0..1]"],
    "extend":"NonNegativeMoney"
  },{
    "name":"SpreadScheduleReference",
    "documentation":"Provides a reference to a spread schedule.",
    "extend":"Reference"
  },{
    "name":"TradeChangeBase",
    "documentation":"A structure describing a trade change.",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]","tradeIdentifier->PartyTradeIdentifier[1..]","originalTrade->Trade[1..1]","agreementDate[1..1]","executionDateTime->ExecutionDateTime[0..1]","effectiveDate[1..1]","payment->Payment[0..]"],
    "extend":"AbstractEvent"
  },{
    "name":"maturityAcknowledgement"
  },{
    "name":"normalizedString",
    "extend":"string"
  },{
    "name":"PortfolioName",
    "documentation":"The data type used for portfolio names.",
    "extend":"Scheme"
  },{
    "name":"expiryDate",
    "extend":"anySimpleType"
  },{
    "name":"ActualPrice",
    "relationships":["currency->Currency[0..1]","amount[1..1]","priceExpression[1..1]"]
  },{
    "name":"fullExercise",
    "extend":"anySimpleType"
  },{
    "name":"DividendSwapTransactionSupplement",
    "documentation":"A Dividend Swap Transaction Supplement.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","dividendLeg->DividendLeg[1..1]","fixedLeg->FixedPaymentLeg[1..1]","multipleExchangeIndexAnnexFallback[1..1]","componentSecurityIndexAnnexFallback[1..1]","localJurisdiction->CountryCode[0..1]","relevantJurisdiction->CountryCode[0..1]"],
    "extend":"Product"
  },{
    "name":"ScheduleReference",
    "documentation":"Reference to a schedule of rates or amounts.",
    "extend":"Reference"
  },{
    "name":"swapPremium",
    "extend":"anySimpleType"
  },{
    "name":"EnvironmentalPhysicalLeg",
    "documentation":"Physically settled leg of a physically settled emissions allowance transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","numberOfAllowances->UnitQuantity[1..1]","environmental->EnvironmentalProduct[1..1]","abandonmentOfScheme[0..1]","deliveryDate->AdjustableOrRelativeDate[1..1]","paymentDate->DateOffset[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]","failureToDeliverApplicable[0..1]","eEPParameters->EEPParameters[0..1]"],
    "extend":"PhysicalSwapLeg"
  },{
    "name":"equity"
  },{
    "name":"BusinessDateRange",
    "documentation":"A type defining a range of contiguous business days by defining an unadjusted first date, an unadjusted last date and a business day convention and business centers for adjusting the first and last dates if they would otherwise fall on a non business day in the specified business centers. The days between the first and last date must also be good business days in the specified centers to be counted in the range.",
    "relationships":["unadjustedFirstDate[1..1]","unadjustedLastDate[1..1]","businessDayConvention[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]"],
    "extend":"DateRange"
  },{
    "name":"MarkToMarketConventionEnum",
    "documentation":"The type of mark to market convention.",
    "characteristics":{
      "enumeration":[{
        "value":"Gross"
      },{
        "value":"Netted"
      }]
    },
    "extend":"token"
  },{
    "name":"TermCurve",
    "documentation":"A curve consisting only of values over a term. This is a restricted form of One Dimensional Structure.",
    "relationships":["interpolationMethod->InterpolationMethod[0..1]","extrapolationPermitted[0..1]","point->TermPoint[1..]"]
  },{
    "name":"businessDaysNotSpecified",
    "extend":"anySimpleType"
  },{
    "name":"ConsentRefused",
    "documentation":"A message indicating that the sender does not grant consent for the recipient to perform the requested action.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","tradeReferenceInformation->TradeReferenceInformation[1..1]","party->Party[1..]","account->Account[0..]","reason->Reason[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"PersonReference",
    "documentation":"Reference to an individual.",
    "extend":"Reference"
  },{
    "name":"depositoryReceipt",
    "extend":"anySimpleType"
  },{
    "name":"FxRateAsset",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","quotedCurrencyPair->QuotedCurrencyPair[1..1]","rateSource->FxSpotRateSource[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"LowerBound",
    "relationships":["minimumInclusive[1..1]","minimumExclusive[1..1]"]
  },{
    "name":"CashflowNotional",
    "documentation":"The notional/principal value/quantity/volume used to compute the cashflow.",
    "relationships":["currency->Currency[1..1]","units[1..1]","amount[1..1]"]
  },{
    "name":"CommodityRelativeExpirationDates",
    "documentation":"The Expiration Dates of the trade relative to the Calculation Periods.",
    "relationships":["expireRelativeToEvent->CommodityExpireRelativeToEvent[1..1]","expirationDateOffset->DateOffset[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]"]
  },{
    "name":"varianceSwap"
  },{
    "name":"rateSourcePageHeading",
    "extend":"anySimpleType"
  },{
    "name":"DualCurrencyStrikeQuoteBasisEnum",
    "documentation":"A type which permits the Dual Currency strike quote basis to be expressed in terms of the deposit and alternate currencies.",
    "characteristics":{
      "enumeration":[{
        "value":"DepositCurrencyPerAlternateCurrency"
      },{
        "value":"AlternateCurrencyPerDepositCurrency"
      }]
    },
    "extend":"token"
  },{
    "name":"deliveryAtSource",
    "extend":"anySimpleType"
  },{
    "name":"triggerType",
    "documentation":"The specification of whether an option would trigger or expire depending upon whether the spot rate is above or below the barrier rate.",
    "characteristics":{
      "enumeration":[{
        "value":"EqualOrLess"
      },{
        "value":"EqualOrGreater"
      },{
        "value":"Equal"
      },{
        "value":"Less"
      },{
        "value":"Greater"
      }]
    },
    "extend":"token"
  },{
    "name":"consentGranted"
  },{
    "name":"optionExpirationNotification"
  },{
    "name":"Loan",
    "documentation":"A type describing a loan underlying asset.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","borrower->LegalEntity[1..1]","borrowerReference->LegalEntityReference[1..1]","lien->Lien[0..1]","facilityType->FacilityType[0..1]","maturity[0..1]","creditAgreementDate[0..1]","tranche->UnderlyingAssetTranche[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"sequenceNumber",
    "extend":"nonNegativeInteger"
  },{
    "name":"EnvironmentalProductComplaincePeriod",
    "relationships":["startYear[1..1]","endYear[1..1]"]
  },{
    "name":"soldAs",
    "documentation":"Specifies whether the option is a call or a put.",
    "characteristics":{
      "enumeration":[{
        "value":"Put"
      },{
        "value":"Call"
      }]
    },
    "extend":"token"
  },{
    "name":"PassThrough",
    "documentation":"Type which contains pass through payments.",
    "relationships":["passThroughItem->PassThroughItem[1..]"]
  },{
    "name":"mthToDefault",
    "extend":"nonNegativeInteger"
  },{
    "name":"Strike",
    "documentation":"A type describing a single cap or floor rate.",
    "relationships":["strikeRate[1..1]","buyer->IdentifiedPayerReceiver[0..1]","seller->IdentifiedPayerReceiver[0..1]"]
  },{
    "name":"qualifyingParticipationSeller",
    "extend":"anySimpleType"
  },{
    "name":"url",
    "extend":"anySimpleType"
  },{
    "name":"amount",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"AverageDailyTradingVolumeLimit",
    "documentation":"To indicate the limitation percentage and limitation period.",
    "relationships":["limitationPercentage[1..1]","limitationPeriod[1..1]"]
  },{
    "name":"CommodityMetalBrand",
    "relationships":["name->CommodityMetalBrandName[1..1]","brandManager->CommodityMetalBrandManager[0..1]","country->CountryCode[0..1]","producer->CommodityMetalProducer[0..1]"]
  },{
    "name":"listed",
    "extend":"anySimpleType"
  },{
    "name":"FloatingRateIndex",
    "documentation":"The ISDA Floating Rate Option, i.e. the floating rate index.",
    "extend":"Scheme"
  },{
    "name":"DividendCompositionEnum",
    "documentation":"Defines how the composition of dividends is to be determined.",
    "characteristics":{
      "enumeration":[{
        "value":"EquityAmountReceiverElection"
      },{
        "value":"CalculationAgentElection"
      }]
    },
    "extend":"token"
  },{
    "name":"FixedPriceLeg",
    "documentation":"Fixed Price Leg of a Commodity Swap.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","calculationDates->AdjustableDates[1..1]","calculationPeriods->AdjustableDates[1..1]","calculationPeriodsSchedule->CommodityCalculationPeriodsSchedule[1..1]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]","fixedPriceSchedule->CommodityFixedPriceSchedule[1..1]","fixedPrice->FixedPrice[1..1]","worldscaleRate[1..1]","contractRate->NonNegativeMoney[1..1]","settlementPeriodsPrice->SettlementPeriodsFixedPrice[1..]","totalPrice->NonNegativeMoney[0..1]","notionalQuantitySchedule->CommodityNotionalQuantitySchedule[1..1]","notionalQuantity->CommodityNotionalQuantity[1..1]","settlementPeriodsNotionalQuantity->CommoditySettlementPeriodsNotionalQuantity[1..]","totalNotionalQuantity[0..1]","quantityReference->QuantityReference[1..1]","relativePaymentDates->CommodityRelativePaymentDates[1..1]","paymentDates->AdjustableDatesOrRelativeDateOffset[1..1]","masterAgreementPaymentDates[1..1]","flatRate[1..1]","flatRateAmount->NonNegativeMoney[0..1]"],
    "extend":"FinancialSwapLeg"
  },{
    "name":"InstrumentTradePricing",
    "documentation":"A structure describing the price paid for the instrument.",
    "relationships":["quote->BasicQuotation[1..]"]
  },{
    "name":"NotionalAmountReference",
    "documentation":"A reference to the notional amount.",
    "extend":"Reference"
  },{
    "name":"Exception",
    "documentation":"A type defining the basic content for a message sent to inform another system that some exception has been detected.",
    "relationships":["header->ExceptionMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","reason->Reason[1..]","additionalData->AdditionalData[0..1]"],
    "extend":"Message"
  },{
    "name":"AssetOrTermPointOrPricingStructureReference",
    "documentation":"Reference to an underlying asset, term point or pricing structure (yield curve).",
    "extend":"Reference"
  },{
    "name":"ServiceAdvisory",
    "documentation":"A type defining the content model for a human-readable notification to the users of a service.",
    "relationships":["category->ServiceAdvisoryCategory[1..1]","description[1..1]","effectiveFrom[0..1]","effectiveTo[0..1]"]
  },{
    "name":"FxEuropeanExercise",
    "documentation":"Describes the characteristics for European exercise of FX products.",
    "relationships":["expiryDate[1..1]","expiryTime->BusinessCenterTime[0..1]","cutName->CutName[0..1]","valueDate[1..1]"],
    "extend":"Exercise"
  },{
    "name":"capFloor"
  },{
    "name":"ReturnLegValuation",
    "documentation":"A type describing the initial and final valuation of the underlyer.",
    "relationships":["initialPrice->ReturnLegValuationPrice[1..1]","notionalReset[0..1]","valuationPriceInterim->ReturnLegValuationPrice[0..1]","valuationPriceFinal->ReturnLegValuationPrice[1..1]","paymentDates->ReturnSwapPaymentDates[1..1]","exchangeTradedContractNearest->ExchangeTradedContract[0..1]"]
  },{
    "name":"PassThroughItem",
    "documentation":"Type to represent a single pass through payment.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","underlyerReference->AssetReference[1..1]","passThroughPercentage[1..1]"]
  },{
    "name":"RestructuringType",
    "extend":"Scheme"
  },{
    "name":"CommoditySwaptionUnderlying",
    "relationships":["effectiveDate->AdjustableOrRelativeDate[1..1]","terminationDate->AdjustableOrRelativeDate[1..1]","settlementCurrency->IdentifiedCurrency[1..1]","commoditySwapLeg->CommoditySwapLeg[1..]","weatherLeg->WeatherLeg[2..2]","commonPricing[0..1]","marketDisruption->CommodityMarketDisruption[0..1]","settlementDisruption[0..1]","rounding->Rounding[0..1]"]
  },{
    "name":"GrossCashflow",
    "documentation":"A payment component owed from one party to the other for the cash flow date. This payment component should by of only a single type, e.g. a fee or a cashflow from a cashflow stream.",
    "relationships":["cashflowId->CashflowId[1..1]","partyTradeIdentifierReference->PartyTradeIdentifierReference[0..1]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","cashflowAmount->Money[1..1]","cashflowType->CashflowType[0..1]"]
  },{
    "name":"HMACOutputLength",
    "extend":"integer"
  },{
    "name":"executionAdviceRetracted"
  },{
    "name":"InterestLegResetDates",
    "relationships":["calculationPeriodDatesReference->InterestLegCalculationPeriodDatesReference[1..1]","resetRelativeTo[1..1]","resetFrequency->ResetFrequency[1..1]","initialFixingDate->RelativeDateOffset[0..1]","fixingDates->AdjustableDatesOrRelativeDateOffset[0..1]"]
  },{
    "name":"ServiceAdvisoryCategory",
    "documentation":"A type that can be used to describe the category of an advisory message, e.g.. Availability, Rules, Products, etc., etc..",
    "extend":"Scheme"
  },{
    "name":"VerificationStatusNotification",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","status->VerificationStatus[1..1]","reason->Reason[0..]","partyTradeIdentifier->PartyTradeIdentifier[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"ReferenceLevel",
    "relationships":["amount[1..1]","referenceLevelUnit->ReferenceLevelUnit[1..1]"]
  },{
    "name":"ServiceProcessingEvent",
    "documentation":"A type that can be used to describe a stage or step in processing provided by a service, for example processing completed.",
    "extend":"Scheme"
  },{
    "name":"PercentageRule",
    "documentation":"A type defining a content model for a calculation rule defined as percentage of the notional amount.",
    "relationships":["paymentPercent[1..1]","notionalAmountReference->NotionalAmountReference[1..1]"],
    "extend":"PaymentRule"
  },{
    "name":"TimezoneLocation",
    "documentation":"A geophraphic location for the purposes of defining a prevailing time according to the tz database.",
    "extend":"Scheme"
  },{
    "name":"CrossRate",
    "documentation":"A type that is used for including the currency exchange rates used to cross between the traded currencies for non-base currency FX contracts.",
    "relationships":["currency1->Currency[1..1]","currency2->Currency[1..1]","quoteBasis[1..1]","rate[1..1]","spotRate[1..1]","forwardPoints[0..1]"],
    "extend":"QuotedCurrencyPair"
  },{
    "name":"correlationStrikePrice",
    "documentation":"A type defining a number specified as a decimal between -1 and 1 inclusive.",
    "extend":"decimal"
  },{
    "name":"CommodityPhysicalQuantitySchedule",
    "documentation":"The Quantity per Delivery Period. There must be a Quantity step specified for each Delivery Period, regardless of whether the Quantity changes or remains the same between periods.",
    "relationships":["quantityStep->CommodityNotionalQuantity[1..]","deliveryPeriodsReference->CalculationPeriodsReference[1..1]","deliveryPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]"]
  },{
    "name":"referenceLevelEqualsZero",
    "extend":"anySimpleType"
  },{
    "name":"CancellationEvent",
    "documentation":"The adjusted dates for a specific cancellation date, including the adjusted exercise date and adjusted termination date.",
    "relationships":["adjustedExerciseDate[1..1]","adjustedEarlyTerminationDate[1..1]"]
  },{
    "name":"honorific",
    "extend":"string"
  },{
    "name":"GasQuality",
    "documentation":"The quantity of gas to be delivered.",
    "extend":"Scheme"
  },{
    "name":"CommissionDenominationEnum",
    "documentation":"The unit in which a commission is denominated.",
    "characteristics":{
      "enumeration":[{
        "value":"BPS"
      },{
        "value":"Percentage"
      },{
        "value":"CentsPerShare"
      },{
        "value":"FixedAmount"
      }]
    },
    "extend":"token"
  },{
    "name":"commissionDenomination",
    "documentation":"The unit in which a commission is denominated.",
    "characteristics":{
      "enumeration":[{
        "value":"BPS"
      },{
        "value":"Percentage"
      },{
        "value":"CentsPerShare"
      },{
        "value":"FixedAmount"
      }]
    },
    "extend":"token"
  },{
    "name":"serviceNotificationException"
  },{
    "name":"treatedRate",
    "extend":"anySimpleType"
  },{
    "name":"sectionNumber",
    "extend":"nonNegativeInteger"
  },{
    "name":"SensitivityDefinition",
    "documentation":"A set of characteristics describing a sensitivity.",
    "relationships":["name[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","partialDerivative->PricingParameterDerivative[1..]","formula->DerivativeFormula[0..1]","term->TimeDimension[1..1]","coordinate->PricingDataPointCoordinate[1..1]","coordinateReference->PricingDataPointCoordinateReference[1..1]"]
  },{
    "name":"initialStockLoanRate",
    "documentation":"A type defining a percentage specified as decimal from 0 to 1. A percentage of 5% would be represented as 0.05.",
    "extend":"decimal"
  },{
    "name":"ReturnSwapAdditionalPayment",
    "documentation":"A type describing the additional payment(s) between the principal parties to the trade. This component extends some of the features of the additionalPayment component previously developed in FpML. Appropriate discussions will determine whether it would be appropriate to extend the shared component in order to meet the further requirements of equity swaps.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","additionalPaymentAmount->AdditionalPaymentAmount[1..1]","additionalPaymentDate->AdjustableOrRelativeDate[1..1]","paymentType->PaymentType[0..1]"],
    "extend":"PaymentBase"
  },{
    "name":"DividendEntitlementEnum",
    "documentation":"The date on which the receiver of the equity return is entitled to the dividend.",
    "characteristics":{
      "enumeration":[{
        "value":"ExDate"
      },{
        "value":"RecordDate"
      }]
    },
    "extend":"token"
  },{
    "name":"ExchangeTraded",
    "documentation":"An exchange traded equity asset.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","relatedExchangeId->ExchangeId[0..]","optionsExchangeId->ExchangeId[0..]","specifiedExchangeId->ExchangeId[0..]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"Index",
    "documentation":"A published index whose price depends on exchange traded constituents.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","relatedExchangeId->ExchangeId[0..]","optionsExchangeId->ExchangeId[0..]","specifiedExchangeId->ExchangeId[0..]","constituentExchangeId->ExchangeId[0..]","futureId->FutureId[0..1]"],
    "extend":"ExchangeTradedCalculatedPrice"
  },{
    "name":"unsignedByte",
    "extend":"unsignedShort"
  },{
    "name":"Representations",
    "documentation":"A type for defining ISDA 2002 Equity Derivative Representations.",
    "relationships":["nonReliance[1..1]","agreementsRegardingHedging[1..1]","indexDisclaimer[0..1]","additionalAcknowledgements[1..1]"]
  },{
    "name":"PayoutEnum",
    "documentation":"The specification of how an FX OTC option with a trigger payout will be paid if the trigger condition is met. The contract will specify whether the payout will occur immediately or on the original value date of the option.",
    "characteristics":{
      "enumeration":[{
        "value":"Deferred"
      },{
        "value":"Immediate"
      }]
    },
    "extend":"token"
  },{
    "name":"CouponType",
    "documentation":"Defines a scheme of values for specifiying if the bond has a variable coupon, step-up/down coupon or a zero-coupon.",
    "extend":"Scheme"
  },{
    "name":"conversionFactor",
    "extend":"anySimpleType"
  },{
    "name":"QueryPortfolio",
    "documentation":"A type representing a portfolio obtained by querying the set of trades held in a repository. It contains trades matching the intersection of all criteria specified using one or more queryParameters or trades matching the union of two or more child queryPortfolios.",
    "relationships":["partyPortfolioName->PartyPortfolioName[0..1]","tradeId->TradeId[0..]","partyTradeIdentifier->PartyTradeIdentifier[0..]","portfolio->Portfolio[0..]","queryParameter->QueryParameter[1..]"],
    "extend":"Portfolio"
  },{
    "name":"PriceExpressionEnum",
    "documentation":"The mode of expression of a price.",
    "characteristics":{
      "enumeration":[{
        "value":"AbsoluteTerms"
      },{
        "value":"PercentageOfNotional"
      }]
    },
    "extend":"token"
  },{
    "name":"ElectricityProduct",
    "documentation":"The specification of the electricity to be delivered.",
    "relationships":["type[1..1]","voltage[0..1]"]
  },{
    "name":"FxCurveValuation",
    "documentation":"A valuation of an FX curve object., which includes pricing inputs and term structures for fx forwards.",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","baseDate->IdentifiedDate[1..1]","spotDate->IdentifiedDate[0..1]","inputDataDate->IdentifiedDate[0..1]","endDate->IdentifiedDate[0..1]","buildDateTime[0..1]","settlementCurrencyYieldCurve->PricingStructureReference[0..1]","forecastCurrencyYieldCurve->PricingStructureReference[0..1]","spotRate->FxRateSet[0..1]","fxForwardCurve->TermCurve[0..1]","fxForwardPointsCurve->TermCurve[0..1]"],
    "extend":"PricingStructureValuation"
  },{
    "name":"effectiveDate",
    "extend":"anySimpleType"
  },{
    "name":"GenericAgreement",
    "documentation":"An entity for defining a generic agreement executed between two parties for any purpose.",
    "relationships":["type->AgreementType[1..1]","version->AgreementVersion[0..1]","date[0..1]","amendmentDate[0..]","governingLaw->GoverningLaw[0..1]"]
  },{
    "name":"WithdrawalReason",
    "documentation":"A type that describes why a trade was withdrawn.",
    "extend":"Scheme"
  },{
    "name":"PaymentBase",
    "documentation":"A structure representing a pending dividend or coupon payment."
  },{
    "name":"DividendLeg",
    "documentation":"Floating Payment Leg of a Dividend Swap.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","underlyer->Underlyer[1..1]","settlementType[0..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementAmount->Money[1..1]","settlementCurrency->Currency[1..1]","fxFeature->FxFeature[0..1]","declaredCashDividendPercentage[0..1]","declaredCashEquivalentDividendPercentage[0..1]","dividendPeriod->DividendPeriodPayment[1..]","specialDividends[0..1]","materialDividend[0..1]"],
    "extend":"DirectionalLegUnderlyer"
  },{
    "name":"MatrixTerm",
    "extend":"Scheme"
  },{
    "name":"EquityDerivativeBase",
    "documentation":"A type for defining the broker equity options.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityEffectiveDate[0..1]","underlyer->Underlyer[1..1]","notional->NonNegativeMoney[0..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","feature->OptionFeatures[0..1]","fxFeature->FxFeature[0..1]","strategyFeature->StrategyFeature[0..1]"],
    "extend":"Product"
  },{
    "name":"CoalDeliveryPoint",
    "documentation":"A scheme identifying the types of the Delivery Point for a physically settled coal trade.",
    "extend":"Scheme"
  },{
    "name":"materialDividend",
    "extend":"anySimpleType"
  },{
    "name":"short",
    "extend":"int"
  },{
    "name":"ParametricAdjustmentPoint",
    "documentation":"A value of the adjustment point, consisting of the x value and the corresponding y value.",
    "relationships":["parameterValue[1..1]","adjustmentValue[1..1]"]
  },{
    "name":"TradeChangeAdvice",
    "documentation":"Defines the structure for a message indicating that a trade is being changed due to a non-negotiated event.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","change->TradeChangeContent[1..1]","quote->BasicQuotation[1..]","paymentDetails->PaymentDetails[0..]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"optionalEarlyTermination",
    "extend":"anySimpleType"
  },{
    "name":"RequestExecutionRetracted",
    "documentation":"A message withdrawing a request that an order be executed.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"extrapolationPermitted",
    "extend":"anySimpleType"
  },{
    "name":"RequestRetransmission",
    "documentation":"A message to request that a message be retransmitted. The original message will typically be a component of a group of messages, such as a portfolio or a report in multiple parts.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","portfolioReference->PortfolioConstituentReference[1..1]","reportIdentification->ReportSectionIdentification[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"NonNegativeAmountSchedule",
    "documentation":"A type defining a currency amount or a currency amount schedule.",
    "relationships":["initialValue[1..1]","step->NonNegativeStep[0..]","currency->Currency[1..1]"],
    "extend":"NonNegativeSchedule"
  },{
    "name":"NetAndGross",
    "documentation":"A structure including a net and/or a gross amount and possibly fees and commissions.",
    "relationships":["net[1..1]","gross[1..1]","net[0..1]"]
  },{
    "name":"ValuationDocument",
    "documentation":"A type defining a content model that includes valuation (pricing and risk) data without expressing any processing intention.",
    "relationships":["validation->Validation[0..]","onBehalfOf->OnBehalfOf[0..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[0..]","portfolio->Portfolio[0..]","party->Party[1..]","account->Account[0..]","market->Market[0..]","valuationSet->ValuationSet[0..]"],
    "extend":"DataDocument"
  },{
    "name":"CommodityExercisePeriods",
    "relationships":["commencementDate->AdjustableOrRelativeDate[1..1]","expirationDate->AdjustableOrRelativeDate[1..1]"]
  },{
    "name":"otherPath",
    "extend":"anySimpleType"
  },{
    "name":"ClearingStatus",
    "documentation":"A message providing the current status of a clearing request.",
    "relationships":["header->NotificationMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","clearingStatusItem->ClearingStatusItem[0..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NotificationMessage"
  },{
    "name":"endYear",
    "extend":"anySimpleType"
  },{
    "name":"AutomaticExercise",
    "documentation":"A type to define automatic exercise of a swaption. With automatic exercise the option is deemed to have exercised if it is in the money by more than the threshold amount on the exercise date.",
    "relationships":["thresholdRate[1..1]"]
  },{
    "name":"NotificationMessageHeader",
    "documentation":"A type that refines the generic message header to match the requirements of a NotificationMessage.",
    "relationships":["messageId->MessageId[1..1]","inReplyTo->MessageId[0..1]","sentBy->MessageAddress[1..1]","sendTo->MessageAddress[0..]","copyTo->MessageAddress[0..]","creationTimestamp[1..1]","expiryTimestamp[0..1]","implementationSpecification->ImplementationSpecification[0..1]","partyMessageInformation->PartyMessageInformation[0..]","Signature->SignatureType[0..]"],
    "extend":"MessageHeader"
  },{
    "name":"CashSettlement",
    "documentation":"A type to define the cash settlement terms for a product where cash settlement is applicable.",
    "relationships":["cashSettlementValuationTime->BusinessCenterTime[0..1]","cashSettlementValuationDate->RelativeDateOffset[0..1]","cashSettlementPaymentDate->CashSettlementPaymentDate[0..1]","cashPriceMethod->CashPriceMethod[1..1]","cashPriceAlternateMethod->CashPriceMethod[1..1]","parYieldCurveAdjustedMethod->YieldCurveMethod[1..1]","zeroCouponYieldAdjustedMethod->YieldCurveMethod[1..1]","parYieldCurveUnadjustedMethod->YieldCurveMethod[1..1]","crossCurrencyMethod->CrossCurrencyMethod[1..1]","collateralizedCashPriceMethod->YieldCurveMethod[1..1]"]
  },{
    "name":"periodSkip",
    "extend":"nonNegativeInteger"
  },{
    "name":"PaymentBaseExtended",
    "documentation":"A complex type to specify non negative payments.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentDate->AdjustableOrRelativeDate[1..1]"],
    "extend":"PaymentBase"
  },{
    "name":"dayType",
    "documentation":"A day type classification used in counting the number of days between two dates.",
    "characteristics":{
      "enumeration":[{
        "value":"Business"
      },{
        "value":"Calendar"
      },{
        "value":"CommodityBusiness"
      },{
        "value":"CurrencyBusiness"
      },{
        "value":"ExchangeBusiness"
      },{
        "value":"ScheduledTradingDay"
      }]
    },
    "extend":"token"
  },{
    "name":"lastRegularPeriodEndDate",
    "extend":"anySimpleType"
  },{
    "name":"indexAnnexDate",
    "extend":"anySimpleType"
  },{
    "name":"nonCashDividendTreatment",
    "documentation":"Defines treatment of non-cash dividends.",
    "characteristics":{
      "enumeration":[{
        "value":"PotentialAdjustmentEvent"
      },{
        "value":"CashEquivalent"
      }]
    },
    "extend":"token"
  },{
    "name":"EnvironmentalProductApplicableLaw",
    "documentation":"TBD.",
    "extend":"Scheme"
  },{
    "name":"instrumentTradeDetails"
  },{
    "name":"GasDeliveryPeriods",
    "documentation":"The different options for specifying the Delivery Periods for a physically settled gas trade.",
    "relationships":["periods->AdjustableDates[1..1]","periodsSchedule->CommodityCalculationPeriodsSchedule[1..1]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]","supplyStartTime->PrevailingTime[1..1]","supplyEndTime->PrevailingTime[1..1]"],
    "extend":"CommodityDeliveryPeriods"
  },{
    "name":"largeSizeTrade",
    "extend":"anySimpleType"
  },{
    "name":"initialIndexLevel",
    "extend":"anySimpleType"
  },{
    "name":"CommodityInformationSource",
    "documentation":"A type defining the source of a commodity rate, price or index or of a market rate or of a conversion factor (e.g. a fx conversion factor).",
    "relationships":["rateSource->CommodityInformationProvider[1..1]","rateSourcePage->RateSourcePage[0..1]","rateSourcePageHeading[0..1]"]
  },{
    "name":"dayNumber",
    "extend":"decimal"
  },{
    "name":"side",
    "documentation":"The side from which perspective a value is quoted.",
    "characteristics":{
      "enumeration":[{
        "value":"Bid"
      },{
        "value":"Ask"
      },{
        "value":"Mid"
      }]
    },
    "extend":"token"
  },{
    "name":"ScheduledDate",
    "documentation":"An servicing date relevant for a trade structure, such as a payment or a reset.",
    "relationships":["unadjustedDate[1..1]","adjustedDate[0..1]","adjustedDate[1..1]","type->ScheduledDateType[1..1]","assetReference->AnyAssetReference[0..1]","associatedValue->AssetValuation[1..1]","associatedValueReference->ValuationReference[1..1]"]
  },{
    "name":"MasterConfirmationType",
    "extend":"Scheme"
  },{
    "name":"XPath",
    "extend":"anySimpleType"
  },{
    "name":"valuationTimeType",
    "documentation":"Defines points in the day when equity option exercise and valuation can occur.",
    "characteristics":{
      "enumeration":[{
        "value":"Close"
      },{
        "value":"Open"
      },{
        "value":"OSP"
      },{
        "value":"SpecificTime"
      },{
        "value":"XETRA"
      },{
        "value":"DerivativesClose"
      },{
        "value":"AsSpecifiedInMasterConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"FxOptionFeatures",
    "documentation":"A type describing the features that may be present in an FX option.",
    "relationships":["asian->FxAsianFeature[1..1]","barrier->FxBarrierFeature[0..]","barrier->FxBarrierFeature[1..]"]
  },{
    "name":"UpperBound",
    "relationships":["maximumInclusive[1..1]","maximumExclusive[1..1]"]
  },{
    "name":"requestConsentRetracted"
  },{
    "name":"MethodOfAdjustmentEnum",
    "documentation":"Defines how adjustments will be made to the contract should one or more of the extraordinary events occur.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationAgent"
      },{
        "value":"OptionsExchange"
      }]
    },
    "extend":"token"
  },{
    "name":"commissionPerTrade",
    "extend":"anySimpleType"
  },{
    "name":"WeatherCalculationPeriod",
    "documentation":"The schedule of Calculation Period First Days and Lasts Days. If there is only one First Day - Last Day pair then the First is equal to the Effective Date and the Last Day is equal to the Termination Date.",
    "relationships":["calculationPeriodFirstDay->IdentifiedDate[1..1]","calculationPeriodEndDay->IdentifiedDate[1..1]"]
  },{
    "name":"description",
    "extend":"anySimpleType"
  },{
    "name":"cashSettlementOnly",
    "extend":"anySimpleType"
  },{
    "name":"levelPercentage",
    "extend":"anySimpleType"
  },{
    "name":"exchangeTradedContractNearest",
    "extend":"anySimpleType"
  },{
    "name":"CommodityNotionalQuantity",
    "documentation":"Commodity Notional.",
    "relationships":["quantityUnit->QuantityUnit[1..1]","quantityFrequency->CommodityQuantityFrequency[1..1]","quantity[1..1]"]
  },{
    "name":"CalculationPeriod",
    "documentation":"A type defining the parameters used in the calculation of a fixed or floating rate calculation period amount. This type forms part of cashflows representation of a swap stream.",
    "relationships":["unadjustedStartDate[0..1]","unadjustedEndDate[0..1]","adjustedStartDate[0..1]","adjustedEndDate[0..1]","calculationPeriodNumberOfDays[0..1]","notionalAmount[1..1]","fxLinkedNotionalAmount->FxLinkedNotionalAmount[1..1]","floatingRateDefinition->FloatingRateDefinition[1..1]","fixedRate[1..1]","dayCountYearFraction[0..1]","forecastAmount->Money[0..1]","forecastRate[0..1]"]
  },{
    "name":"mutualEarlyTermination",
    "extend":"anySimpleType"
  },{
    "name":"commodity"
  },{
    "name":"restructuring"
  },{
    "name":"adjustedExerciseFeePaymentDate",
    "extend":"anySimpleType"
  },{
    "name":"SignatureValueType",
    "extend":"base64Binary"
  },{
    "name":"applicableDay",
    "documentation":"A day of the seven-day week.",
    "characteristics":{
      "enumeration":[{
        "value":"MON"
      },{
        "value":"TUE"
      },{
        "value":"WED"
      },{
        "value":"THU"
      },{
        "value":"FRI"
      },{
        "value":"SAT"
      },{
        "value":"SUN"
      }]
    },
    "extend":"token"
  },{
    "name":"SettlementTermsReference",
    "documentation":"Reference to a settlement terms derived construct (cashSettlementTerms or physicalSettlementTerms).",
    "extend":"Reference"
  },{
    "name":"requestConfirmation"
  },{
    "name":"DerivativeCalculationMethod",
    "documentation":"The method by which a derivative is computed.",
    "extend":"Scheme"
  },{
    "name":"SpecifiedCurrency",
    "relationships":["applicable[1..1]","currency->Currency[0..]"]
  },{
    "name":"routingAccountNumber",
    "extend":"anySimpleType"
  },{
    "name":"NonNegativeMoney",
    "documentation":"A type defining a currency amount as at a future value date.",
    "relationships":["currency->Currency[1..1]","amount[1..1]"],
    "extend":"MoneyBase"
  },{
    "name":"forwardPoints",
    "extend":"anySimpleType"
  },{
    "name":"FailureToPay",
    "relationships":["applicable[1..1]","gracePeriodExtension->GracePeriodExtension[0..1]","paymentRequirement->Money[0..1]"]
  },{
    "name":"synopticDataFallback",
    "extend":"anySimpleType"
  },{
    "name":"CommodityDeliveryPoint",
    "documentation":"A scheme identifying the types of the Delivery Point for a physically settled commodity trade.",
    "extend":"Scheme"
  },{
    "name":"ProductType",
    "extend":"Scheme"
  },{
    "name":"CommodityPipeline",
    "documentation":"The pipeline through which the physical commodity will be delivered.",
    "extend":"Scheme"
  },{
    "name":"PositionStatusEnum",
    "documentation":"The type of averaging used in an Asian option.A type used to report the status of a position.",
    "characteristics":{
      "enumeration":[{
        "value":"New"
      },{
        "value":"Existing"
      },{
        "value":"Closed"
      }]
    },
    "extend":"token"
  },{
    "name":"nonpublicReportUpdated",
    "extend":"anySimpleType"
  },{
    "name":"applicable",
    "extend":"anySimpleType"
  },{
    "name":"InitialPayment",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","adjustablePaymentDate[0..1]","adjustedPaymentDate[0..1]","paymentAmount->Money[1..1]"],
    "extend":"PaymentBase"
  },{
    "name":"CommoditySpread",
    "relationships":["currency->Currency[1..1]","amount[1..1]","spreadConversionFactor[0..1]","spreadUnit->QuantityUnit[0..1]"],
    "extend":"Money"
  },{
    "name":"QuotationStyleEnum",
    "documentation":"Indicates the actual quotation style of of PointsUpFront or TradedSpread that was used to quote this trade.",
    "characteristics":{
      "enumeration":[{
        "value":"PointsUpFront"
      },{
        "value":"TradedSpread"
      }]
    },
    "extend":"token"
  },{
    "name":"SignatureValue"
  },{
    "name":"FixedRateReference",
    "extend":"Reference"
  },{
    "name":"TriggerTimeTypeEnum",
    "documentation":"The time of day which would be considered for valuing the knock event.",
    "characteristics":{
      "enumeration":[{
        "value":"Closing"
      },{
        "value":"Anytime"
      }]
    },
    "extend":"token"
  },{
    "name":"updatedForConfirmation",
    "extend":"anySimpleType"
  },{
    "name":"ExecutionNotification",
    "documentation":"A message notifying a party that a trade execution has occurred. (Typically this is sent by an execution platform to a participant.)",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","quote->BasicQuotation[1..]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"accruedInterestPrice",
    "extend":"anySimpleType"
  },{
    "name":"positiveInteger",
    "extend":"nonNegativeInteger"
  },{
    "name":"ClearingRefused",
    "documentation":"A message indicating that a clearing request has not been acted on due to a business decision and therefore no trade has been cleared.",
    "relationships":["header->NotificationMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","quote->BasicQuotation[1..]","party->Party[1..]","account->Account[0..]","reason->Reason[0..]"],
    "extend":"NotificationMessage"
  },{
    "name":"marketDisruptionEvents",
    "documentation":"The specification of how market disruption events will be represented.",
    "characteristics":{
      "enumeration":[{
        "value":"Applicable"
      },{
        "value":"NotApplicable"
      },{
        "value":"AsSpecifiedInMasterAgreement"
      },{
        "value":"AsSpecifiedInConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"payoutFormula",
    "extend":"anySimpleType"
  },{
    "name":"units",
    "extend":"string"
  },{
    "name":"StrikeSchedule",
    "documentation":"A type describing a schedule of cap or floor rates.",
    "relationships":["initialValue[1..1]","step->Step[0..]","buyer->IdentifiedPayerReceiver[0..1]","seller->IdentifiedPayerReceiver[0..1]"],
    "extend":"Schedule"
  },{
    "name":"ResourceId",
    "documentation":"The data type used for resource identifiers.",
    "extend":"Scheme"
  },{
    "name":"DividendPayout",
    "documentation":"A type describing the dividend payout ratio associated with an equity underlyer. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified.",
    "relationships":["dividendPayoutRatio[1..1]","dividendPayoutConditions[1..1]","dividendPayment->PendingPayment[0..]"]
  },{
    "name":"commodityForwardLeg"
  },{
    "name":"RelatedParty",
    "relationships":["partyReference->PartyReference[1..1]","accountReference->AccountReference[0..1]","role->PartyRole[1..1]","type->PartyRoleType[0..1]"]
  },{
    "name":"EquityAsset",
    "documentation":"An exchange traded equity asset.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","relatedExchangeId->ExchangeId[0..]","optionsExchangeId->ExchangeId[0..]","specifiedExchangeId->ExchangeId[0..]"],
    "extend":"ExchangeTraded"
  },{
    "name":"adjustmentValue",
    "extend":"anySimpleType"
  },{
    "name":"commoditySwaption"
  },{
    "name":"equityForward"
  },{
    "name":"CorrelationValue",
    "documentation":"A type defining a number specified as a decimal between -1 and 1 inclusive.",
    "extend":"decimal"
  },{
    "name":"openEndedFund",
    "extend":"anySimpleType"
  },{
    "name":"gYearMonth",
    "extend":"anySimpleType"
  },{
    "name":"Premium",
    "documentation":"A type for defining a premium.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentAmount->NonNegativeMoney[1..1]","paymentDate->AdjustableOrRelativeDate[1..1]","premiumType[0..1]","pricePerOption->Money[0..1]","percentageOfNotional[0..1]","discountFactor[0..1]","presentValueAmount->Money[0..1]"],
    "extend":"SimplePayment"
  },{
    "name":"FirstPeriodStartDate",
    "extend":"date"
  },{
    "name":"FloatingPriceLeg",
    "documentation":"Floating Price Leg of a Commodity Swap.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","calculationDates->AdjustableDates[1..1]","calculationPeriods->AdjustableDates[1..1]","calculationPeriodsSchedule->CommodityCalculationPeriodsSchedule[1..1]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]","commodity->Commodity[1..1]","notionalQuantitySchedule->CommodityNotionalQuantitySchedule[1..1]","notionalQuantity->CommodityNotionalQuantity[1..1]","settlementPeriodsNotionalQuantity->CommoditySettlementPeriodsNotionalQuantity[1..]","totalNotionalQuantity[0..1]","quantityReference->QuantityReference[1..1]","calculation->FloatingLegCalculation[1..1]","relativePaymentDates->CommodityRelativePaymentDates[1..1]","paymentDates->AdjustableDatesOrRelativeDateOffset[1..1]","masterAgreementPaymentDates[1..1]","flatRate[1..1]","flatRateAmount->NonNegativeMoney[0..1]"],
    "extend":"FinancialSwapLeg"
  },{
    "name":"category",
    "documentation":"Used in both the obligations and deliverable obligations of the credit default swap to represent a class or type of securities which apply.",
    "characteristics":{
      "enumeration":[{
        "value":"Payment"
      },{
        "value":"BorrowedMoney"
      },{
        "value":"ReferenceObligationsOnly"
      },{
        "value":"Bond"
      },{
        "value":"Loan"
      },{
        "value":"BondOrLoan"
      }]
    },
    "extend":"token"
  },{
    "name":"UnderlyingAssetTranche",
    "extend":"Scheme"
  },{
    "name":"Portfolio",
    "documentation":"A type representing an arbitary grouping of trade references.",
    "relationships":["partyPortfolioName->PartyPortfolioName[0..1]","tradeId->TradeId[0..]","partyTradeIdentifier->PartyTradeIdentifier[0..]","portfolio->Portfolio[0..]"]
  },{
    "name":"requestAllocation"
  },{
    "name":"PrincipalExchange",
    "documentation":"A type defining a principal exchange amount and adjusted exchange date. The type forms part of the cashflow representation of a swap stream.",
    "relationships":["unadjustedPrincipalExchangeDate[0..1]","adjustedPrincipalExchangeDate[0..1]","principalExchangeAmount[0..1]","discountFactor[0..1]","presentValuePrincipalExchangeAmount->Money[0..1]"]
  },{
    "name":"StepBase",
    "documentation":"A type defining a step date and non-negative step value pair. This step definitions are used to define varying rate or amount schedules, e.g. a notional amortization or a step-up coupon schedule.",
    "relationships":["stepDate[1..1]"]
  },{
    "name":"PayerReceiverEnum",
    "documentation":"The specification of an interest rate stream payer or receiver party.",
    "characteristics":{
      "enumeration":[{
        "value":"Payer"
      },{
        "value":"Receiver"
      }]
    },
    "extend":"token"
  },{
    "name":"pointValue",
    "documentation":"Constrains the forward point tick/pip factor to 1, 0.1, 0.01, 0.001, etc.",
    "extend":"decimal"
  },{
    "name":"Acknowledgement",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originalMessage->UnprocessedElementWrapper[0..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"stepDate",
    "extend":"anySimpleType"
  },{
    "name":"CalculationPeriodsScheduleReference",
    "documentation":"A pointer style reference to a calculation periods schedule defined elsewhere - note that this schedule consists of a parameterised schedule in a calculationPeriodsSchedule container.",
    "extend":"Reference"
  },{
    "name":"Exponent",
    "extend":"base64Binary"
  },{
    "name":"AdjustableDate2",
    "documentation":"A type that is different from AdjustableDate in two regards. First, date adjustments can be specified with either a dateAdjustments element or a reference to an existing dateAdjustments element. Second, it does not require the specification of date adjustments.",
    "relationships":["unadjustedDate->IdentifiedDate[1..1]","dateAdjustments->BusinessDayAdjustments[1..1]","dateAdjustmentsReference->BusinessDayAdjustmentsReference[1..1]","adjustedDate->IdentifiedDate[0..1]"]
  },{
    "name":"NonNegativeSchedule",
    "documentation":"A type defining a currency amount or a currency amount schedule.",
    "relationships":["initialValue[1..1]","step->NonNegativeStep[0..]"]
  },{
    "name":"nonReliance",
    "extend":"anySimpleType"
  },{
    "name":"FutureValueAmount",
    "documentation":"A type defining a currency amount as at a future value date.",
    "relationships":["currency->Currency[1..1]","amount[1..1]","calculationPeriodNumberOfDays[1..1]","valueDate[1..1]"],
    "extend":"NonNegativeMoney"
  },{
    "name":"EquityExerciseValuationSettlement",
    "documentation":"A type for defining exercise procedures for equity options.",
    "relationships":["equityEuropeanExercise->EquityEuropeanExercise[1..1]","equityAmericanExercise->EquityAmericanExercise[1..1]","equityBermudaExercise->EquityBermudaExercise[1..1]","automaticExercise[1..1]","makeWholeProvisions->MakeWholeProvisions[0..1]","prePayment->PrePayment[1..1]","equityValuation->EquityValuation[1..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementCurrency->Currency[1..1]","settlementPriceSource->SettlementPriceSource[0..1]","settlementType[1..1]","settlementMethodElectionDate->AdjustableOrRelativeDate[0..1]","settlementMethodElectingPartyReference->PartyReference[0..1]","settlementPriceDefaultElection->SettlementPriceDefaultElection[0..1]"]
  },{
    "name":"requestTradeReferenceInformationUpdate"
  },{
    "name":"number",
    "extend":"anySimpleType"
  },{
    "name":"TradeUnderlyer2",
    "documentation":"The underlying asset/index/reference price etc. whose rate/price may be observed to compute the value of the cashflow. It can be an index, fixed rate, listed security, quoted currency pair, or a reference entity (for credit derivatives). For use with Generic products in Transparency reporting. Generic products define a product that represents an OTC derivative transaction whose economics are not fully described using an FpML schema. In other views, generic products are present for convenience to support internal messaging and workflows that are cross-product. Generic products are not full trade representations as such they are not intended to be used for confirming trades.",
    "relationships":["floatingRate->FloatingRate[1..1]","fixedRate->Schedule[1..1]","underlyingAsset->Asset[1..1]","quotedCurrencyPair->QuotedCurrencyPair[1..1]","referenceEntity->LegalEntity[1..1]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]"]
  },{
    "name":"PositivePayment",
    "documentation":"A complex type to specify positive payments.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentDate->AdjustableOrRelativeDate[1..1]","paymentAmount->PositiveMoney[1..1]"],
    "extend":"PaymentBaseExtended"
  },{
    "name":"PutCallEnum",
    "documentation":"Specifies whether the option is a call or a put.",
    "characteristics":{
      "enumeration":[{
        "value":"Put"
      },{
        "value":"Call"
      }]
    },
    "extend":"token"
  },{
    "name":"base64Binary",
    "extend":"anySimpleType"
  },{
    "name":"IndustryClassification",
    "documentation":"A party's industry sector classification.",
    "extend":"Scheme"
  },{
    "name":"submittedForClearing",
    "extend":"anySimpleType"
  },{
    "name":"firstPeriodStartDate",
    "extend":"anySimpleType"
  },{
    "name":"rejectionLimit",
    "extend":"anySimpleType"
  },{
    "name":"RequiredIdentifierDate",
    "documentation":"A date with a required identifier which can be referenced elsewhere.",
    "extend":"date"
  },{
    "name":"collateralAllocationAccepted"
  },{
    "name":"executionAdviceException"
  },{
    "name":"confirmationStatus"
  },{
    "name":"PricingInputReplacement",
    "documentation":"The substitution of a pricing input (e.g. curve) for another, used in generating prices and risks for valuation scenarios.",
    "relationships":["originalInputReference->PricingStructureReference[1..1]","replacementInputReference->PricingStructureReference[1..1]"]
  },{
    "name":"CreditSupportAgreementType",
    "extend":"Scheme"
  },{
    "name":"barrierType",
    "documentation":"The specification of whether a barrier within an FX OTC option is a knockin or knockout, as well as whether it is a standard barrier or a reverse barrier.",
    "characteristics":{
      "enumeration":[{
        "value":"Knockin"
      },{
        "value":"Knockout"
      },{
        "value":"ReverseKnockin"
      },{
        "value":"ReverseKnockout"
      }]
    },
    "extend":"token"
  },{
    "name":"payoutStyle",
    "documentation":"The specification of how an FX OTC option with a trigger payout will be paid if the trigger condition is met. The contract will specify whether the payout will occur immediately or on the original value date of the option.",
    "characteristics":{
      "enumeration":[{
        "value":"Deferred"
      },{
        "value":"Immediate"
      }]
    },
    "extend":"token"
  },{
    "name":"DualCurrencyFeature",
    "documentation":"Describes the parameters for a dual currency deposit.",
    "relationships":["currency->Currency[1..1]","fixingDate[1..1]","fixingTime->BusinessCenterTime[0..1]","strike->DualCurrencyStrikePrice[1..1]","spotRate[0..1]","interestAtRisk[1..1]"]
  },{
    "name":"queryParameterValue",
    "extend":"string"
  },{
    "name":"OptionType",
    "documentation":"A flexible description of the type or characteristics of an option or strategy, e.g. butterfly, condor, chooser. For use with Generic products in Transparency reporting. Generic products define a product that represents an OTC derivative transaction whose economics are not fully described using an FpML schema. In other views, generic products are present for convenience to support internal messaging and workflows that are cross-product. Generic products are not full trade representations as such they are not intended to be used for confirming trades.",
    "extend":"Scheme"
  },{
    "name":"PhysicalSwapLeg",
    "documentation":"Physically settled leg of a physically settled coal transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]"],
    "extend":"CommoditySwapLeg"
  },{
    "name":"amendmentDate",
    "extend":"anySimpleType"
  },{
    "name":"QuotationRateTypeEnum",
    "documentation":"The specification of the type of quotation rate to be obtained from each cash settlement reference bank.",
    "characteristics":{
      "enumeration":[{
        "value":"Bid"
      },{
        "value":"Ask"
      },{
        "value":"Mid"
      },{
        "value":"ExercisingPartyPays"
      }]
    },
    "extend":"token"
  },{
    "name":"PaymentId",
    "documentation":"An identifier used to identify a matchable payment.",
    "extend":"Scheme"
  },{
    "name":"spotRate",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"CoalPhysicalLeg",
    "documentation":"Physically settled leg of a physically settled coal transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","deliveryPeriods->CommodityDeliveryPeriods[1..1]","coal->CoalProduct[1..1]","deliveryConditions->CoalDelivery[1..1]","deliveryQuantity->CommodityPhysicalQuantity[1..1]"],
    "extend":"PhysicalSwapLeg"
  },{
    "name":"Price",
    "documentation":"A type describing the strike price.",
    "relationships":["commission->Commission[0..1]","determinationMethod->DeterminationMethod[1..1]","grossPrice->ActualPrice[0..1]","netPrice->ActualPrice[1..1]","accruedInterestPrice[0..1]","fxConversion->FxConversion[0..1]","amountRelativeTo->AmountReference[1..1]","grossPrice->ActualPrice[0..1]","netPrice->ActualPrice[1..1]","accruedInterestPrice[0..1]","fxConversion->FxConversion[0..1]","cleanNetPrice[0..1]","quotationCharacteristics->QuotationCharacteristics[0..1]"]
  },{
    "name":"orderSubmitted",
    "extend":"anySimpleType"
  },{
    "name":"termDeposit"
  },{
    "name":"RequestConsent",
    "documentation":"A message requesting that the sender be authorized by the recipient to peform an action.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","requestedAction->RequestedAction[0..1]","portfolioReference->PortfolioReference[1..1]","compressionActivity->CompressionActivity[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","quote->BasicQuotation[1..]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"unadjustedPrincipalExchangeDate",
    "extend":"anySimpleType"
  },{
    "name":"Swap",
    "documentation":"A type defining swap streams and additional payments between the principal parties involved in the swap.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","swapStream->InterestRateStream[1..]","earlyTerminationProvision->EarlyTerminationProvision[0..1]","cancelableProvision->CancelableProvision[0..1]","extendibleProvision->ExtendibleProvision[0..1]","additionalPayment->Payment[0..]","additionalTerms->SwapAdditionalTerms[0..1]"],
    "extend":"Product"
  },{
    "name":"FallbackReferencePrice",
    "documentation":"The method, prioritzed by the order it is listed in this element, to get a replacement rate for the disrupted settlement rate option.",
    "relationships":["valuationPostponement->ValuationPostponement[0..1]","fallbackSettlementRateOption->SettlementRateOption[0..]","fallbackSurveyValuationPostponenment->Empty[0..1]","calculationAgentDetermination->CalculationAgent[0..1]"]
  },{
    "name":"ExecutionType",
    "documentation":"A type used to represent the type of market where a trade can be executed.",
    "extend":"Scheme"
  },{
    "name":"ThresholdTypeEnum",
    "documentation":"The type of threshold.",
    "characteristics":{
      "enumeration":[{
        "value":"Secured"
      },{
        "value":"Unsecured"
      }]
    },
    "extend":"token"
  },{
    "name":"metalPhysicalLeg"
  },{
    "name":"failureToDeliverApplicable",
    "extend":"anySimpleType"
  },{
    "name":"fixedStrike",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"finalExchange",
    "extend":"anySimpleType"
  },{
    "name":"floatingRateCalculation"
  },{
    "name":"adjustedExtendedTerminationDate",
    "extend":"anySimpleType"
  },{
    "name":"maturityNotification"
  },{
    "name":"equityOption"
  },{
    "name":"VarianceSwapTransactionSupplement",
    "documentation":"A Variance Swap Transaction Supplement.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","varianceLeg->VarianceLeg[1..]","multipleExchangeIndexAnnexFallback[1..1]","componentSecurityIndexAnnexFallback[1..1]","localJurisdiction->CountryCode[0..1]","relevantJurisdiction->CountryCode[0..1]"],
    "extend":"Product"
  },{
    "name":"escrow",
    "extend":"anySimpleType"
  },{
    "name":"businessDayConvention",
    "documentation":"The convention for adjusting any relevant date if it would otherwise fall on a day that is not a valid business day. Note that FRN is included here as a type of business day convention although it does not strictly fall within ISDA's definition of a Business Day Convention and does not conform to the simple definition given above.",
    "characteristics":{
      "enumeration":[{
        "value":"FOLLOWING"
      },{
        "value":"FRN"
      },{
        "value":"MODFOLLOWING"
      },{
        "value":"PRECEDING"
      },{
        "value":"MODPRECEDING"
      },{
        "value":"NEAREST"
      },{
        "value":"NONE"
      },{
        "value":"NotApplicable"
      }]
    },
    "extend":"token"
  },{
    "name":"breakFundingRecovery",
    "extend":"anySimpleType"
  },{
    "name":"string",
    "extend":"anySimpleType"
  },{
    "name":"SensitivitySet",
    "documentation":"A collection of sensitivities. References a definition that explains the meaning/type of the sensitivities.",
    "relationships":["name[0..1]","definitionReference->SensitivitySetDefinitionReference[0..1]","sensitivity->Sensitivity[0..]"]
  },{
    "name":"standardPublicSources",
    "extend":"anySimpleType"
  },{
    "name":"SettlementMethod",
    "extend":"Scheme"
  },{
    "name":"EventRequestAcknowledgement",
    "documentation":"Defines the structure for a message acknowledging an event request.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originalMessage->UnprocessedElementWrapper[0..1]","tradeReferenceInformation->TradeReferenceInformation[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"automaticExercise",
    "extend":"anySimpleType"
  },{
    "name":"excessDividendAmount",
    "documentation":"Refers to one on the 3 Amounts",
    "characteristics":{
      "enumeration":[{
        "value":"RecordAmount"
      },{
        "value":"ExAmount"
      },{
        "value":"PaidAmount"
      },{
        "value":"AsSpecifiedInMasterConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"MarketDisruptionEventsEnum",
    "documentation":"The specification of how market disruption events will be represented.",
    "characteristics":{
      "enumeration":[{
        "value":"Applicable"
      },{
        "value":"NotApplicable"
      },{
        "value":"AsSpecifiedInMasterAgreement"
      },{
        "value":"AsSpecifiedInConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"SettlementPeriods",
    "documentation":"Specifies a set of Settlement Periods associated with an Electricity Transaction for delivery on an Applicable Day or for a series of Applicable Days.",
    "relationships":["duration[1..1]","applicableDay[0..7]","startTime->OffsetPrevailingTime[1..1]","endTime->OffsetPrevailingTime[1..1]","excludeHolidays->CommodityBusinessCalendar[1..1]","includeHolidays->CommodityBusinessCalendar[1..1]"]
  },{
    "name":"initialExchange",
    "extend":"anySimpleType"
  },{
    "name":"WeatherStationWBAN",
    "documentation":"A code identifying a Weather Station WBAN.",
    "extend":"Scheme"
  },{
    "name":"PaymentReference",
    "documentation":"Reference to a payment.",
    "extend":"Reference"
  },{
    "name":"postitive",
    "documentation":"A type defining a percentage specified as decimal from 0 to 1. A percentage of 5% would be represented as 0.05.",
    "extend":"decimal"
  },{
    "name":"AccountId",
    "documentation":"The data type used for account identifiers.",
    "extend":"Scheme"
  },{
    "name":"Scheme",
    "documentation":"The base class for all types which define coding schemes.",
    "extend":"normalizedString"
  },{
    "name":"fallbackExercise",
    "extend":"anySimpleType"
  },{
    "name":"shareForCombined",
    "documentation":"Defines the consequences of extraordinary events relating to the underlying.",
    "characteristics":{
      "enumeration":[{
        "value":"AlternativeObligation"
      },{
        "value":"CancellationAndPayment"
      },{
        "value":"OptionsExchange"
      },{
        "value":"CalculationAgent"
      },{
        "value":"ModifiedCalculationAgent"
      },{
        "value":"PartialCancellationAndPayment"
      },{
        "value":"Component"
      }]
    },
    "extend":"token"
  },{
    "name":"futuresPriceValuation",
    "extend":"anySimpleType"
  },{
    "name":"ManifestType",
    "relationships":["Reference->ReferenceType[1..]"]
  },{
    "name":"ProductComponentIdentifier",
    "documentation":"A type defining a USI for the a subproduct component of a strategy.",
    "relationships":["premiumProductReference->ProductReference[0..1]","issuer->IssuerId[1..1]","tradeId->TradeId[1..1]"]
  },{
    "name":"CanonicalizationMethodType"
  },{
    "name":"FxFeature",
    "documentation":"A type for defining Fx Features.",
    "relationships":["referenceCurrency->IdentifiedCurrency[1..1]","composite->Composite[1..1]","quanto->Quanto[1..1]","crossCurrency->Composite[1..1]"]
  },{
    "name":"triggerTimeType",
    "documentation":"The time of day which would be considered for valuing the knock event.",
    "characteristics":{
      "enumeration":[{
        "value":"Closing"
      },{
        "value":"Anytime"
      }]
    },
    "extend":"token"
  },{
    "name":"value",
    "extend":"anySimpleType"
  },{
    "name":"EquityDerivativeLongFormBase",
    "documentation":"type for defining the common features of equity derivatives.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityEffectiveDate[0..1]","underlyer->Underlyer[1..1]","notional->NonNegativeMoney[0..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","feature->OptionFeatures[0..1]","fxFeature->FxFeature[0..1]","strategyFeature->StrategyFeature[0..1]","dividendConditions->DividendConditions[0..1]","methodOfAdjustment[1..1]","extraordinaryEvents->ExtraordinaryEvents[1..1]"],
    "extend":"EquityDerivativeBase"
  },{
    "name":"DayCountFraction",
    "documentation":"The specification for how the number of days between two dates is calculated for purposes of calculation of a fixed or floating payment amount and the basis for how many days are assumed to be in a year. Day Count Fraction is an ISDA term. The equivalent AFB (Association Francaise de Banques) term is Calculation Basis.",
    "extend":"Scheme"
  },{
    "name":"AveragingSchedule",
    "documentation":"Method of generating a series of dates.",
    "relationships":["startDate[1..1]","endDate[1..1]","averagingPeriodFrequency->CalculationPeriodFrequency[1..1]"]
  },{
    "name":"pricingStructureValuation"
  },{
    "name":"ReportingRegime",
    "documentation":"Provides information about how the information in this message is applicable to a regulatory reporting process.",
    "relationships":["name->ReportingRegimeName[1..1]","supervisorRegistration->SupervisorRegistration[1..]","supervisorRegistration->SupervisorRegistration[1..]","reportingRole->ReportingRole[0..1]","reportingPurpose->ReportingPurpose[0..]","mandatorilyClearable[0..1]"]
  },{
    "name":"gMonthDay",
    "extend":"anySimpleType"
  },{
    "name":"PortfolioReferenceBase",
    "documentation":"A structure used to group together individual messages that can be acted on at a group level.",
    "relationships":["portfolioName->PortfolioName[1..1]"]
  },{
    "name":"interestShortfallReimbursement",
    "extend":"anySimpleType"
  },{
    "name":"exerciseTime",
    "extend":"anySimpleType"
  },{
    "name":"LegId",
    "documentation":"Leg identity.",
    "extend":"Token60"
  },{
    "name":"SettlementPeriodsSchedule",
    "documentation":"The specification of the Settlement Periods in which the electricity will be delivered for a \"shaped\" trade i.e. where different Settlement Period ranges will apply to different periods of the trade.",
    "relationships":["settlementPeriodsStep->SettlementPeriodsStep[1..]","deliveryPeriodsReference->CalculationPeriodsReference[1..1]","deliveryPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]"]
  },{
    "name":"recoveryFactor",
    "documentation":"A type defining a percentage specified as decimal from 0 to 1. A percentage of 5% would be represented as 0.05.",
    "extend":"decimal"
  },{
    "name":"DifferenceSeverityEnum",
    "documentation":"The ISDA defined value indicating the severity of a difference.",
    "characteristics":{
      "enumeration":[{
        "value":"Warning"
      },{
        "value":"Error"
      }]
    },
    "extend":"token"
  },{
    "name":"CalculatedAmount",
    "documentation":"Calculation of a Variance Amount.",
    "relationships":["calculationDates->AdjustableRelativeOrPeriodicDates[0..1]","observationStartDate->AdjustableOrRelativeDate[0..1]","optionsExchangeDividends[0..1]","additionalDividends[0..1]","allDividends[0..1]"]
  },{
    "name":"CreditEventNotificationRetracted",
    "documentation":"A message type retracting a previous credit event notification.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","creditEventNotice->CreditEventNoticeDocument[0..1]","party->Party[2..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"EndUserExceptionDeclaration",
    "documentation":"Records supporting information justifying an end user exception under 17 CFR part 39.",
    "relationships":["creditDocument->CreditDocument[0..]","organizationCharacteristic->OrganizationCharacteristic[0..]","transactionCharacteristic->TransactionCharacteristic[0..]","supervisorRegistration->SupervisorRegistration[0..]"]
  },{
    "name":"AssetReference",
    "documentation":"Reference to an underlying asset.",
    "extend":"Reference"
  },{
    "name":"RoutingExplicitDetails",
    "documentation":"A type that models name, address and supplementary textual information for the purposes of identifying a party involved in the routing of a payment.",
    "relationships":["routingName[1..1]","routingAddress->Address[0..1]","routingAccountNumber[0..1]","routingReferenceText[0..]"]
  },{
    "name":"RequestTradeReferenceInformationUpdateRetracted",
    "documentation":"Defines the structure for a message retracting a request to updated information about trade.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","tradeReferenceInformation->TradeReferenceInformation[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"americanExercise"
  },{
    "name":"InterestAccrualsCompoundingMethod",
    "documentation":"A type defining the way in which interests are accrued: the applicable rate (fixed or floating reference) and the compounding method.",
    "relationships":["floatingRateCalculation->FloatingRateCalculation[1..1]","fixedRate[1..1]","compoundingMethod[1..1]"],
    "extend":"InterestAccrualsMethod"
  },{
    "name":"CreditOptionStrike",
    "documentation":"A complex type to specify the strike of a credit swaption or a credit default swap option.",
    "relationships":["spread[1..1]","price[1..1]","strikeReference->FixedRateReference[1..1]"]
  },{
    "name":"FxFixingDate",
    "documentation":"A type that is extending the Offset structure for providing the ability to specify an FX fixing date as an offset to dates specified somewhere else in the document.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","dayType[0..1]","businessDayConvention[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]","dateRelativeToPaymentDates->DateRelativeToPaymentDates[1..1]","dateRelativeToCalculationPeriodDates->DateRelativeToCalculationPeriodDates[1..1]"],
    "extend":"Offset"
  },{
    "name":"LegAmount",
    "documentation":"A type describing the amount that will paid or received on each of the payment dates. This type is used to define both the Equity Amount and the Interest Amount.",
    "relationships":["currency->IdentifiedCurrency[1..1]","determinationMethod->DeterminationMethod[1..1]","currencyReference->IdentifiedCurrencyReference[1..1]","referenceAmount->ReferenceAmount[1..1]","formula->Formula[1..1]","encodedDescription[1..1]","calculationDates->AdjustableRelativeOrPeriodicDates[0..1]"]
  },{
    "name":"changeEvent"
  },{
    "name":"CashSettlementTerms",
    "relationships":["settlementCurrency->Currency[0..1]","valuationDate->ValuationDate[0..1]","valuationTime->BusinessCenterTime[0..1]","quotationMethod[0..1]","quotationAmount->Money[0..1]","minimumQuotationAmount->Money[0..1]","dealer[0..]","cashSettlementBusinessDays[0..1]","cashSettlementAmount->Money[1..1]","recoveryFactor[1..1]","fixedSettlement[0..1]","accruedInterest[0..1]","valuationMethod[0..1]"],
    "extend":"SettlementTerms"
  },{
    "name":"specifiedPrice",
    "documentation":"The Specified Price in respect of a Transaction and a Commodity Reference Price.",
    "characteristics":{
      "enumeration":[{
        "value":"Afternoon"
      },{
        "value":"Ask"
      },{
        "value":"Bid"
      },{
        "value":"Closing"
      },{
        "value":"High"
      },{
        "value":"Index"
      },{
        "value":"MeanOfBidAndAsk"
      },{
        "value":"LocationalMarginal"
      },{
        "value":"Low"
      },{
        "value":"MarginalHourly"
      },{
        "value":"MarketClearing"
      },{
        "value":"MeanOfHighAndLow"
      },{
        "value":"Morning"
      },{
        "value":"Official"
      },{
        "value":"Opening"
      },{
        "value":"OSP"
      },{
        "value":"Settlement"
      },{
        "value":"Spot"
      },{
        "value":"Midpoint"
      },{
        "value":"NationalSingle"
      },{
        "value":"WeightedAverage"
      },{
        "value":"UnWeightedAverage"
      }]
    },
    "extend":"token"
  },{
    "name":"KeyValue"
  },{
    "name":"Commission",
    "documentation":"A type describing the commission that will be charged for each of the hedge transactions.",
    "relationships":["commissionDenomination[1..1]","commissionAmount[1..1]","currency->Currency[0..1]","commissionPerTrade[0..1]","fxRate->FxRate[0..]"]
  },{
    "name":"balanceOfFirstPeriod",
    "extend":"anySimpleType"
  },{
    "name":"changeInNumberOfOptions",
    "extend":"anySimpleType"
  },{
    "name":"fx"
  },{
    "name":"MarketDisruption",
    "documentation":"Defines the handling of an averaging date market disruption for an equity derivative transaction.",
    "extend":"Scheme"
  },{
    "name":"initial",
    "extend":"normalizedString"
  },{
    "name":"CollateralValueAllocation",
    "relationships":["type[1..1]","value->Money[1..]"]
  },{
    "name":"QuantityUnit",
    "extend":"Scheme"
  },{
    "name":"Routing",
    "documentation":"A type that provides three alternative ways of identifying a party involved in the routing of a payment. The identification may use payment system identifiers only; actual name, address and other reference information; or a combination of both.",
    "relationships":["routingIds->RoutingIds[1..1]","routingExplicitDetails->RoutingExplicitDetails[1..1]","routingIdsAndExplicitDetails->RoutingIdsAndExplicitDetails[1..1]"]
  },{
    "name":"equityEffectiveDate",
    "extend":"anySimpleType"
  },{
    "name":"weeklyRollConvention",
    "documentation":"The specification of a weekly roll day.",
    "extend":"anySimpleType"
  },{
    "name":"notionalAmount",
    "extend":"anySimpleType"
  },{
    "name":"CommodityBullionSettlementDisruptionEnum",
    "documentation":"The consequences of Bullion Settlement Disruption Events.",
    "characteristics":{
      "enumeration":[{
        "value":"Negotiation"
      },{
        "value":"Cancellation and Payment"
      }]
    },
    "extend":"token"
  },{
    "name":"executionAdvice"
  },{
    "name":"methodOfAdjustment",
    "documentation":"Defines how adjustments will be made to the contract should one or more of the extraordinary events occur.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationAgent"
      },{
        "value":"OptionsExchange"
      }]
    },
    "extend":"token"
  },{
    "name":"SimpleFra",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","startTerm->Period[1..1]","endTerm->Period[1..1]","dayCountFraction->DayCountFraction[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"coefficient",
    "extend":"anySimpleType"
  },{
    "name":"FixedPaymentLeg",
    "documentation":"Fixed Payment Leg of a Dividend Swap.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","fixedPayment->FixedPaymentAmount[1..]"],
    "extend":"DirectionalLeg"
  },{
    "name":"tradeChangeAdvice"
  },{
    "name":"X509DataType",
    "relationships":["X509IssuerSerial->X509IssuerSerialType[1..1]","X509SKI[1..1]","X509SubjectName[1..1]","X509Certificate[1..1]","X509CRL[1..1]"]
  },{
    "name":"RequestMessageHeader",
    "documentation":"A type refining the generic message header content to make it specific to request messages.",
    "relationships":["messageId->MessageId[1..1]","sentBy->MessageAddress[1..1]","sendTo->MessageAddress[0..]","copyTo->MessageAddress[0..]","creationTimestamp[1..1]","expiryTimestamp[0..1]","implementationSpecification->ImplementationSpecification[0..1]","partyMessageInformation->PartyMessageInformation[0..]","Signature->SignatureType[0..]"],
    "extend":"MessageHeader"
  },{
    "name":"ReturnLeg",
    "documentation":"A type describing the return leg of a return type swap.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","strikeDate->AdjustableOrRelativeDate[0..1]","underlyer->Underlyer[1..1]","rateOfReturn->ReturnLegValuation[1..1]","notional->ReturnSwapNotional[1..1]","amount->ReturnSwapAmount[1..1]","return->Return[1..1]","notionalAdjustments[1..1]","fxFeature->FxFeature[0..1]","averagingDates->AveragingPeriod[0..1]"],
    "extend":"ReturnSwapLegUnderlyer"
  },{
    "name":"equivalentApplicable",
    "extend":"anySimpleType"
  },{
    "name":"PricingModel",
    "documentation":"A scheme identifying the types of pricing model used to evaluate the price of an asset. Examples include Intrinsic, ClosedForm, MonteCarlo, BackwardInduction.",
    "extend":"Scheme"
  },{
    "name":"lowerBarrier",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"Modulus",
    "extend":"base64Binary"
  },{
    "name":"CommodityBusinessCalendar",
    "documentation":"Defines a commodity business day calendar.",
    "extend":"Scheme"
  },{
    "name":"CreditDerivativesNotices",
    "relationships":["creditEvent[1..1]","publiclyAvailableInformation[1..1]","physicalSettlement[1..1]"]
  },{
    "name":"spread",
    "extend":"anySimpleType"
  },{
    "name":"DSAKeyValue"
  },{
    "name":"FloatingStrikePrice",
    "relationships":["pricingDates->CommodityPricingDates[1..1]","averagingMethod[0..1]","conversionFactor[0..1]","rounding->Rounding[0..1]","spread->CommoditySpread[1..1]","spreadSchedule->CommoditySpreadSchedule[1..]","spreadPercentage[1..1]","fx->CommodityFx[0..1]","commodity->Commodity[1..1]"],
    "extend":"FloatingLegCalculation"
  },{
    "name":"dividendComposition",
    "documentation":"Defines how the composition of dividends is to be determined.",
    "characteristics":{
      "enumeration":[{
        "value":"EquityAmountReceiverElection"
      },{
        "value":"CalculationAgentElection"
      }]
    },
    "extend":"token"
  },{
    "name":"requestClearingRetracted"
  },{
    "name":"creationTimestamp",
    "extend":"anySimpleType"
  },{
    "name":"fPVFinalPriceElectionFallback",
    "documentation":"Specifies the fallback provisions in respect to the applicable Futures Price Valuation.",
    "characteristics":{
      "enumeration":[{
        "value":"FPVClose"
      },{
        "value":"FPVHedgeExecution"
      }]
    },
    "extend":"token"
  },{
    "name":"RoundingDirectionEnum",
    "documentation":"The method of rounding a fractional number.",
    "characteristics":{
      "enumeration":[{
        "value":"Up"
      },{
        "value":"Down"
      },{
        "value":"Nearest"
      }]
    },
    "extend":"token"
  },{
    "name":"CreditEvents",
    "relationships":["bankruptcy[0..1]","failureToPay->FailureToPay[0..1]","failureToPayPrincipal[0..1]","failureToPayInterest[0..1]","obligationDefault[0..1]","obligationAcceleration[0..1]","repudiationMoratorium[0..1]","restructuring->Restructuring[0..1]","distressedRatingsDowngrade[0..1]","maturityExtension[0..1]","writedown[0..1]","impliedWritedown[0..1]","defaultRequirement->Money[0..1]","creditEventNotice->CreditEventNotice[0..1]"]
  },{
    "name":"expiry",
    "extend":"anySimpleType"
  },{
    "name":"Quanto",
    "documentation":"Determines the currency rate that the seller of the equity amounts will apply at each valuation date for converting the respective amounts into a currency that is different from the currency denomination of the underlyer.",
    "relationships":["fxRate->FxRate[0..]","fxSpotRateSource->FxSpotRateSource[0..1]"]
  },{
    "name":"Collateral",
    "documentation":"A type for defining the obligations of the counterparty subject to credit support requirements.",
    "relationships":["independentAmount->IndependentAmount[1..1]"]
  },{
    "name":"encodedDescription",
    "extend":"anySimpleType"
  },{
    "name":"collateralAllocationRejected"
  },{
    "name":"lengthValue",
    "extend":"anySimpleType"
  },{
    "name":"SupervisoryBody",
    "documentation":"An identifier of an organization that supervises or regulates trading activity, e.g. CFTC, SEC, FSA, ODRF, etc.",
    "extend":"Scheme"
  },{
    "name":"inflationRateCalculation"
  },{
    "name":"PrincipalExchangeFeatures",
    "documentation":"A type describing the principal exchange features of the return swap.",
    "relationships":["principalExchanges->PrincipalExchanges[0..1]","principalExchangeDescriptions->PrincipalExchangeDescriptions[1..]"]
  },{
    "name":"CorrelationSwap",
    "documentation":"A Correlation Swap modelled using a single netted leg.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","additionalPayment->ClassifiedPayment[0..]","extraordinaryEvents->ExtraordinaryEvents[0..1]","correlationLeg->CorrelationLeg[1..1]"],
    "extend":"NettedSwapBase"
  },{
    "name":"Future",
    "documentation":"An exchange traded future contract.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","relatedExchangeId->ExchangeId[0..]","optionsExchangeId->ExchangeId[0..]","specifiedExchangeId->ExchangeId[0..]","multiplier[0..1]","futureContractReference[0..1]","maturity[0..1]"],
    "extend":"ExchangeTraded"
  },{
    "name":"message",
    "extend":"anySimpleType"
  },{
    "name":"PaymentDates",
    "documentation":"A type defining parameters used to generate the payment dates schedule, including the specification of early or delayed payments. Payment dates are determined relative to the calculation period dates or the reset dates.",
    "relationships":["calculationPeriodDatesReference->CalculationPeriodDatesReference[1..1]","resetDatesReference->ResetDatesReference[1..1]","valuationDatesReference->ValuationDatesReference[1..1]","paymentFrequency->Frequency[1..1]","firstPaymentDate[0..1]","lastRegularPaymentDate[0..1]","payRelativeTo[1..1]","paymentDaysOffset->Offset[0..1]","paymentDatesAdjustments->BusinessDayAdjustments[1..1]"]
  },{
    "name":"NonCashDividendTreatmentEnum",
    "documentation":"Defines treatment of non-cash dividends.",
    "characteristics":{
      "enumeration":[{
        "value":"PotentialAdjustmentEvent"
      },{
        "value":"CashEquivalent"
      }]
    },
    "extend":"token"
  },{
    "name":"name",
    "extend":"string"
  },{
    "name":"CommodityCalculationPeriodsSchedule",
    "documentation":"A parametric representation of the Calculation Periods for on Asian option or a leg of a swap. In case the calculation frequency is of value T (term), the period is defined by the commoditySwap\\effectiveDate and the commoditySwap\\terminationDate.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","balanceOfFirstPeriod[1..1]"],
    "extend":"Frequency"
  },{
    "name":"OptionalEarlyTermination",
    "documentation":"A type defining an early termination provision where either or both parties have the right to exercise.",
    "relationships":["singlePartyOption->SinglePartyOption[0..1]","exercise->Exercise[1..1]","exerciseNotice->ExerciseNotice[0..]","followUpConfirmation[0..1]","calculationAgent->CalculationAgent[1..1]","cashSettlement->CashSettlement[1..1]","optionalEarlyTerminationAdjustedDates->OptionalEarlyTerminationAdjustedDates[0..1]"]
  },{
    "name":"commoditySwap"
  },{
    "name":"RequestClearing",
    "documentation":"A message requesting that a trade be cleared by a clearing service.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","portfolioReference->PortfolioReference[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","quote->BasicQuotation[1..]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"optionType",
    "documentation":"Specifies an additional Forward type.",
    "extend":"anySimpleType"
  },{
    "name":"SensitivitySetDefinition",
    "documentation":"A sensitivity report definition, consisting of a collection of sensitivity definitions.",
    "relationships":["name[0..1]","sensitivityCharacteristics->QuotationCharacteristics[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","pricingInputType->PricingInputType[0..1]","pricingInputReference->PricingStructureReference[0..1]","scale[1..1]","sensitivityDefinition->SensitivityDefinition[0..]","calculationProcedure->DerivativeCalculationProcedure[0..1]"]
  },{
    "name":"OptionFeatures",
    "documentation":"A type for defining option features.",
    "relationships":["asian->Asian[0..1]","barrier->Barrier[0..1]","knock->Knock[0..1]","passThrough->PassThrough[0..1]","dividendAdjustment->DividendAdjustment[0..1]"]
  },{
    "name":"PGPKeyID",
    "extend":"anySimpleType"
  },{
    "name":"IdentifiedPayerReceiver",
    "documentation":"A type extending the PayerReceiverEnum type wih an id attribute.",
    "extend":"PayerReceiverEnum"
  },{
    "name":"numberOfValuationDates",
    "extend":"integer"
  },{
    "name":"abandonmentOfScheme",
    "documentation":"Upon the occurrence of an Abandonment of Scheme, as defined in clause (h)(iv) of the Emissions Annex, one of the following elections, the specific terms of which are set forth in clause (b)(iii) of the Emissions Annex, will govern the partiesâ€™ rights and obligations with respect to this Emissions Transaction. If none of the above options is selected, Option A(1) will apply.",
    "characteristics":{
      "enumeration":[{
        "value":"OptionA(1)"
      },{
        "value":"OptionA(2)"
      },{
        "value":"OptionB"
      },{
        "value":"OptionC"
      }]
    },
    "extend":"token"
  },{
    "name":"HMACOutputLengthType",
    "extend":"integer"
  },{
    "name":"currency2ValueDate",
    "extend":"anySimpleType"
  },{
    "name":"writedownReimbursement",
    "extend":"anySimpleType"
  },{
    "name":"CompoundingFrequency",
    "documentation":"The frequency at which a rate is compounded.",
    "extend":"Scheme"
  },{
    "name":"LegalEntityReference",
    "documentation":"References a credit entity defined elsewhere in the document.",
    "extend":"Reference"
  },{
    "name":"AmountSchedule",
    "documentation":"A type defining a currency amount or a currency amount schedule.",
    "relationships":["initialValue[1..1]","step->Step[0..]","currency->Currency[1..1]"],
    "extend":"Schedule"
  },{
    "name":"CommodityDetails",
    "extend":"Scheme"
  },{
    "name":"Return",
    "documentation":"A type describing the dividend return conditions applicable to the swap.",
    "relationships":["returnType[1..1]","dividendConditions->DividendConditions[0..1]"]
  },{
    "name":"issuerName",
    "extend":"anySimpleType"
  },{
    "name":"valuationSet"
  },{
    "name":"DividendPeriod",
    "documentation":"Abstract base class of all time bounded dividend period types.",
    "relationships":["unadjustedStartDate->IdentifiedDate[1..1]","unadjustedEndDate->IdentifiedDate[1..1]","dateAdjustments->BusinessDayAdjustments[1..1]","underlyerReference->AssetReference[0..1]"]
  },{
    "name":"observationEndDate",
    "extend":"anySimpleType"
  },{
    "name":"allocationsCompleted",
    "extend":"anySimpleType"
  },{
    "name":"RoutingIdsAndExplicitDetails",
    "documentation":"A type that provides a combination of payment system identification codes with physical postal address details, for the purposes of identifying a party involved in the routing of a payment.",
    "relationships":["routingIds->RoutingIds[1..]","routingName[1..1]","routingAddress->Address[0..1]","routingAccountNumber[0..1]","routingReferenceText[0..]"]
  },{
    "name":"AssetMeasureType",
    "documentation":"A scheme identifying the types of measures that can be used to describe an asset.",
    "extend":"Scheme"
  },{
    "name":"IndexId",
    "extend":"Scheme"
  },{
    "name":"PartialExercise",
    "documentation":"A type defining partial exercise. As defined in the 2000 ISDA Definitions, Section 12.3 Partial Exercise, the buyer of the option may exercise all or less than all the notional amount of the underlying swap but may not be less than the minimum notional amount (if specified) and must be an integral multiple of the integral multiple amount if specified.",
    "relationships":["notionalReference->NotionalReference[0..]","integralMultipleAmount[0..1]","minimumNotionalAmount[1..1]","minimumNumberOfOptions[1..1]"]
  },{
    "name":"FeeElectionEnum",
    "documentation":"Defines the fee type.",
    "characteristics":{
      "enumeration":[{
        "value":"FlatFee"
      },{
        "value":"AmortizedFee"
      },{
        "value":"FundingFee"
      },{
        "value":"FlatFeeAndFundingFee"
      },{
        "value":"AmortizedFeeAndFundingFee"
      }]
    },
    "extend":"token"
  },{
    "name":"expiryTimestamp",
    "extend":"anySimpleType"
  },{
    "name":"intentToAllocate",
    "extend":"anySimpleType"
  },{
    "name":"DigestMethod"
  },{
    "name":"unknownReferenceObligation",
    "extend":"anySimpleType"
  },{
    "name":"realisedVarianceMethod",
    "documentation":"The contract specifies whether which price must satisfy the boundary condition.",
    "characteristics":{
      "enumeration":[{
        "value":"Previous"
      },{
        "value":"Last"
      },{
        "value":"Both"
      }]
    },
    "extend":"token"
  },{
    "name":"gDay",
    "extend":"anySimpleType"
  },{
    "name":"CalculationAgent",
    "documentation":"A type defining the ISDA calculation agent responsible for performing duties as defined in the applicable product definitions.",
    "relationships":["calculationAgentPartyReference->PartyReference[1..]","calculationAgentParty[1..1]"]
  },{
    "name":"ExtendibleProvision",
    "documentation":"A type defining an option to extend an existing swap transaction on the specified exercise dates for a term ending on the specified new termination date.",
    "relationships":["buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","exercise->Exercise[1..1]","exerciseNotice->ExerciseNotice[0..1]","followUpConfirmation[1..1]","extendibleProvisionAdjustedDates->ExtendibleProvisionAdjustedDates[0..1]"]
  },{
    "name":"KeyValueType",
    "relationships":["DSAKeyValue->DSAKeyValueType[1..1]","RSAKeyValue->RSAKeyValueType[1..1]"]
  },{
    "name":"Mortgage",
    "documentation":"A type describing a mortgage asset.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","insurer->LegalEntity[1..1]","insurerReference->LegalEntityReference[1..1]","issuerName[1..1]","issuerPartyReference->PartyReference[1..1]","seniority->CreditSeniority[0..1]","couponType->CouponType[0..1]","couponRate[0..1]","maturity[0..1]","paymentFrequency->Period[0..1]","dayCountFraction->DayCountFraction[0..1]","originalPrincipalAmount[0..1]","pool->AssetPool[0..1]","sector->MortgageSector[0..1]","tranche[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"Composite",
    "documentation":"Specifies the conditions to be applied for converting into a reference currency when the actual currency rate is not determined upfront.",
    "relationships":["determinationMethod->DeterminationMethod[0..1]","relativeDate->RelativeDateOffset[0..1]","fxSpotRateSource->FxSpotRateSource[0..1]"]
  },{
    "name":"percentageOfNotional",
    "extend":"anySimpleType"
  },{
    "name":"RSAKeyValueType",
    "relationships":["Modulus[1..1]","Exponent[1..1]"]
  },{
    "name":"specifiedNumber",
    "extend":"nonNegativeInteger"
  },{
    "name":"StandardSettlementStyleEnum",
    "documentation":"The code specification of whether a trade is settling using standard settlement instructions as well as whether it is a candidate for settlement netting.",
    "characteristics":{
      "enumeration":[{
        "value":"Standard"
      },{
        "value":"Net"
      },{
        "value":"StandardAndNet"
      }]
    },
    "extend":"token"
  },{
    "name":"obligationDefault"
  },{
    "name":"PartyRelationshipDocumentation",
    "documentation":"A description of the legal agreement(s) and definitions that document a party's relationships with other parties",
    "relationships":["masterAgreement->MasterAgreement[1..1]","creditSupportAgreement->CreditSupportAgreement[1..1]","agreement->GenericAgreement[1..1]"]
  },{
    "name":"daysInRangeAdjustment",
    "extend":"anySimpleType"
  },{
    "name":"specialDividends",
    "extend":"anySimpleType"
  },{
    "name":"CommodityPhysicalQuantityBase",
    "documentation":"A type defining the physical quantity of the commodity to be delivered."
  },{
    "name":"Formula",
    "documentation":"A type describing a financial formula, with its description and components.",
    "relationships":["formulaDescription[0..1]","math->Math[0..1]","formulaComponent->FormulaComponent[0..]"]
  },{
    "name":"CashPriceMethod",
    "documentation":"A type defining the parameters necessary for each of the ISDA cash price methods for cash settlement.",
    "relationships":["cashSettlementReferenceBanks->CashSettlementReferenceBanks[0..1]","cashSettlementCurrency->Currency[1..1]","quotationRateType[1..1]"]
  },{
    "name":"PeriodExtendedEnum",
    "documentation":"The specification of a time period containing additional values such as Term.",
    "extend":"anySimpleType"
  },{
    "name":"spreadPercentage",
    "extend":"anySimpleType"
  },{
    "name":"confirmationException"
  },{
    "name":"PrevailingTime",
    "documentation":"A type for defining a time with respect to a geographic location, for example 11:00 Phoenix, USA. This type should be used where a wider range of locations than those available as business centres is required.",
    "relationships":["hourMinuteTime[1..1]","location->TimezoneLocation[1..1]"]
  },{
    "name":"comments",
    "extend":"anySimpleType"
  },{
    "name":"nonSchemaProduct"
  },{
    "name":"InstrumentTradePrincipal",
    "documentation":"A structure describing the value in \"native\" currency of an instrument that was traded.",
    "relationships":["principalAmount->NetAndGross[0..1]"]
  },{
    "name":"forecastRate",
    "extend":"anySimpleType"
  },{
    "name":"CommodityStrikeSchedule",
    "documentation":"The Strike Price per Unit per Calculation Period. There must be a Strike Price per Unit step specified for each Calculation Period, regardless of whether the Strike changes or remains the same between periods.",
    "relationships":["strikePricePerUnitStep->NonNegativeMoney[1..]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]"]
  },{
    "name":"EntityType",
    "documentation":"Defines a coding scheme of the entity types defined in the ISDA First to Default documentation.",
    "extend":"Scheme"
  },{
    "name":"ReturnSwapPaymentDates",
    "documentation":"A type describing the return payment dates of the swap.",
    "relationships":["paymentDatesInterim->AdjustableOrRelativeDates[0..1]","paymentDateFinal->AdjustableOrRelativeDate[1..1]"]
  },{
    "name":"settlementDisruption",
    "documentation":"The consequences of Bullion Settlement Disruption Events.",
    "characteristics":{
      "enumeration":[{
        "value":"Negotiation"
      },{
        "value":"Cancellation and Payment"
      }]
    },
    "extend":"token"
  },{
    "name":"PhysicalExercise",
    "relationships":["trade->Trade[1..1]","tradeReference->PartyTradeIdentifiers[1..1]"]
  },{
    "name":"EventIdentifier",
    "documentation":"Identification of a business event, for example through its correlation id or a business identifier.",
    "relationships":["correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","tradeIdentifier->TradeIdentifier[1..1]"]
  },{
    "name":"isAccountingHedge",
    "extend":"anySimpleType"
  },{
    "name":"InterestRateStreamReference",
    "documentation":"Reference to an InterestRateStream component.",
    "extend":"Reference"
  },{
    "name":"Address",
    "documentation":"A type that represents a physical postal address.",
    "relationships":["streetAddress->StreetAddress[0..1]","city[0..1]","state[0..1]","country->CountryCode[0..1]","postalCode[0..1]"]
  },{
    "name":"distressedRatingsDowngrade",
    "extend":"anySimpleType"
  },{
    "name":"settlementType",
    "documentation":"Shows how the transaction is to be settled when it is exercised.",
    "extend":"anySimpleType"
  },{
    "name":"attachmentPoint",
    "extend":"anySimpleType"
  },{
    "name":"strikeRate",
    "extend":"anySimpleType"
  },{
    "name":"ReferenceType",
    "relationships":["Transforms->TransformsType[0..1]","DigestMethod->DigestMethodType[1..1]","DigestValue[1..1]"]
  },{
    "name":"currency1ValueDate",
    "extend":"anySimpleType"
  },{
    "name":"CommodityFrequencyType",
    "documentation":"Frequency Type for use in Pricing Date specifications.",
    "extend":"Scheme"
  },{
    "name":"FloatingRateDefinition",
    "documentation":"A type defining parameters associated with a floating rate reset. This type forms part of the cashflows representation of a stream.",
    "relationships":["calculatedRate[0..1]","rateObservation->RateObservation[0..]","floatingRateMultiplier[0..1]","spread[0..1]","capRate->Strike[0..]","floorRate->Strike[0..]"]
  },{
    "name":"numberValuationDates",
    "extend":"nonNegativeInteger"
  },{
    "name":"ReferenceBank",
    "documentation":"A type to describe an institution (party) identified by means of a coding scheme and an optional name.",
    "relationships":["referenceBankId->ReferenceBankId[1..1]","referenceBankName[0..1]"]
  },{
    "name":"BreakageCostEnum",
    "documentation":"When breakage cost is applicable, defines who is calculating it.",
    "characteristics":{
      "enumeration":[{
        "value":"AgentBank"
      },{
        "value":"Lender"
      }]
    },
    "extend":"token"
  },{
    "name":"future"
  },{
    "name":"ObligationCategoryEnum",
    "documentation":"Used in both the obligations and deliverable obligations of the credit default swap to represent a class or type of securities which apply.",
    "characteristics":{
      "enumeration":[{
        "value":"Payment"
      },{
        "value":"BorrowedMoney"
      },{
        "value":"ReferenceObligationsOnly"
      },{
        "value":"Bond"
      },{
        "value":"Loan"
      },{
        "value":"BondOrLoan"
      }]
    },
    "extend":"token"
  },{
    "name":"BasketName",
    "extend":"Scheme"
  },{
    "name":"SwapAdditionalTerms",
    "documentation":"Additional terms to a swap contract.",
    "relationships":["bondReference->BondReference[0..1]"]
  },{
    "name":"VolatilityRepresentation",
    "documentation":"A representation of volatilities of an asset. This is a generic structure whose values can be supplied in a specific volatility matrix.",
    "relationships":["name[0..1]","currency->Currency[0..1]","asset->AnyAssetReference[1..1]"],
    "extend":"PricingStructure"
  },{
    "name":"exerciseInNumberOfOptions",
    "extend":"anySimpleType"
  },{
    "name":"FailureToPayEvent",
    "extend":"CreditEvent"
  },{
    "name":"ElectricityDeliverySystemFirm",
    "documentation":"The physical delivery obligation options specific to a system firm transaction.",
    "relationships":["applicable[1..1]","system->CommodityDeliveryPoint[0..1]"]
  },{
    "name":"CorrelationLeg",
    "documentation":"A type describing return which is driven by a Correlation calculation.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","underlyer->Underlyer[1..1]","settlementType[0..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementAmount->Money[1..1]","settlementCurrency->Currency[1..1]","fxFeature->FxFeature[0..1]","valuation->EquityValuation[1..1]","amount->CorrelationAmount[1..1]"],
    "extend":"DirectionalLegUnderlyerValuation"
  },{
    "name":"startYear",
    "extend":"anySimpleType"
  },{
    "name":"deliveryOfCommitments",
    "extend":"anySimpleType"
  },{
    "name":"OnBehalfOf",
    "relationships":["partyReference->PartyReference[1..1]","accountReference->AccountReference[0..]"]
  },{
    "name":"ReturnSwapNotional",
    "documentation":"Specifies the notional of return type swap. When used in the equity leg, the definition will typically combine the actual amount (using the notional component defined by the FpML industry group) and the determination method. When used in the interest leg, the definition will typically point to the definition of the equity leg.",
    "relationships":["relativeNotionalAmount->ReturnSwapNotionalAmountReference[1..1]","relativeDeterminationMethod->DeterminationMethodReference[1..1]","determinationMethod->DeterminationMethod[1..1]","notionalAmount->NotionalAmount[1..1]"]
  },{
    "name":"RequestExecution",
    "documentation":"A message requesting that an order be executed.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"CreditDocument",
    "documentation":"A credit arrangement used in support of swaps trading.",
    "extend":"Scheme"
  },{
    "name":"NotDomesticCurrency",
    "relationships":["applicable[1..1]","currency->Currency[0..1]"]
  },{
    "name":"ObjectType"
  },{
    "name":"negativeInterestRateTreatment",
    "documentation":"The method of calculating payment obligations when a floating rate is negative (either due to a quoted negative floating rate or by operation of a spread that is subtracted from the floating rate).",
    "characteristics":{
      "enumeration":[{
        "value":"NegativeInterestRateMethod"
      },{
        "value":"ZeroInterestRateMethod"
      }]
    },
    "extend":"token"
  },{
    "name":"PremiumQuote",
    "documentation":"A type that describes the option premium as quoted.",
    "relationships":["value[1..1]","quoteBasis[1..1]"]
  },{
    "name":"ConfirmationStatus",
    "documentation":"Message for sending matching results. Response message that returns the status of an event that have been submitted for matching.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","status->EventStatus[1..1]","assertedEvent->EventsChoice[1..1]","proposedMatch->EventProposedMatch[0..]","allegedEvent->EventsChoice[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"unsignedShort",
    "extend":"unsignedInt"
  },{
    "name":"lastRegularPaymentDate",
    "extend":"anySimpleType"
  },{
    "name":"optionsExchangeDividends",
    "extend":"anySimpleType"
  },{
    "name":"CryptoBinary",
    "extend":"base64Binary"
  },{
    "name":"fundManager",
    "extend":"anySimpleType"
  },{
    "name":"ForwardRateCurve",
    "documentation":"A curve used to model a set of forward interest rates. Used for forecasting interest rates as part of a pricing calculation.",
    "relationships":["assetReference->AssetReference[0..1]","rateCurve->TermCurve[1..1]"]
  },{
    "name":"ProductId",
    "extend":"Scheme"
  },{
    "name":"WeatherCalculationPeriods",
    "documentation":"The schedule of Calculation Period First Days and Lasts Days. If there is only one First Day - Last Day pair then the First is equal to the Effective Date and the Last Day is equal to the Termination Date.",
    "relationships":["calculationPeriod->WeatherCalculationPeriod[1..]"]
  },{
    "name":"TradeProcessingTimestamps",
    "documentation":"Allows timing information about when a trade was processed and reported to be recorded.",
    "relationships":["orderEntered[0..1]","orderSubmitted[0..1]","publiclyReported[0..1]","publicReportUpdated[0..1]","nonpubliclyReported[0..1]","nonpublicReportUpdated[0..1]","submittedForConfirmation[0..1]","updatedForConfirmation[0..1]","confirmed[0..1]","submittedForClearing[0..1]","updatedForClearing[0..1]","cleared[0..1]","allocationsSubmitted[0..1]","allocationsUpdated[0..1]","allocationsCompleted[0..1]","timestamp->TradeTimestamp[0..]"]
  },{
    "name":"ResponseMessageHeader",
    "documentation":"A type refining the generic message header to make it specific to response messages.",
    "relationships":["messageId->MessageId[1..1]","inReplyTo->MessageId[1..1]","sentBy->MessageAddress[1..1]","sendTo->MessageAddress[0..]","copyTo->MessageAddress[0..]","creationTimestamp[1..1]","expiryTimestamp[0..1]","implementationSpecification->ImplementationSpecification[0..1]","partyMessageInformation->PartyMessageInformation[0..]","Signature->SignatureType[0..]"],
    "extend":"MessageHeader"
  },{
    "name":"WeightedPartialDerivative",
    "documentation":"A partial derivative multiplied by a weighting factor.",
    "relationships":["partialDerivativeReference->PricingParameterDerivativeReference[1..1]","weight[1..1]"]
  },{
    "name":"dividendReinvestment",
    "extend":"anySimpleType"
  },{
    "name":"period",
    "documentation":"The specification of a time period",
    "characteristics":{
      "enumeration":[{
        "value":"D"
      },{
        "value":"W"
      },{
        "value":"M"
      },{
        "value":"Y"
      }]
    },
    "extend":"token"
  },{
    "name":"cleared",
    "extend":"anySimpleType"
  },{
    "name":"minimumNotionalAmount",
    "extend":"anySimpleType"
  },{
    "name":"expectedN",
    "extend":"nonNegativeInteger"
  },{
    "name":"verificationStatusNotification"
  },{
    "name":"CashSettlementReferenceBanks",
    "documentation":"A type defining the list of reference institutions polled for relevant rates or prices when determining the cash settlement amount for a product where cash settlement is applicable.",
    "relationships":["referenceBank->ReferenceBank[1..]"]
  },{
    "name":"AdjustableRelativeOrPeriodicDates",
    "relationships":["adjustableDates->AdjustableDates[1..1]","relativeDateSequence->RelativeDateSequence[1..1]","periodicDates->PeriodicDates[1..1]"]
  },{
    "name":"indexCancellation",
    "documentation":"The specification of the consequences of Index Events.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationAgentAdjustment"
      },{
        "value":"NegotiatedCloseOut"
      },{
        "value":"CancellationAndPayment"
      },{
        "value":"RelatedExchange"
      }]
    },
    "extend":"token"
  },{
    "name":"SimpleCreditDefaultSwap",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","referenceEntity->LegalEntity[1..1]","creditEntityReference->LegalEntityReference[1..1]","term->Period[1..1]","paymentFrequency->Period[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"CommodityMetalBrandName",
    "documentation":"The name of the entity that issues the brand",
    "extend":"Scheme"
  },{
    "name":"openUnits",
    "extend":"anySimpleType"
  },{
    "name":"ValuationReference",
    "documentation":"Reference to a Valuation or any derived structure such as PricingStructureValuation.",
    "extend":"Reference"
  },{
    "name":"nonpubliclyReported",
    "extend":"anySimpleType"
  },{
    "name":"DerivativeFormula",
    "documentation":"A formula for computing a complex derivative from partial derivatives. Its value is the sum of the terms divided by the product of the denominator terms.",
    "relationships":["term->FormulaTerm[1..1]","denominatorTerm->DenominatorTerm[1..1]"]
  },{
    "name":"indexModification",
    "documentation":"The specification of the consequences of Index Events.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationAgentAdjustment"
      },{
        "value":"NegotiatedCloseOut"
      },{
        "value":"CancellationAndPayment"
      },{
        "value":"RelatedExchange"
      }]
    },
    "extend":"token"
  },{
    "name":"hexBinary",
    "extend":"anySimpleType"
  },{
    "name":"ConstituentWeight",
    "documentation":"A type describing the weight of each of the underlyer constituent within the basket, either in absolute or relative terms.",
    "relationships":["openUnits[1..1]","basketPercentage[1..1]","basketAmount->Money[1..1]"]
  },{
    "name":"allocationAcknowledgement"
  },{
    "name":"FxRate",
    "documentation":"A type describing the rate of a currency conversion: pair of currency, quotation mode and exchange rate.",
    "relationships":["quotedCurrencyPair->QuotedCurrencyPair[1..1]","rate[1..1]"]
  },{
    "name":"securedList",
    "extend":"anySimpleType"
  },{
    "name":"PersonRole",
    "documentation":"A type describing a role played by a person in one or more transactions. Examples include roles such as Trader, Broker, MiddleOffice, Legal, etc. This can be extended to provide custom roles.",
    "extend":"Scheme"
  },{
    "name":"IdentifiedRate",
    "documentation":"A rate which can be referenced elsewhere.",
    "extend":"decimal"
  },{
    "name":"creditCurve"
  },{
    "name":"IntermediaryInformation",
    "documentation":"A type that describes the information to identify an intermediary through which payment will be made by the correspondent bank to the ultimate beneficiary of the funds.",
    "relationships":["routingIds->RoutingIds[1..1]","routingExplicitDetails->RoutingExplicitDetails[1..1]","routingIdsAndExplicitDetails->RoutingIdsAndExplicitDetails[1..1]","intermediarySequenceNumber[1..1]","intermediaryPartyReference->PartyReference[0..1]"]
  },{
    "name":"ReturnSwapNotionalAmountReference",
    "documentation":"A reference to the return swap notional amount.",
    "extend":"Reference"
  },{
    "name":"gasPhysicalLeg"
  },{
    "name":"rateObservationQuoteBasis",
    "documentation":"The specification of how an FX OTC option strike price is quoted.",
    "characteristics":{
      "enumeration":[{
        "value":"PutCurrencyPerCallCurrency"
      },{
        "value":"CallCurrencyPerPutCurrency"
      }]
    },
    "extend":"token"
  },{
    "name":"ImplementationSpecification",
    "documentation":"A version of a specification document used by the message generator to format the document.",
    "relationships":["name[0..1]","version->ImplementationSpecificationVersion[0..1]","date[0..1]"]
  },{
    "name":"WeatherStationWMO",
    "documentation":"A code identifying a Weather Index WMO.",
    "extend":"Scheme"
  },{
    "name":"TradeCategory",
    "documentation":"A scheme used to categorize positions.",
    "extend":"Scheme"
  },{
    "name":"Transform"
  },{
    "name":"EquityAmericanExercise",
    "documentation":"A type for defining exercise procedures associated with an American style exercise of an equity option. This entity inherits from the type SharedAmericanExercise.",
    "relationships":["commencementDate->AdjustableOrRelativeDate[1..1]","expirationDate->AdjustableOrRelativeDate[1..1]","latestExerciseTime->BusinessCenterTime[1..1]","latestExerciseTimeDetermination->DeterminationMethod[1..1]","latestExerciseTimeType[0..1]","equityExpirationTimeType[1..1]","equityExpirationTime->BusinessCenterTime[0..1]","expirationTimeDetermination->DeterminationMethod[1..1]","equityMultipleExercise->EquityMultipleExercise[0..1]"],
    "extend":"SharedAmericanExercise"
  },{
    "name":"masterConfirmationDate",
    "extend":"anySimpleType"
  },{
    "name":"BoundedCorrelation",
    "documentation":"A type describing correlation bounds, which form a cap and a floor on the realized correlation.",
    "relationships":["minimumBoundaryPercent[0..1]","maximumBoundaryPercent[0..1]"]
  },{
    "name":"RollConventionEnum",
    "documentation":"The convention for determining the sequence of calculation period end dates. It is used in conjunction with a specified frequency and the regular period start date of a calculation period, e.g. semi-annual IMM roll dates.",
    "characteristics":{
      "enumeration":[{
        "value":"EOM"
      },{
        "value":"FRN"
      },{
        "value":"IMM"
      },{
        "value":"IMMCAD"
      },{
        "value":"IMMAUD"
      },{
        "value":"IMMNZD"
      },{
        "value":"SFE"
      },{
        "value":"NONE"
      },{
        "value":"TBILL"
      },{
        "value":"1"
      },{
        "value":"2"
      },{
        "value":"3"
      },{
        "value":"4"
      },{
        "value":"5"
      },{
        "value":"6"
      },{
        "value":"7"
      },{
        "value":"8"
      },{
        "value":"9"
      },{
        "value":"10"
      },{
        "value":"11"
      },{
        "value":"12"
      },{
        "value":"13"
      },{
        "value":"14"
      },{
        "value":"15"
      },{
        "value":"16"
      },{
        "value":"17"
      },{
        "value":"18"
      },{
        "value":"19"
      },{
        "value":"20"
      },{
        "value":"21"
      },{
        "value":"22"
      },{
        "value":"23"
      },{
        "value":"24"
      },{
        "value":"25"
      },{
        "value":"26"
      },{
        "value":"27"
      },{
        "value":"28"
      },{
        "value":"29"
      },{
        "value":"30"
      },{
        "value":"MON"
      },{
        "value":"TUE"
      },{
        "value":"WED"
      },{
        "value":"THU"
      },{
        "value":"FRI"
      },{
        "value":"SAT"
      },{
        "value":"SUN"
      }]
    },
    "extend":"token"
  },{
    "name":"differenceSeverity",
    "documentation":"The ISDA defined value indicating the severity of a difference.",
    "characteristics":{
      "enumeration":[{
        "value":"Warning"
      },{
        "value":"Error"
      }]
    },
    "extend":"token"
  },{
    "name":"MimeType",
    "documentation":"The type that indicates the type of media used to store the content. MimeType is used to determine the software product(s) that can read the content. MIME types are described in RFC 2046.",
    "extend":"Scheme"
  },{
    "name":"outstandingNumberOfUnits",
    "extend":"anySimpleType"
  },{
    "name":"X509Certificate",
    "extend":"anySimpleType"
  },{
    "name":"MortgageSector",
    "documentation":"A type describing the typology of mortgage obligations.",
    "extend":"Scheme"
  },{
    "name":"FxAsianFeature",
    "documentation":"Descibes the averaging period properties for an asian option.",
    "relationships":["primaryRateSource->InformationSource[1..1]","secondaryRateSource->InformationSource[0..1]","fixingTime->BusinessCenterTime[1..1]","observationSchedule->FxAverageRateObservationSchedule[1..1]","rateObservation->FxAverageRateObservation[1..]","rateObservationQuoteBasis[0..1]","rateObservation->FxAverageRateObservation[1..]","rateObservationQuoteBasis[0..1]","payoutFormula[0..1]","precision[0..1]"]
  },{
    "name":"EntityId",
    "documentation":"A legal entity identifier (e.g. RED entity code).",
    "extend":"Scheme"
  },{
    "name":"Material",
    "documentation":"A scheme identifying the types of metal product for a physically settled metal trade.",
    "extend":"Scheme"
  },{
    "name":"ENTITIES"
  },{
    "name":"ContractId",
    "documentation":"A contact id identifier allocated by a party. FpML does not define the domain values associated with this element.",
    "extend":"Scheme"
  },{
    "name":"sequence",
    "extend":"nonNegativeInteger"
  },{
    "name":"MultiDimensionalPricingData",
    "documentation":"A pricing data set that contains a series of points with coordinates. It is a sparse matrix representation of a multi-dimensional matrix.",
    "relationships":["measureType->AssetMeasureType[0..1]","quoteUnits->PriceQuoteUnits[0..1]","side[0..1]","currency->Currency[0..1]","currencyType->ReportingCurrencyType[0..1]","timing->QuoteTiming[0..1]","businessCenter->BusinessCenter[1..1]","exchangeId->ExchangeId[1..1]","informationSource->InformationSource[0..]","pricingModel->PricingModel[0..1]","time[0..1]","valuationDate[0..1]","expiryTime[0..1]","cashflowType->CashflowType[0..1]","point->PricingStructurePoint[1..]"]
  },{
    "name":"SPKISexp",
    "extend":"anySimpleType"
  },{
    "name":"remainingNumberOfOptions",
    "extend":"anySimpleType"
  },{
    "name":"OffsetPrevailingTime",
    "documentation":"Allows the specification of a time that may be on a day prior or subsequent to the day in question. This type is intended for use with a day of the week (i.e. where no actual date is specified) as part of, for example, a period that runs from 23:00-07:00 on a series of days and where holidays on the actual days would affect the entire time period.",
    "relationships":["time->PrevailingTime[1..1]","offset->Offset[0..1]"]
  },{
    "name":"EquitySwapTransactionSupplement",
    "documentation":"A type for defining Equity Swap Transaction Supplement",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","returnSwapLeg->DirectionalLeg[1..]","principalExchangeFeatures->PrincipalExchangeFeatures[0..1]","mutualEarlyTermination[0..1]","optionalEarlyTermination[1..1]","breakFundingRecovery[0..1]","breakFeeElection[1..1]","breakFeeRate[0..1]","multipleExchangeIndexAnnexFallback[1..1]","componentSecurityIndexAnnexFallback[1..1]","localJurisdiction->CountryCode[0..1]","relevantJurisdiction->CountryCode[0..1]","extraordinaryEvents->ExtraordinaryEvents[0..1]"],
    "extend":"ReturnSwapBase"
  },{
    "name":"title",
    "documentation":"Describes how and when title to the commodity transfers.",
    "characteristics":{
      "enumeration":[{
        "value":"TransfersWithRiskOfLoss"
      },{
        "value":"DoesNotTransferWithRiskOfLoss"
      }]
    },
    "extend":"token"
  },{
    "name":"FxTrigger",
    "documentation":"Describes an FX trigger condition.",
    "relationships":["triggerCondition[1..1]","quotedCurrencyPair->QuotedCurrencyPair[1..1]","triggerRate[1..1]","spotRate[0..1]","informationSource->InformationSource[1..]"]
  },{
    "name":"convertibleBond"
  },{
    "name":"Barrier",
    "documentation":"As per ISDA 2002 Definitions.",
    "relationships":["barrierCap->TriggerEvent[0..1]","barrierFloor->TriggerEvent[0..1]"]
  },{
    "name":"ReturnTypeEnum",
    "documentation":"The type of return associated with the equity swap.",
    "characteristics":{
      "enumeration":[{
        "value":"Dividend"
      },{
        "value":"Price"
      },{
        "value":"Total"
      }]
    },
    "extend":"token"
  },{
    "name":"CommodityMarketDisruption",
    "documentation":"ISDA 1993 or 2005 commodity market disruption elements.",
    "relationships":["marketDisruptionEvents[1..1]","additionalMarketDisruptionEvent->MarketDisruptionEvent[0..]","marketDisruptionEvent->MarketDisruptionEvent[1..]","disruptionFallbacks[1..1]","disruptionFallback->SequencedDisruptionFallback[1..]","fallbackReferencePrice->Underlyer[0..1]","maximumNumberOfDaysOfDisruption[0..1]","priceMaterialityPercentage[0..1]","minimumFuturesContracts[0..1]"]
  },{
    "name":"FraDiscountingEnum",
    "documentation":"The method of FRA discounting, if any, that will apply.",
    "characteristics":{
      "enumeration":[{
        "value":"ISDA"
      },{
        "value":"AFMA"
      },{
        "value":"NONE"
      },{
        "value":"ISDAYield"
      }]
    },
    "extend":"token"
  },{
    "name":"BusinessUnitRole",
    "documentation":"A type describing a role played by a unit in one or more transactions. Examples include roles such as Trader, Collateral, Confirmation, Settlement, etc. This can be extended to provide custom roles.",
    "extend":"Scheme"
  },{
    "name":"CalculationAgentPartyEnum",
    "documentation":"The specification of how a calculation agent will be determined.",
    "characteristics":{
      "enumeration":[{
        "value":"ExercisingParty"
      },{
        "value":"NonExercisingParty"
      },{
        "value":"AsSpecifiedInMasterAgreement"
      },{
        "value":"AsSpecifiedInStandardTermsSupplement"
      }]
    },
    "extend":"token"
  },{
    "name":"resetRelativeTo",
    "documentation":"The specification of whether resets occur relative to the first or last day of a calculation period.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationPeriodStartDate"
      },{
        "value":"CalculationPeriodEndDate"
      }]
    },
    "extend":"token"
  },{
    "name":"StubCalculationPeriod",
    "documentation":"A type describing the Stub Calculation Period.",
    "relationships":["initialStub->Stub[1..1]","finalStub->Stub[0..1]","finalStub->Stub[1..1]"]
  },{
    "name":"CorrelationId",
    "documentation":"A type defining a correlation identifier and qualifying scheme",
    "extend":"normalizedString"
  },{
    "name":"quotationStyle",
    "documentation":"Indicates the actual quotation style of of PointsUpFront or TradedSpread that was used to quote this trade.",
    "characteristics":{
      "enumeration":[{
        "value":"PointsUpFront"
      },{
        "value":"TradedSpread"
      }]
    },
    "extend":"token"
  },{
    "name":"stubRate",
    "extend":"anySimpleType"
  },{
    "name":"GasProduct",
    "documentation":"A type defining the characteristics of the gas being traded in a physically settled gas transaction.",
    "relationships":["type[1..1]","calorificValue[1..1]","quality->GasQuality[1..1]"]
  },{
    "name":"InformationProvider",
    "extend":"Scheme"
  },{
    "name":"paymentPercent",
    "extend":"anySimpleType"
  },{
    "name":"dividendEntitlement",
    "documentation":"The date on which the receiver of the equity return is entitled to the dividend.",
    "characteristics":{
      "enumeration":[{
        "value":"ExDate"
      },{
        "value":"RecordDate"
      }]
    },
    "extend":"token"
  },{
    "name":"CreditDefaultSwapOption",
    "documentation":"A complex type to support the credit default swap option.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","premium->Premium[0..1]","exercise->Exercise[1..1]","exerciseProcedure->ExerciseProcedure[1..1]","feature->OptionFeature[0..1]","notionalReference->NotionalAmountReference[1..1]","notionalAmount->Money[1..1]","optionEntitlement[1..1]","entitlementCurrency->Currency[0..1]","numberOfOptions[0..1]","settlementType[0..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementAmount->Money[1..1]","settlementCurrency->Currency[1..1]","strike->CreditOptionStrike[1..1]","creditDefaultSwap->CreditDefaultSwap[1..1]"],
    "extend":"OptionBaseExtended"
  },{
    "name":"updatedForClearing",
    "extend":"anySimpleType"
  },{
    "name":"UnderlyingAsset",
    "documentation":"An exchange traded bond.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]"],
    "extend":"IdentifiedAsset"
  },{
    "name":"valuationMethod",
    "documentation":"The ISDA defined methodology for determining the final price of the reference obligation for purposes of cash settlement.",
    "characteristics":{
      "enumeration":[{
        "value":"Market"
      },{
        "value":"Highest"
      },{
        "value":"AverageMarket"
      },{
        "value":"AverageHighest"
      },{
        "value":"BlendedMarket"
      },{
        "value":"BlendedHighest"
      },{
        "value":"AverageBlendedMarket"
      },{
        "value":"AverageBlendedHighest"
      }]
    },
    "extend":"token"
  },{
    "name":"FxOption",
    "documentation":"Describes an FX option with optional asian and barrier features.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","tenorPeriod->Period[0..1]","americanExercise->FxAmericanExercise[1..1]","europeanExercise->FxEuropeanExercise[1..1]","exerciseProcedure->ExerciseProcedure[0..1]","putCurrencyAmount->NonNegativeMoney[1..1]","callCurrencyAmount->NonNegativeMoney[1..1]","soldAs[0..1]","strike->FxStrikePrice[1..1]","spotRate[0..1]","features->FxOptionFeatures[0..1]","premium->FxOptionPremium[0..]","cashSettlement->FxCashSettlement[0..1]"],
    "extend":"Option"
  },{
    "name":"stepUpProvision",
    "extend":"anySimpleType"
  },{
    "name":"originatingEvent",
    "documentation":"A type used to report how a position originated.",
    "characteristics":{
      "enumeration":[{
        "value":"Trade"
      },{
        "value":"Allocation"
      },{
        "value":"Novation"
      },{
        "value":"Netting"
      },{
        "value":"Exercise"
      }]
    },
    "extend":"token"
  },{
    "name":"ValuationMethodEnum",
    "documentation":"The ISDA defined methodology for determining the final price of the reference obligation for purposes of cash settlement.",
    "characteristics":{
      "enumeration":[{
        "value":"Market"
      },{
        "value":"Highest"
      },{
        "value":"AverageMarket"
      },{
        "value":"AverageHighest"
      },{
        "value":"BlendedMarket"
      },{
        "value":"BlendedHighest"
      },{
        "value":"AverageBlendedMarket"
      },{
        "value":"AverageBlendedHighest"
      }]
    },
    "extend":"token"
  },{
    "name":"Language",
    "documentation":"The data type used for indicating the language of the resource, described using the ISO 639-2/T Code.",
    "extend":"Scheme"
  },{
    "name":"CalendarSourceEnum",
    "documentation":"Describes the date source calendar for a contract whereby the prices are from the underlying commodity price source (e.g. exchange traded futures contract), but the dates are based off another calendar (e.g. the listed option on the futures contract).",
    "characteristics":{
      "enumeration":[{
        "value":"ListedOption"
      },{
        "value":"Future"
      }]
    },
    "extend":"token"
  },{
    "name":"ServiceProcessingStatus",
    "documentation":"A type defining the content model for report on the status of the processing by a service. In the future we may wish to provide some kind of scope or other qualification for the event, e.g. the currencies, products, or books to which it applies.",
    "relationships":["cycle->ServiceProcessingCycle[0..1]","step->ServiceProcessingStep[0..1]","event->ServiceProcessingEvent[1..1]"]
  },{
    "name":"bullionType",
    "documentation":"Defines which type of bullion is applicable for a Bullion Transaction.",
    "characteristics":{
      "enumeration":[{
        "value":"Gold"
      },{
        "value":"Palladium"
      },{
        "value":"Platinum"
      },{
        "value":"Silver"
      },{
        "value":"Rhodium"
      },{
        "value":"RhodiumSponge"
      },{
        "value":"Iridium"
      },{
        "value":"Ruthenium"
      },{
        "value":"Osmium"
      }]
    },
    "extend":"token"
  },{
    "name":"FixedPrice",
    "documentation":"A type defining the Fixed Price.",
    "relationships":["price[1..1]","priceCurrency->Currency[1..1]","priceUnit->QuantityUnit[1..1]"]
  },{
    "name":"ScheduledDateType",
    "documentation":"A scheme used to identify the type of a stream scheduled servicing date.",
    "extend":"Scheme"
  },{
    "name":"submissionsComplete",
    "extend":"anySimpleType"
  },{
    "name":"CommodityExpireRelativeToEvent",
    "documentation":"A scheme identifying the physical event relative to which option expiration occurs.",
    "extend":"Scheme"
  },{
    "name":"PaymentCalculationPeriod",
    "documentation":"A type defining the adjusted payment date and associated calculation period parameters required to calculate the actual or projected payment amount. This type forms part of the cashflow representation of a swap stream.",
    "relationships":["unadjustedPaymentDate[0..1]","adjustedPaymentDate[0..1]","calculationPeriod->CalculationPeriod[1..]","fixedPaymentAmount[1..1]","discountFactor[0..1]","forecastPaymentAmount->Money[0..1]","presentValueAmount->Money[0..1]"],
    "extend":"PaymentBase"
  },{
    "name":"MarketReference",
    "documentation":"Reference to a market structure.",
    "extend":"Reference"
  },{
    "name":"TelephoneNumber",
    "documentation":"A type that represents a telephonic contact.",
    "relationships":["type[0..1]","number[1..1]"]
  },{
    "name":"volatilityStrikePrice",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"ContractualSupplement",
    "documentation":"A contractual supplement (such as those published by ISDA) that will apply to the trade.",
    "extend":"Scheme"
  },{
    "name":"routingName",
    "extend":"anySimpleType"
  },{
    "name":"PricingInputType",
    "documentation":"The type of pricing structure represented.",
    "extend":"Scheme"
  },{
    "name":"Exercise",
    "documentation":"A type defining the exercise period for an American style option together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fees."
  },{
    "name":"ExchangeId",
    "documentation":"A short form unique identifier for an exchange. If the element is not present then the exchange shall be the primary exchange on which the underlying is listed. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
    "extend":"Scheme"
  },{
    "name":"ClearingStatusItem",
    "documentation":"A component of a clearing status report. This provides the clearing status for a single trade.",
    "relationships":["tradeIdentifier->TradeIdentifier[1..]","tradeReferenceInformation->TradeReferenceInformation[1..1]","trade->Trade[1..1]","clearingStatusValue->ClearingStatusValue[1..1]","updatedDateTime[0..1]","reason->Reason[0..]","statusAppliesTo->PartyReference[0..2]"]
  },{
    "name":"PartyTradeIdentifier",
    "documentation":"A type defining one or more trade identifiers allocated to the trade by a party. A link identifier allows the trade to be associated with other related trades, e.g. trades forming part of a larger structured transaction. It is expected that for external communication of trade there will be only one tradeId sent in the document per party.",
    "relationships":["issuer->IssuerId[1..1]","tradeId->TradeId[1..1]","partyReference->PartyReference[1..1]","accountReference->AccountReference[0..1]","tradeId->TradeId[1..1]","versionedTradeId->VersionedTradeId[1..1]","linkId->LinkId[0..]","allocationTradeId->TradeIdentifier[0..]","blockTradeId->TradeIdentifier[0..1]","originatingTradeId->TradeIdentifier[0..]","productComponentIdentifier->ProductComponentIdentifier[0..]"],
    "extend":"TradeIdentifier"
  },{
    "name":"QueryParameterOperator",
    "documentation":"A type representing an operator describing the relationship of a value to its corresponding identifier for a parameter describing a query portfolio. Possible relationships include equals, not equals, less than, greater than. Possible operators are listed in the queryParameterOperatorScheme.",
    "extend":"Scheme"
  },{
    "name":"double",
    "extend":"anySimpleType"
  },{
    "name":"unadjustedStartDate",
    "extend":"anySimpleType"
  },{
    "name":"exerciseInNumberOfUnits",
    "extend":"anySimpleType"
  },{
    "name":"PrincipalExchangeAmount",
    "documentation":"Specifies the principal exchange amount, either by explicitly defining it, or by point to an amount defined somewhere else in the swap document.",
    "relationships":["amountRelativeTo->AmountReference[1..1]","determinationMethod->DeterminationMethod[1..1]","principalAmount->NonNegativeMoney[1..1]"]
  },{
    "name":"varianceStrikePrice",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"increasedCostOfStockBorrow",
    "extend":"anySimpleType"
  },{
    "name":"TradeAmendmentContent",
    "documentation":"A structure describing a negotiated amendment.",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]","trade->Trade[1..1]","agreementDate[1..1]","executionDateTime->ExecutionDateTime[0..1]","effectiveDate[1..1]","payment->Payment[0..]"],
    "extend":"AbstractEvent"
  },{
    "name":"terminationDate",
    "extend":"anySimpleType"
  },{
    "name":"integralMultipleAmount",
    "extend":"anySimpleType"
  },{
    "name":"VersionedTradeId",
    "documentation":"Trade Id with Version Support",
    "relationships":["tradeId->TradeId[1..1]","version[1..1]","effectiveDate->IdentifiedDate[0..1]"]
  },{
    "name":"swaption"
  },{
    "name":"CreditDefaultSwap",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","generalTerms->GeneralTerms[1..1]","feeLeg->FeeLeg[1..1]","protectionTerms->ProtectionTerms[1..]","cashSettlementTerms->CashSettlementTerms[1..1]","physicalSettlementTerms->PhysicalSettlementTerms[1..1]"],
    "extend":"Product"
  },{
    "name":"notionalStepAmount",
    "extend":"anySimpleType"
  },{
    "name":"obligationAcceleration"
  },{
    "name":"PositionConstituent",
    "documentation":"The items (trades, trade references, holdings, other positions) that comprise this position. Currently a position may consist only of a single trade, a reference to a previously submitted position, or a reference to the trade. The choice structure is optional to allow extensions to be placed within this container.",
    "relationships":["trade->Trade[1..1]","positionVersionReference[1..1]","tradeReference->PartyTradeIdentifiers[1..1]"]
  },{
    "name":"increasedCostOfHedging",
    "extend":"anySimpleType"
  },{
    "name":"AssetClass",
    "extend":"Scheme"
  },{
    "name":"makeWholeDate",
    "extend":"anySimpleType"
  },{
    "name":"ExerciseFee",
    "documentation":"A type defining the fee payable on exercise of an option. This fee may be defined as an amount or a percentage of the notional exercised.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","notionalReference->NotionalReference[1..1]","feeAmount[1..1]","feeRate[1..1]","feePaymentDate->RelativeDateOffset[1..1]"]
  },{
    "name":"finalEditedData",
    "extend":"anySimpleType"
  },{
    "name":"FloatingRate",
    "documentation":"A type defining a floating rate.",
    "relationships":["floatingRateIndex->FloatingRateIndex[1..1]","indexTenor->Period[0..1]","floatingRateMultiplierSchedule->Schedule[0..1]","spreadSchedule->SpreadSchedule[0..]","rateTreatment[0..1]","capRateSchedule->StrikeSchedule[0..]","floorRateSchedule->StrikeSchedule[0..]"],
    "extend":"Rate"
  },{
    "name":"exhaustionPoint",
    "extend":"anySimpleType"
  },{
    "name":"valuationDocument"
  },{
    "name":"VerificationMethod",
    "documentation":"A type used to represent the type of mechanism that can be used to verify a trade.",
    "extend":"Scheme"
  },{
    "name":"GoverningLaw",
    "documentation":"Identification of the law governing the transaction.",
    "extend":"Scheme"
  },{
    "name":"BermudaExercise",
    "documentation":"A type defining the Bermuda option exercise dates and the expiration date together with any rules govenerning the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fee.",
    "relationships":["bermudaExerciseDates->AdjustableOrRelativeDates[1..1]","relevantUnderlyingDate->AdjustableOrRelativeDates[0..1]","earliestExerciseTime->BusinessCenterTime[1..1]","latestExerciseTime->BusinessCenterTime[0..1]","expirationTime->BusinessCenterTime[1..1]","multipleExercise->MultipleExercise[0..1]","exerciseFeeSchedule->ExerciseFeeSchedule[0..1]"],
    "extend":"Exercise"
  },{
    "name":"BoundedVariance",
    "documentation":"A type describing variance bounds, which are used to exclude money price values outside of the specified range In a Up Conditional Swap Underlyer price must be equal to or higher than Lower Barrier In a Down Conditional Swap Underlyer price must be equal to or lower than Upper Barrier In a Corridor Conditional Swap Underlyer price must be equal to or higher than Lower Barrier and must be equal to or lower than Upper Barrier.",
    "relationships":["realisedVarianceMethod[1..1]","daysInRangeAdjustment[1..1]","upperBarrier[0..1]","lowerBarrier[0..1]"]
  },{
    "name":"referencePolicy",
    "extend":"anySimpleType"
  },{
    "name":"BondOptionStrike",
    "documentation":"A complex type to specify the strike of a bond or convertible bond option.",
    "relationships":["referenceSwapCurve->ReferenceSwapCurve[1..1]","price->OptionStrike[1..1]"]
  },{
    "name":"anySimpleType",
    "datum":true
  },{
    "name":"premiumType",
    "documentation":"Premium Type for Forward Start Equity Option",
    "characteristics":{
      "enumeration":[{
        "value":"PrePaid"
      },{
        "value":"PostPaid"
      },{
        "value":"Variable"
      },{
        "value":"Fixed"
      }]
    },
    "extend":"token"
  },{
    "name":"power",
    "extend":"nonNegativeInteger"
  },{
    "name":"currentFactor",
    "extend":"anySimpleType"
  },{
    "name":"ReferenceSwapCurve",
    "documentation":"A complex type used to specify the option and convertible bond option strike when expressed in reference to a swap curve.",
    "relationships":["swapUnwindValue->SwapCurveValuation[1..1]","makeWholeAmount->MakeWholeAmount[0..1]"]
  },{
    "name":"Market",
    "documentation":"A collection of pricing inputs.",
    "relationships":["name[0..1]","benchmarkQuotes->QuotedAssetSet[0..1]","pricingStructure->PricingStructure[0..]","pricingStructureValuation->PricingStructureValuation[0..]","benchmarkPricingMethod->PricingMethod[0..]"]
  },{
    "name":"CashflowId",
    "documentation":"An identifier used to identify a single component cashflow.",
    "extend":"Scheme"
  },{
    "name":"ClearingStatusValue",
    "documentation":"The current status value of a clearing request.",
    "extend":"Scheme"
  },{
    "name":"AgreementType",
    "extend":"Scheme"
  },{
    "name":"CreditEventNoticeDocument",
    "documentation":"An event type that records the occurrence of a credit event notice.",
    "relationships":["affectedTransactions->AffectedTransactions[0..1]","referenceEntity->LegalEntity[1..1]","creditEvent->CreditEvent[1..1]","publiclyAvailableInformation->Resource[0..]","notifyingPartyReference->PartyReference[1..1]","notifiedPartyReference->PartyReference[1..1]","creditEventNoticeDate[1..1]","creditEventDate[1..1]"]
  },{
    "name":"stepValue",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"RestrictedPercentage",
    "documentation":"A type defining a percentage specified as decimal from 0 to 1. A percentage of 5% would be represented as 0.05.",
    "extend":"decimal"
  },{
    "name":"Restructuring",
    "relationships":["applicable[1..1]","restructuringType->RestructuringType[0..1]","multipleHolderObligation[0..1]","multipleCreditEventNotices[0..1]"]
  },{
    "name":"tranche",
    "extend":"normalizedString"
  },{
    "name":"EquityMultipleExercise",
    "documentation":"A type for defining the multiple exercise provisions of an American or Bermuda style equity option.",
    "relationships":["integralMultipleExercise[0..1]","minimumNumberOfOptions[1..1]","maximumNumberOfOptions[1..1]"]
  },{
    "name":"quantity",
    "extend":"anySimpleType"
  },{
    "name":"RestructuringEvent",
    "relationships":["partialExerciseAmount->Money[0..1]"],
    "extend":"CreditEvent"
  },{
    "name":"NotifyingParty",
    "relationships":["buyerPartyReference->PartyReference[1..1]","sellerPartyReference->PartyReference[0..1]"]
  },{
    "name":"CoalProductSpecifications",
    "documentation":"The different options for specifying the quality attributes of the coal to be delivered.",
    "relationships":["standardQuality->CoalStandardQuality[1..1]","standardQualitySchedule->CoalStandardQualitySchedule[1..1]"]
  },{
    "name":"MakeWholeProvisions",
    "documentation":"A type to hold early exercise provisions.",
    "relationships":["makeWholeDate[1..1]","recallSpread[1..1]"]
  },{
    "name":"adjustmentToFallbackWeatherStation",
    "extend":"anySimpleType"
  },{
    "name":"CreditRating",
    "documentation":"A party's credit rating.",
    "extend":"Scheme"
  },{
    "name":"interpolationPeriod",
    "documentation":"Defines applicable periods for interpolation.",
    "characteristics":{
      "enumeration":[{
        "value":"Initial"
      },{
        "value":"InitialAndFinal"
      },{
        "value":"Final"
      },{
        "value":"AnyPeriod"
      }]
    },
    "extend":"token"
  },{
    "name":"componentSecurityIndexAnnexFallback",
    "extend":"anySimpleType"
  },{
    "name":"Manifest"
  },{
    "name":"SettlementTerms",
    "relationships":["settlementCurrency->Currency[0..1]"]
  },{
    "name":"PeriodicPayment",
    "relationships":["paymentFrequency->Period[0..1]","firstPeriodStartDate[0..1]","firstPaymentDate[0..1]","lastRegularPaymentDate[0..1]","rollConvention[0..1]","fixedAmount->Money[1..1]","fixedAmountCalculation->FixedAmountCalculation[1..1]","adjustedPaymentDates->AdjustedPaymentDates[0..]"],
    "extend":"PaymentBase"
  },{
    "name":"unadjustedLastDate",
    "extend":"anySimpleType"
  },{
    "name":"market"
  },{
    "name":"limitationPercentage",
    "documentation":"A type defining a percentage specified as decimal from 0 to 1. A percentage of 5% would be represented as 0.05.",
    "extend":"decimal"
  },{
    "name":"totalQuantityTolerance",
    "extend":"anySimpleType"
  },{
    "name":"ExecutionDateTime",
    "documentation":"A type defining the trade execution date time and the source of it. For use inside containing types which already have a Reference to a Party that has assigned this trade execution date time.",
    "extend":"dateTime"
  },{
    "name":"hourMinuteTime",
    "documentation":"A type defining a time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
    "extend":"time"
  },{
    "name":"positive",
    "extend":"anySimpleType"
  },{
    "name":"AdjustableDates",
    "documentation":"A type for defining a series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the dates.",
    "relationships":["unadjustedDate->IdentifiedDate[1..]","dateAdjustments->BusinessDayAdjustments[1..1]","adjustedDate->IdentifiedDate[0..]"]
  },{
    "name":"tenorName",
    "characteristics":{
      "enumeration":[{
        "value":"Broken"
      },{
        "value":"Today"
      },{
        "value":"Tomorrow"
      },{
        "value":"TomorrowNext"
      },{
        "value":"Spot"
      },{
        "value":"SpotNext"
      }]
    },
    "extend":"FxTenorPeriodEnum"
  },{
    "name":"CalendarSpread",
    "documentation":"A type for defining a calendar spread feature.",
    "relationships":["expirationDateTwo->AdjustableOrRelativeDate[1..1]"]
  },{
    "name":"PositiveStep",
    "documentation":"A type defining a step date and strictly-positive step value pair. This step definitions are used to define varying rate or amount schedules, e.g. a notional amortization or a step-up coupon schedule.",
    "relationships":["stepDate[1..1]","stepValue[1..1]"],
    "extend":"StepBase"
  },{
    "name":"IdentifiedCurrencyReference",
    "documentation":"Reference to a currency with ID attribute",
    "extend":"Reference"
  },{
    "name":"StandardProduct",
    "documentation":"Simple product representation providing key information about a variety of different products. Standard products - for use in Transparency reporting to define a product that represents a standardized OTC derivative transaction whose economics do not need to be fully described using an FpML schema because they are implied by the product ID. In other views, standard products are present for convenience to support internal messaging and workflows that are cross-product. Standard products are not full trade representations as such they are not intended to be used for confirming trades.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","notional->CashflowNotional[0..1]","quote->BasicQuotation[0..]"],
    "extend":"Product"
  },{
    "name":"effectiveFrom",
    "extend":"anySimpleType"
  },{
    "name":"PartyRoleType",
    "documentation":"A type refining the role a role played by a party in one or more transactions. Examples include \"AllPositions\" and \"SomePositions\" for Guarantor. This can be extended to provide custom types.",
    "extend":"Scheme"
  },{
    "name":"CreditCurveValuation",
    "documentation":"A set of credit curve values, which can include pricing inputs (which are typically credit spreads), default probabilities, and recovery rates.",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","baseDate->IdentifiedDate[1..1]","spotDate->IdentifiedDate[0..1]","inputDataDate->IdentifiedDate[0..1]","endDate->IdentifiedDate[0..1]","buildDateTime[0..1]","inputs->QuotedAssetSet[0..1]","defaultProbabilityCurve->DefaultProbabilityCurve[0..1]","recoveryRate[1..1]","recoveryRateCurve->TermCurve[1..1]"],
    "extend":"PricingStructureValuation"
  },{
    "name":"MaturityNotification",
    "documentation":"A message used to notify another party that a trade has matured. This can be used to report, for example, that a swap has passed its final payment and can be removed, or that an option has expired without being executed.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","optionExpiry->OptionExpiryBase[1..1]","tradeMaturity->TradeMaturity[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"CommodityPhysicalExercise",
    "documentation":"The parameters for defining how the physically-settled commodity option can be exercised and how it is settled.",
    "relationships":["americanExercise->CommodityPhysicalAmericanExercise[1..1]","europeanExercise->CommodityPhysicalEuropeanExercise[1..1]","automaticExercise[0..1]","writtenConfirmation[0..1]"]
  },{
    "name":"varianceCap",
    "extend":"anySimpleType"
  },{
    "name":"ProposedCollateralAllocation",
    "documentation":"The proposed collateral allocation.",
    "relationships":["allocationPartyReference->PartyReference[0..1]","allocationAccountReference->AccountReference[0..1]","collateralValueAllocation->CollateralValueAllocation[1..1]"]
  },{
    "name":"parValue",
    "extend":"anySimpleType"
  },{
    "name":"Transforms"
  },{
    "name":"integralMultipleExercise",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"ReportingRoles",
    "documentation":"The roles of the parties in reporting information such as positions.",
    "relationships":["baseParty->PartyReference[1..1]","baseAccount->AccountReference[0..1]","activityProvider->PartyReference[0..1]","positionProvider->PartyReference[0..1]","valuationProvider->PartyReference[0..1]"]
  },{
    "name":"thresholdRate",
    "extend":"anySimpleType"
  },{
    "name":"TimeDimension",
    "documentation":"The time dimensions of a term-structure. The user must supply either a tenor or a date or both.",
    "relationships":["tenor->Period[1..1]","date[1..1]","tenor->Period[0..1]"]
  },{
    "name":"BasketReferenceInformation",
    "documentation":"CDS Basket Reference Information",
    "relationships":["basketName->BasketName[1..1]","basketId->BasketId[0..]","basketId->BasketId[1..]","referencePool->ReferencePool[1..1]","nthToDefault[1..1]","mthToDefault[0..1]","tranche->Tranche[1..1]"]
  },{
    "name":"formulaDescription",
    "extend":"anySimpleType"
  },{
    "name":"ResetFrequency",
    "documentation":"A type defining the reset frequency. In the case of a weekly reset, also specifies the day of the week that the reset occurs. If the reset frequency is greater than the calculation period frequency the this implies that more or more reset dates is established for each calculation period and some form of rate averaginhg is applicable. The specific averaging method of calculation is specified in FloatingRateCalculation. In case the reset frequency is of value T (term), the period is defined by the swap\\swapStream\\calculationPerioDates\\effectiveDate and the swap\\swapStream\\calculationPerioDates\\terminationDate.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","weeklyRollConvention[0..1]"],
    "extend":"Frequency"
  },{
    "name":"PrincipalExchangeDescriptions",
    "documentation":"Specifies each of the characteristics of the principal exchange cashflows, in terms of paying/receiving counterparties, amounts and dates.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","principalExchangeAmount->PrincipalExchangeAmount[1..1]","principalExchangeDate->AdjustableOrRelativeDate[0..1]"]
  },{
    "name":"approver",
    "extend":"string"
  },{
    "name":"standardSettlementStyle",
    "documentation":"The code specification of whether a trade is settling using standard settlement instructions as well as whether it is a candidate for settlement netting.",
    "characteristics":{
      "enumeration":[{
        "value":"Standard"
      },{
        "value":"Net"
      },{
        "value":"StandardAndNet"
      }]
    },
    "extend":"token"
  },{
    "name":"DividendDateReferenceEnum",
    "documentation":"The reference to a dividend date.",
    "characteristics":{
      "enumeration":[{
        "value":"ExDate"
      },{
        "value":"DividendPaymentDate"
      },{
        "value":"DividendValuationDate"
      },{
        "value":"RecordDate"
      },{
        "value":"TerminationDate"
      },{
        "value":"EquityPaymentDate"
      },{
        "value":"FollowingPaymentDate"
      },{
        "value":"AdHocDate"
      },{
        "value":"CumulativeEquityPaid"
      },{
        "value":"CumulativeLiborPaid"
      },{
        "value":"CumulativeEquityExDiv"
      },{
        "value":"CumulativeLiborExDiv"
      },{
        "value":"SharePayment"
      },{
        "value":"CashSettlementPaymentDate"
      },{
        "value":"FloatingAmountPaymentDate"
      },{
        "value":"CashSettlePaymentDateExDiv"
      },{
        "value":"CashSettlePaymentDateIssuerPayment"
      },{
        "value":"ExDividendPaymentDate"
      }]
    },
    "extend":"token"
  },{
    "name":"RequestClearingRetracted",
    "documentation":"A message withdrawing a request that a trade be cleared by a clearing service.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"InstrumentTradeQuantity",
    "documentation":"A structure describing the amount of an instrument that was traded.",
    "relationships":["number[1..1]","nominal->Money[1..1]"]
  },{
    "name":"equityExpirationTimeType",
    "documentation":"Defines points in the day when equity option exercise and valuation can occur.",
    "characteristics":{
      "enumeration":[{
        "value":"Close"
      },{
        "value":"Open"
      },{
        "value":"OSP"
      },{
        "value":"SpecificTime"
      },{
        "value":"XETRA"
      },{
        "value":"DerivativesClose"
      },{
        "value":"AsSpecifiedInMasterConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"novationDate",
    "extend":"anySimpleType"
  },{
    "name":"DateRelativeToPaymentDates",
    "documentation":"A type to provide the ability to point to multiple payment nodes in the document through the unbounded paymentDatesReference.",
    "relationships":["paymentDatesReference->PaymentDatesReference[1..]"]
  },{
    "name":"NonCorrectableRequestMessage",
    "documentation":"A type defining the content model for a request message that cannot be subsequently corrected or retracted.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]"],
    "extend":"RequestMessage"
  },{
    "name":"PricingParameterDerivativeReference",
    "documentation":"Reference to a partial derivative.",
    "extend":"Reference"
  },{
    "name":"TimestampTypeScheme",
    "documentation":"The type or meaning of a timestamp.",
    "extend":"Scheme"
  },{
    "name":"BasketConstituent",
    "documentation":"A type describing each of the constituents of a basket.",
    "relationships":["underlyingAsset->Asset[1..1]","constituentWeight->ConstituentWeight[0..1]","dividendPayout->DividendPayout[0..1]","underlyerPrice->Price[0..1]","underlyerNotional->Money[0..1]","underlyerSpread->SpreadScheduleReference[0..1]","couponPayment->PendingPayment[0..1]"]
  },{
    "name":"MatchId",
    "documentation":"An identifier used to identify matched cashflows.",
    "extend":"Scheme"
  },{
    "name":"BankruptcyEvent",
    "extend":"CreditEvent"
  },{
    "name":"SignatureMethod"
  },{
    "name":"CommoditySettlementPeriodsNotionalQuantitySchedule",
    "documentation":"The notional quantity schedule of electricity that applies to one or more groups of Settlement Periods.",
    "relationships":["settlementPeriodsNotionalQuantityStep->CommodityNotionalQuantity[1..]","settlementPeriodsReference->SettlementPeriodsReference[1..]"]
  },{
    "name":"CoalQualityAdjustments",
    "documentation":"A scheme identifying the quality adjustment formulae for a physically settled coal trade.",
    "extend":"Scheme"
  },{
    "name":"notionalReset",
    "extend":"anySimpleType"
  },{
    "name":"DateList",
    "documentation":"List of Dates",
    "relationships":["date[1..]"]
  },{
    "name":"index"
  },{
    "name":"QuotedAssetSet",
    "documentation":"A collection of quoted assets.",
    "relationships":["instrumentSet->InstrumentSet[0..1]","assetQuote->BasicAssetValuation[0..]"]
  },{
    "name":"dataDocument"
  },{
    "name":"transferable",
    "extend":"anySimpleType"
  },{
    "name":"adjustedFixingDate",
    "extend":"anySimpleType"
  },{
    "name":"MasterAgreementType",
    "extend":"Scheme"
  },{
    "name":"indexDisruption",
    "documentation":"The specification of the consequences of Index Events.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationAgentAdjustment"
      },{
        "value":"NegotiatedCloseOut"
      },{
        "value":"CancellationAndPayment"
      },{
        "value":"RelatedExchange"
      }]
    },
    "extend":"token"
  },{
    "name":"FloatingLegCalculation",
    "documentation":"A type to capture details relevant to the calculation of the floating price.",
    "relationships":["pricingDates->CommodityPricingDates[1..1]","averagingMethod[0..1]","conversionFactor[0..1]","rounding->Rounding[0..1]","spread->CommoditySpread[1..1]","spreadSchedule->CommoditySpreadSchedule[1..]","spreadPercentage[1..1]","fx->CommodityFx[0..1]"]
  },{
    "name":"acceleratedOrMatured",
    "extend":"anySimpleType"
  },{
    "name":"nonPositiveInteger",
    "extend":"integer"
  },{
    "name":"alternativeDataProvider",
    "extend":"anySimpleType"
  },{
    "name":"ReturnSwapLegUnderlyer",
    "documentation":"A type describing the return leg of a return type swap.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","strikeDate->AdjustableOrRelativeDate[0..1]","underlyer->Underlyer[1..1]"],
    "extend":"DirectionalLeg"
  },{
    "name":"Variance",
    "documentation":"A type describing the variance amount of a variance swap.",
    "relationships":["initialLevel[1..1]","closingLevel[1..1]","expiringLevel[1..1]","expectedN[0..1]","varianceAmount->NonNegativeMoney[1..1]","volatilityStrikePrice[1..1]","varianceStrikePrice[1..1]","varianceCap[0..1]","unadjustedVarianceCap[0..1]","boundedVariance->BoundedVariance[0..1]","exchangeTradedContractNearest->ExchangeTradedContract[0..1]","vegaNotionalAmount[0..1]"],
    "extend":"CalculationFromObservation"
  },{
    "name":"creditCurveValuation"
  },{
    "name":"Asian",
    "documentation":"As per ISDA 2002 Definitions.",
    "relationships":["averagingInOut[1..1]","strikeFactor[0..1]","averagingPeriodIn->AveragingPeriod[0..1]","averagingPeriodOut->AveragingPeriod[0..1]"]
  },{
    "name":"CreditEventsReference",
    "documentation":"Reference to credit events.",
    "extend":"Reference"
  },{
    "name":"ValuationDate",
    "relationships":["singleValuationDate->SingleValuationDate[1..1]","multipleValuationDates->MultipleValuationDates[1..1]"]
  },{
    "name":"redemptionDate",
    "extend":"anySimpleType"
  },{
    "name":"negative",
    "extend":"anySimpleType"
  },{
    "name":"masterAgreementPaymentDates",
    "extend":"anySimpleType"
  },{
    "name":"FxOptionPremium",
    "documentation":"A type that specifies the premium exchanged for a single option trade or option strategy.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentDate->AdjustableOrRelativeDate[1..1]","paymentAmount->NonNegativeMoney[1..1]","settlementInformation->SettlementInformation[0..1]","quote->PremiumQuote[0..1]"],
    "extend":"NonNegativePayment"
  },{
    "name":"UnprocessedElementWrapper",
    "documentation":"A type holding a structure that is unvalidated"
  },{
    "name":"ElectricityDelivery",
    "documentation":"The physical delivery conditions for electricity.",
    "relationships":["deliveryPoint->ElectricityDeliveryPoint[1..1]","deliveryType->ElectricityDeliveryType[0..1]","transmissionContingency->ElectricityTransmissionContingency[0..1]","deliveryZone->CommodityDeliveryPoint[1..1]","electingPartyReference->PartyReference[0..1]"]
  },{
    "name":"Resource",
    "documentation":"Describes the resource that contains the media representation of a business event (i.e used for stating the Publicly Available Information). For example, can describe a file or a URL that represents the event. This type is an extended version of a type defined by RIXML (www.rixml.org).",
    "relationships":["resourceId->ResourceId[1..1]","resourceType->ResourceType[0..1]","language->Language[0..1]","sizeInBytes[0..1]","length->ResourceLength[0..1]","mimeType->MimeType[1..1]","name[0..1]","comments[0..1]","string[1..1]","hexadecimalBinary[1..1]","base64Binary[1..1]","url[1..1]"]
  },{
    "name":"IndexEventConsequenceEnum",
    "documentation":"The specification of the consequences of Index Events.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationAgentAdjustment"
      },{
        "value":"NegotiatedCloseOut"
      },{
        "value":"CancellationAndPayment"
      },{
        "value":"RelatedExchange"
      }]
    },
    "extend":"token"
  },{
    "name":"positionVersionReference",
    "extend":"nonNegativeInteger"
  },{
    "name":"ContractualMatrix",
    "relationships":["matrixType->MatrixType[1..1]","publicationDate[0..1]","matrixTerm->MatrixTerm[0..1]"]
  },{
    "name":"TradeReferenceInformation",
    "documentation":"Defines a type that allows trade identifiers and/or trade information to be represented for a trade.",
    "relationships":["originatingEvent->OriginatingEvent[1..1]","terminatingEvent->TerminatingEvent[1..1]","partyTradeIdentifier->PartyTradeIdentifier[1..]","partyTradeInformation->PartyTradeInformation[0..]","productType->ProductType[0..1]","productId->ProductId[0..1]"]
  },{
    "name":"CommodityForward",
    "documentation":"Commodity Forward",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","valueDate->AdjustableOrRelativeDate[0..1]","fixedLeg->NonPeriodicFixedPriceLeg[1..1]","averagePriceLeg->AveragePriceLeg[1..1]","commodityForwardLeg->CommodityForwardLeg[1..1]","commonPricing[0..1]","marketDisruption->CommodityMarketDisruption[0..1]","settlementDisruption[0..1]","rounding->Rounding[0..1]"],
    "extend":"Product"
  },{
    "name":"ServiceProcessingCycle",
    "documentation":"A type that can be used to describe the processing phase of a service. For example, EndOfDay, Intraday.",
    "extend":"Scheme"
  },{
    "name":"FxBarrierFeature",
    "documentation":"Describes the properties of an Fx barrier.",
    "relationships":["barrierType[1..1]","quotedCurrencyPair->QuotedCurrencyPair[1..1]","triggerRate[1..1]","informationSource->InformationSource[1..]","observationStartDate[1..1]","observationEndDate[0..1]"]
  },{
    "name":"incurredRecoveryApplicable",
    "extend":"anySimpleType"
  },{
    "name":"matchScore",
    "extend":"anySimpleType"
  },{
    "name":"initialFactor",
    "extend":"anySimpleType"
  },{
    "name":"nonStandardTerms",
    "extend":"anySimpleType"
  },{
    "name":"bid",
    "extend":"anySimpleType"
  },{
    "name":"discrepancyClause",
    "extend":"anySimpleType"
  },{
    "name":"Position",
    "documentation":"A collection of related trades or positions and the corresponding aggregate exposures generated by these.",
    "relationships":["positionId->PositionId[1..1]","version[0..1]","status[0..1]","creationDate[0..1]","originatingEvent[0..1]","history->PositionHistory[0..1]","reportingRoles->ReportingRoles[0..1]","constituent->PositionConstituent[1..1]","scheduledDate->ScheduledDate[0..]","valuation->AssetValuation[0..]"]
  },{
    "name":"shift",
    "extend":"anySimpleType"
  },{
    "name":"AveragingPeriod",
    "documentation":"Period over which an average value is taken.",
    "relationships":["schedule->AveragingSchedule[0..]","averagingDateTimes->DateTimeList[1..1]","averagingObservations->AveragingObservationList[1..1]","marketDisruption->MarketDisruption[0..1]"]
  },{
    "name":"AmericanExercise",
    "documentation":"A type defining the exercise period for an American style option together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fees.",
    "relationships":["commencementDate->AdjustableOrRelativeDate[1..1]","expirationDate->AdjustableOrRelativeDate[1..1]","relevantUnderlyingDate->AdjustableOrRelativeDates[0..1]","earliestExerciseTime->BusinessCenterTime[1..1]","latestExerciseTime->BusinessCenterTime[0..1]","expirationTime->BusinessCenterTime[1..1]","multipleExercise->MultipleExercise[0..1]","exerciseFeeSchedule->ExerciseFeeSchedule[0..1]"],
    "extend":"Exercise"
  },{
    "name":"FixedPaymentAmount",
    "documentation":"Fixed payment amount within a Dividend Swap.",
    "relationships":["paymentAmount->NonNegativeMoney[0..1]","paymentDate->RelativeDateOffset[1..1]"],
    "extend":"PaymentBase"
  },{
    "name":"hexadecimalBinary",
    "extend":"anySimpleType"
  },{
    "name":"anyType"
  },{
    "name":"TransactionCharacteristic",
    "documentation":"A characteristic of a transaction used in declaring an end-user exception.",
    "extend":"Scheme"
  },{
    "name":"outstandingNumberOfOptions",
    "extend":"anySimpleType"
  },{
    "name":"DateOffset",
    "documentation":"A type defining an offset used in calculating a date when this date is defined in reference to another date through a date offset. The type includes the convention for adjusting the date and an optional sequence element to indicate the order in a sequence of multiple date offsets.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","dayType[0..1]","businessDayConvention[1..1]"],
    "extend":"Offset"
  },{
    "name":"FxStrikePrice",
    "documentation":"A type that describes the rate of exchange at which the option has been struck.",
    "relationships":["rate[1..1]","strikeQuoteBasis[1..1]"]
  },{
    "name":"FxDigitalAmericanExercise",
    "documentation":"Describes the characteristics for american exercise of FX products.",
    "relationships":["commencementDate->AdjustableOrRelativeDate[1..1]","expiryDate[1..1]","expiryTime->BusinessCenterTime[0..1]","cutName->CutName[0..1]","latestValueDate[1..1]"],
    "extend":"Exercise"
  },{
    "name":"GeneralTerms",
    "relationships":["effectiveDate->AdjustableDate2[0..1]","scheduledTerminationDate->AdjustableDate2[0..1]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","dateAdjustments->BusinessDayAdjustments[0..1]","referenceInformation->ReferenceInformation[1..1]","indexReferenceInformation->IndexReferenceInformation[1..1]","basketReferenceInformation->BasketReferenceInformation[1..1]","additionalTerm->AdditionalTerm[0..]","substitution[0..1]","modifiedEquityDelivery[0..1]"]
  },{
    "name":"AdjustableDate",
    "documentation":"A type for defining a date that shall be subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
    "relationships":["unadjustedDate->IdentifiedDate[1..1]","dateAdjustments->BusinessDayAdjustments[1..1]","adjustedDate->IdentifiedDate[0..1]"]
  },{
    "name":"DigestValueType",
    "extend":"base64Binary"
  },{
    "name":"CommodityInformationProvider",
    "documentation":"The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
    "extend":"Scheme"
  },{
    "name":"EquityOptionTransactionSupplement",
    "documentation":"A type for defining equity option transaction supplements.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityEffectiveDate[0..1]","underlyer->Underlyer[1..1]","notional->NonNegativeMoney[0..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","feature->OptionFeatures[0..1]","fxFeature->FxFeature[0..1]","strategyFeature->StrategyFeature[0..1]","strike->EquityStrike[1..1]","spotPrice[0..1]","numberOfOptions[1..1]","equityPremium->EquityPremium[1..1]","exchangeLookAlike[0..1]","exchangeTradedContractNearest[0..1]","multipleExchangeIndexAnnexFallback[1..1]","componentSecurityIndexAnnexFallback[1..1]","methodOfAdjustment[0..1]","localJurisdiction->CountryCode[0..1]","optionEntitlement[1..1]","multiplier[1..1]","extraordinaryEvents->ExtraordinaryEvents[0..1]"],
    "extend":"EquityDerivativeShortFormBase"
  },{
    "name":"deliveryDates",
    "documentation":"In respect of a Transaction and a Commodity Reference Price, the relevant date or month for delivery of the underlying Commodity.",
    "characteristics":{
      "enumeration":[{
        "value":"CalculationPeriod"
      },{
        "value":"FirstNearby"
      },{
        "value":"SecondNearby"
      },{
        "value":"ThirdNearby"
      },{
        "value":"FourthNearby"
      },{
        "value":"FifthNearby"
      },{
        "value":"SixthNearby"
      },{
        "value":"SeventhNearby"
      },{
        "value":"EighthNearby"
      },{
        "value":"NinthNearby"
      },{
        "value":"TenthNearby"
      },{
        "value":"EleventhNearby"
      },{
        "value":"TwelfthNearby"
      },{
        "value":"ThirteenthNearby"
      },{
        "value":"FourteenthNearby"
      },{
        "value":"Spot"
      },{
        "value":"FirstNearbyWeek"
      },{
        "value":"SecondNearbyWeek"
      },{
        "value":"ThirdNearbyWeek"
      },{
        "value":"FourthNearbyWeek"
      },{
        "value":"FifthNearbyWeek"
      },{
        "value":"SixthNearbyWeek"
      },{
        "value":"SeventhNearbyWeek"
      },{
        "value":"EighthNearbyWeek"
      },{
        "value":"NinthNearbyWeek"
      },{
        "value":"TenthNearbyWeek"
      },{
        "value":"EleventhNearbyWeek"
      },{
        "value":"TwelfthNearbyWeek"
      },{
        "value":"ThirteenthNearbyWeek"
      },{
        "value":"FourteenthNearbyWeek"
      },{
        "value":"FifteenthNearbyWeek"
      },{
        "value":"SixteenthNearbyWeek"
      },{
        "value":"SeventeenthNearbyWeek"
      },{
        "value":"EighteenthNearbyWeek"
      },{
        "value":"NineteenthNearbyWeek"
      },{
        "value":"TwentiethNearbyWeek"
      },{
        "value":"TwentyFirstNearbyWeek"
      },{
        "value":"TwentySecondNearbyWeek"
      },{
        "value":"TwentyThirdNearbyWeek"
      },{
        "value":"TwentyFourthearbyWeek"
      },{
        "value":"TwentyFifthNearbyWeek"
      },{
        "value":"TwentySixthNearbyWeek"
      },{
        "value":"TwentySeventhNearbyWeek"
      },{
        "value":"TwentyEighthNearbyWeek"
      },{
        "value":"TwentyNinthNearbyWeek"
      },{
        "value":"ThirtiethNearbyWeek"
      },{
        "value":"ThirtyFirstNearbyWeek"
      },{
        "value":"ThirtySecondNearbyWeek"
      },{
        "value":"ThirtyThirdNearbyWeek"
      },{
        "value":"ThirtyFourthNearbyWeek"
      },{
        "value":"ThirtyFifthNearbyWeek"
      },{
        "value":"ThirtySixthNearbyWeek"
      },{
        "value":"ThirtySeventhNearbyWeek"
      },{
        "value":"ThirtyEighthNearbyWeek"
      },{
        "value":"ThirtyNinthNearbyWeek"
      },{
        "value":"FortiethNearbyWeek"
      },{
        "value":"FortyFirstNearbyWeek"
      },{
        "value":"FortySecondNearbyWeek"
      },{
        "value":"FortyThirdNearbyWeek"
      },{
        "value":"FortyFourthNearbyWeek"
      },{
        "value":"FortyFifthNearbyWeek"
      },{
        "value":"FortySixthNearbyWeek"
      },{
        "value":"FortySeventhNearbyWeek"
      },{
        "value":"FortyEighthNearbyWeek"
      },{
        "value":"FortyNinthNearbyWeek"
      },{
        "value":"FiftiethNearbyWeek"
      },{
        "value":"FiftyFirstNearbyWeek"
      },{
        "value":"FiftySecondNearbyWeek"
      }]
    },
    "extend":"token"
  },{
    "name":"clearingRefused"
  },{
    "name":"Sensitivity",
    "documentation":"The sensitivity of a value to a defined change in input parameters.",
    "extend":"decimal"
  },{
    "name":"AnyAssetReference",
    "documentation":"A reference to an asset, e.g. a portfolio, trade, or reference instrument..",
    "extend":"Reference"
  },{
    "name":"Name",
    "extend":"token"
  },{
    "name":"OptionBase",
    "documentation":"A complex type to support the credit default swap option.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]"],
    "extend":"Option"
  },{
    "name":"calculatedRate",
    "extend":"anySimpleType"
  },{
    "name":"priceExpression",
    "documentation":"The mode of expression of a price.",
    "characteristics":{
      "enumeration":[{
        "value":"AbsoluteTerms"
      },{
        "value":"PercentageOfNotional"
      }]
    },
    "extend":"token"
  },{
    "name":"adjustedExerciseDate",
    "extend":"anySimpleType"
  },{
    "name":"TriggerEvent",
    "documentation":"Observation point for trigger.",
    "relationships":["schedule->AveragingSchedule[0..]","triggerDates->DateList[0..1]","trigger->Trigger[1..1]","featurePayment->FeaturePayment[0..1]"]
  },{
    "name":"element",
    "extend":"anySimpleType"
  },{
    "name":"EquityOptionTypeEnum",
    "documentation":"Specifies an additional Forward type.",
    "extend":"anySimpleType"
  },{
    "name":"CurveInstrument",
    "documentation":"Abstract base class for instruments intended to be used primarily for building curves.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->Currency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]"],
    "extend":"IdentifiedAsset"
  },{
    "name":"cashflowsMatchParameters",
    "extend":"anySimpleType"
  },{
    "name":"YieldCurveValuation",
    "documentation":"The values of a yield curve, including possibly inputs and outputs (dfs, forwards, zero rates).",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","baseDate->IdentifiedDate[1..1]","spotDate->IdentifiedDate[0..1]","inputDataDate->IdentifiedDate[0..1]","endDate->IdentifiedDate[0..1]","buildDateTime[0..1]","inputs->QuotedAssetSet[0..1]","zeroCurve->ZeroRateCurve[0..1]","forwardCurve->ForwardRateCurve[0..]","discountFactorCurve->TermCurve[0..1]"],
    "extend":"PricingStructureValuation"
  },{
    "name":"CollateralizationType",
    "documentation":"Code that describes what type of collateral is posted by a party to a transaction. Options include Uncollateralized, Partial, Full, One-Way.",
    "extend":"Scheme"
  },{
    "name":"status",
    "extend":"string"
  },{
    "name":"FxBarrierTypeEnum",
    "documentation":"The specification of whether a barrier within an FX OTC option is a knockin or knockout, as well as whether it is a standard barrier or a reverse barrier.",
    "characteristics":{
      "enumeration":[{
        "value":"Knockin"
      },{
        "value":"Knockout"
      },{
        "value":"ReverseKnockin"
      },{
        "value":"ReverseKnockout"
      }]
    },
    "extend":"token"
  },{
    "name":"oilPhysicalLeg"
  },{
    "name":"FxCurve",
    "documentation":"An fx curve object., which includes pricing inputs and term structures for fx forwards.",
    "relationships":["name[0..1]","currency->Currency[0..1]","quotedCurrencyPair->QuotedCurrencyPair[1..1]"],
    "extend":"PricingStructure"
  },{
    "name":"LoadTypeEnum",
    "documentation":"LoadType is a summary of the full description of the settlement periods with respect to the region. Used for describing Electricity delivery schedules.",
    "characteristics":{
      "enumeration":[{
        "value":"Base"
      },{
        "value":"Peak"
      },{
        "value":"OffPeak"
      },{
        "value":"Custom"
      }]
    },
    "extend":"token"
  },{
    "name":"BusinessCenterTime",
    "documentation":"A type for defining a time with respect to a business day calendar location. For example, 11:00am London time.",
    "relationships":["hourMinuteTime[1..1]","businessCenter->BusinessCenter[1..1]"]
  },{
    "name":"bond"
  },{
    "name":"passThroughPercentage",
    "extend":"anySimpleType"
  },{
    "name":"CommodityMultipleExercise",
    "documentation":"A type for defining the multiple exercise provisions of an American style commodity option.",
    "relationships":["integralMultipleQuantity->CommodityNotionalQuantity[0..1]","minimumNotionalQuantity->CommodityNotionalQuantity[1..1]"]
  },{
    "name":"bankruptcy"
  },{
    "name":"clearingException"
  },{
    "name":"ValuationScenarioReference",
    "documentation":"Reference to a valuation scenario.",
    "extend":"Reference"
  },{
    "name":"CreditSupportAgreementIdentifier",
    "extend":"Scheme"
  },{
    "name":"requestExecutionRetracted"
  },{
    "name":"ProtectionTermsReference",
    "documentation":"Reference to protectionTerms component.",
    "extend":"Reference"
  },{
    "name":"adjustedCashSettlementValuationDate",
    "extend":"anySimpleType"
  },{
    "name":"declaredCashEquivalentDividendPercentage",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"creditEventException"
  },{
    "name":"NCName",
    "extend":"Name"
  },{
    "name":"NotionalAdjustmentEnum",
    "documentation":"The conditions that govern the adjustment to the number of units of the equity swap.",
    "characteristics":{
      "enumeration":[{
        "value":"Execution"
      },{
        "value":"PortfolioRebalancing"
      },{
        "value":"Standard"
      }]
    },
    "extend":"token"
  },{
    "name":"SingleValuationDate",
    "relationships":["businessDays[0..1]"]
  },{
    "name":"PrePayment",
    "documentation":"A type for defining PrePayment.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","prePayment[1..1]","prePaymentAmount->NonNegativeMoney[1..1]","prePaymentDate->AdjustableDate[1..1]"],
    "extend":"PaymentBase"
  },{
    "name":"ExecutionAdviceRetracted",
    "documentation":"A message that withdraws an advice to a third party that a trade execution has occurred.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","paymentDetails->PaymentDetails[0..]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"stepRelativeTo",
    "documentation":"The specification of whether a percentage rate change, used to calculate a change in notional outstanding, is expressed as a percentage of the initial notional amount or the previously outstanding notional amount.",
    "characteristics":{
      "enumeration":[{
        "value":"Initial"
      },{
        "value":"Previous"
      }]
    },
    "extend":"token"
  },{
    "name":"PartyTradeInformation",
    "documentation":"A type defining party-specific additional information that may be recorded against a trade.",
    "relationships":["partyReference->PartyReference[1..1]","accountReference->AccountReference[0..1]","relatedParty->RelatedParty[0..]","reportingRole->ReportingRole[0..1]","unit->Unit[0..]","relatedBusinessUnit->RelatedBusinessUnit[0..]","relatedPerson->RelatedPerson[0..]","isAccountingHedge[0..1]","category->TradeCategory[0..]","trader->Trader[0..]","executionDateTime->ExecutionDateTime[0..1]","timestamps->TradeProcessingTimestamps[0..1]","intentToAllocate[0..1]","allocationStatus->AllocationReportingStatus[0..1]","intentToClear[0..1]","clearingStatus->ClearingStatusValue[0..1]","collateralizationType->CollateralizationType[0..1]","reportingRegime->ReportingRegime[0..]","endUserException[0..1]","endUserExceptionDeclaration->EndUserExceptionDeclaration[0..1]","nonStandardTerms[0..1]","offMarketPrice[0..1]","largeSizeTrade[0..1]","executionType->ExecutionType[0..1]","executionVenueType->ExecutionVenueType[0..1]","verificationMethod->VerificationMethod[0..1]","confirmationMethod->ConfirmationMethod[0..1]"]
  },{
    "name":"offMarketPrice",
    "extend":"anySimpleType"
  },{
    "name":"Math",
    "documentation":"A type defining a mathematical expression."
  },{
    "name":"revenueObligationLiability",
    "extend":"anySimpleType"
  },{
    "name":"MoneyReference",
    "documentation":"References a Money instance.",
    "extend":"Reference"
  },{
    "name":"CommodityFxType",
    "documentation":"Identifes how the FX rate will be applied. This is intended to differentiate between the various methods for applying FX to the floating price such as a daily calculation, or averaging the FX and applying the average at the end of each CalculationPeriod.",
    "extend":"Scheme"
  },{
    "name":"IdentifiedAsset",
    "documentation":"An exchange traded bond.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]"],
    "extend":"Asset"
  },{
    "name":"FxAmericanExercise",
    "documentation":"Describes the characteristics for american exercise of FX products.",
    "relationships":["commencementDate->AdjustableOrRelativeDate[1..1]","expiryDate[1..1]","expiryTime->BusinessCenterTime[0..1]","cutName->CutName[0..1]","latestValueDate[1..1]","multipleExercise->FxMultipleExercise[0..1]"],
    "extend":"FxDigitalAmericanExercise"
  },{
    "name":"ReturnSwapEarlyTermination",
    "documentation":"A type describing the date from which each of the party may be allowed to terminate the trade.",
    "relationships":["partyReference->PartyReference[1..1]","startingDate->StartingDate[1..1]"]
  },{
    "name":"clearedPhysicalSettlement",
    "extend":"anySimpleType"
  },{
    "name":"ReferenceObligation",
    "relationships":["bond->Bond[1..1]","convertibleBond->ConvertibleBond[1..1]","mortgage->Mortgage[1..1]","loan->Loan[1..1]","primaryObligor->LegalEntity[1..1]","primaryObligorReference->LegalEntityReference[1..1]","guarantor->LegalEntity[1..1]","guarantorReference->LegalEntityReference[1..1]"]
  },{
    "name":"RelativeDateOffset",
    "documentation":"A type defining a date (referred to as the derived date) as a relative offset from another date (referred to as the anchor date) plus optional date adjustments.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","dayType[0..1]","businessDayConvention[1..1]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]","dateRelativeTo->DateReference[1..1]","adjustedDate->IdentifiedDate[0..1]"],
    "extend":"Offset"
  },{
    "name":"Q",
    "extend":"base64Binary"
  },{
    "name":"tradeChangeAdviceException"
  },{
    "name":"TermDepositFeatures",
    "relationships":["dualCurrency->DualCurrencyFeature[1..1]"]
  },{
    "name":"deposit"
  },{
    "name":"declaredCashDividendPercentage",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"ServiceNotification",
    "documentation":"A type defining the content model for a message that allows a service to send a notification message to a user of the service.",
    "relationships":["header->NotificationMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","serviceName[0..1]","status->ServiceStatus[1..1]","processingStatus->ServiceProcessingStatus[1..1]","advisory->ServiceAdvisory[1..1]"],
    "extend":"NotificationMessage"
  },{
    "name":"noReferenceObligation",
    "extend":"anySimpleType"
  },{
    "name":"dividendSwapOptionTransactionSupplement"
  },{
    "name":"Leg",
    "documentation":"A supertype of leg. All swap legs extend this type."
  },{
    "name":"time",
    "extend":"anySimpleType"
  },{
    "name":"ExchangeRate",
    "documentation":"A type that is used for describing the exchange rate for a particular transaction.",
    "relationships":["quotedCurrencyPair->QuotedCurrencyPair[1..1]","rate[1..1]","spotRate[1..1]","forwardPoints[1..1]","pointValue[0..1]","crossRate->CrossRate[0..]"]
  },{
    "name":"CommodityExercise",
    "documentation":"The parameters for defining how the commodity option can be exercised, how it is priced and how it is settled.",
    "relationships":["americanExercise->CommodityAmericanExercise[1..1]","europeanExercise->CommodityEuropeanExercise[1..1]","automaticExercise[0..1]","writtenConfirmation[0..1]","settlementCurrency->IdentifiedCurrency[1..1]","fx->CommodityFx[0..1]","conversionFactor[0..1]","relativePaymentDates->CommodityRelativePaymentDates[1..1]","paymentDates->AdjustableDatesOrRelativeDateOffset[1..1]","masterAgreementPaymentDates[1..1]"]
  },{
    "name":"Stub",
    "documentation":"A type defining how a stub calculation period amount is calculated and the start and end date of the stub. A single floating rate tenor different to that used for the regular part of the calculation periods schedule may be specified, or two floating rate tenors many be specified. If two floating rate tenors are specified then Linear Interpolation (in accordance with the 2000 ISDA Definitions, Section 8.3 Interpolation) is assumed to apply. Alternatively, an actual known stub rate or stub amount may be specified.",
    "relationships":["floatingRate->FloatingRate[1..2]","stubRate[1..1]","stubAmount->Money[1..1]","stubStartDate->AdjustableOrRelativeDate[0..1]","stubEndDate->AdjustableOrRelativeDate[0..1]"],
    "extend":"StubValue"
  },{
    "name":"referencePrice",
    "extend":"anySimpleType"
  },{
    "name":"exerciseDate",
    "extend":"anySimpleType"
  },{
    "name":"indexChange"
  },{
    "name":"RateObservation",
    "documentation":"A type defining parameters associated with an individual observation or fixing. This type forms part of the cashflow representation of a stream.",
    "relationships":["resetDate[0..1]","adjustedFixingDate[0..1]","observedRate[0..1]","treatedRate[0..1]","observationWeight[1..1]","rateReference->RateReference[0..1]","forecastRate[0..1]","treatedForecastRate[0..1]"]
  },{
    "name":"pricingStructure"
  },{
    "name":"IndexName",
    "extend":"Scheme"
  },{
    "name":"SingleUnderlyer",
    "documentation":"A type describing a single underlyer",
    "relationships":["underlyingAsset->Asset[1..1]","openUnits[0..1]","dividendPayout->DividendPayout[0..1]","couponPayment->PendingPayment[0..1]","averageDailyTradingVolume->AverageDailyTradingVolumeLimit[0..1]","depositoryReceipt[0..1]"]
  },{
    "name":"InterestMethodEnum",
    "documentation":"The type of method.",
    "characteristics":{
      "enumeration":[{
        "value":"PhysicalSettlement"
      },{
        "value":"RollIn"
      }]
    },
    "extend":"token"
  },{
    "name":"TriggerTypeEnum",
    "documentation":"The specification of whether an option would trigger or expire depending upon whether the spot rate is above or below the barrier rate.",
    "characteristics":{
      "enumeration":[{
        "value":"EqualOrLess"
      },{
        "value":"EqualOrGreater"
      },{
        "value":"Equal"
      },{
        "value":"Less"
      },{
        "value":"Greater"
      }]
    },
    "extend":"token"
  },{
    "name":"CommodityMetalBrandManager",
    "extend":"Scheme"
  },{
    "name":"CommodityMetalShape",
    "extend":"Scheme"
  },{
    "name":"AdjustableOrRelativeDates",
    "documentation":"A type giving the choice between defining a series of dates as an explicit list of dates together with applicable adjustments or as relative to some other series of (anchor) dates.",
    "relationships":["adjustableDates->AdjustableDates[1..1]","relativeDates->RelativeDates[1..1]"]
  },{
    "name":"ZeroRateCurve",
    "documentation":"A curve used to model a set of zero-coupon interest rates.",
    "relationships":["compoundingFrequency->CompoundingFrequency[1..1]","rateCurve->TermCurve[1..1]"]
  },{
    "name":"differenceType",
    "documentation":"The ISDA defined value indicating the nature of a difference.",
    "characteristics":{
      "enumeration":[{
        "value":"Value"
      },{
        "value":"Reference"
      },{
        "value":"Structure"
      },{
        "value":"Scheme"
      }]
    },
    "extend":"token"
  },{
    "name":"paymentDate",
    "extend":"anySimpleType"
  },{
    "name":"failureToPayPrincipal",
    "extend":"anySimpleType"
  },{
    "name":"email",
    "extend":"string"
  },{
    "name":"ResetDates",
    "documentation":"A type defining the parameters used to generate the reset dates schedule and associated fixing dates. The reset dates are determined relative to the calculation periods schedules dates.",
    "relationships":["calculationPeriodDatesReference->CalculationPeriodDatesReference[1..1]","resetRelativeTo[0..1]","initialFixingDate->RelativeDateOffset[0..1]","fixingDates->RelativeDateOffset[1..1]","rateCutOffDaysOffset->Offset[0..1]","resetFrequency->ResetFrequency[1..1]","resetDatesAdjustments->BusinessDayAdjustments[1..1]"]
  },{
    "name":"NonNegativePayment",
    "documentation":"A complex type to specify non negative payments.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentDate->AdjustableOrRelativeDate[1..1]","paymentAmount->NonNegativeMoney[1..1]"],
    "extend":"PaymentBaseExtended"
  },{
    "name":"X509Data"
  },{
    "name":"FxConversion",
    "relationships":["amountRelativeTo->AmountReference[1..1]","fxRate->FxRate[1..]"]
  },{
    "name":"fxDigitalOption"
  },{
    "name":"AdditionalEvent",
    "documentation":"Abstract base type for an extension/substitution point to customize FpML and add additional events.",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]"],
    "extend":"AbstractEvent"
  },{
    "name":"InterestCalculation",
    "documentation":"Specifies the calculation method of the interest rate leg of the return swap. Includes the floating or fixed rate calculation definitions, along with the determination of the day count fraction.",
    "relationships":["floatingRateCalculation->FloatingRateCalculation[1..1]","fixedRate[1..1]","dayCountFraction->DayCountFraction[1..1]","compounding->Compounding[0..1]","interpolationMethod->InterpolationMethod[1..1]","interpolationPeriod[0..1]"],
    "extend":"InterestAccrualsMethod"
  },{
    "name":"cashSettlement",
    "extend":"anySimpleType"
  },{
    "name":"net",
    "extend":"anySimpleType"
  },{
    "name":"minimumFuturesContracts",
    "extend":"nonNegativeInteger"
  },{
    "name":"deliveryDateYearMonth",
    "extend":"anySimpleType"
  },{
    "name":"BullionDeliveryLocation",
    "documentation":"A scheme defining where bullion is to be delivered for a Bullion Transaction.",
    "extend":"Scheme"
  },{
    "name":"TradeChangeContent",
    "documentation":"A structure describing a non-negotiated trade resulting from a market event.",
    "relationships":["oldTradeIdentifier->PartyTradeIdentifier[1..1]","oldTrade->Trade[1..1]","trade->Trade[1..1]","effectiveDate[1..1]","changeEvent->ChangeEvent[1..1]","payment->Payment[0..1]"]
  },{
    "name":"coalPhysicalLeg"
  },{
    "name":"CoalDelivery",
    "documentation":"The physical delivery conditions for coal.",
    "relationships":["deliveryPoint->CoalDeliveryPoint[1..1]","deliveryAtSource[1..1]","quantityVariationAdjustment[1..1]","transportationEquipment->CoalTransportationEquipment[0..1]","risk->CommodityDeliveryRisk[0..1]"]
  },{
    "name":"ElectricityDeliveryFirm",
    "documentation":"The physical delivery obligation options specific to a firm transaction.",
    "relationships":["forceMajeure[1..1]"]
  },{
    "name":"MandatoryEarlyTermination",
    "documentation":"A type to define an early termination provision for which exercise is mandatory.",
    "relationships":["mandatoryEarlyTerminationDate->AdjustableDate[1..1]","calculationAgent->CalculationAgent[1..1]","cashSettlement->CashSettlement[1..1]","mandatoryEarlyTerminationAdjustedDates->MandatoryEarlyTerminationAdjustedDates[0..1]"]
  },{
    "name":"componentDescription",
    "extend":"anySimpleType"
  },{
    "name":"submittedForConfirmation",
    "extend":"anySimpleType"
  },{
    "name":"FloatingAmountEvents",
    "relationships":["failureToPayPrincipal[0..1]","interestShortfall->InterestShortFall[0..1]","writedown[0..1]","impliedWritedown[0..1]","floatingAmountProvisions->FloatingAmountProvisions[0..1]","additionalFixedPayments->AdditionalFixedPayments[0..1]"]
  },{
    "name":"PhysicalSettlementPeriod",
    "relationships":["businessDaysNotSpecified[1..1]","businessDays[1..1]","maximumBusinessDays[1..1]"]
  },{
    "name":"FxBoundary",
    "documentation":"Describes a precise boundary value.",
    "relationships":["inclusive->anyType[1..1]","exclusive->anyType[1..1]"]
  },{
    "name":"Validation",
    "documentation":"A reference identifying a rule within a validation scheme.",
    "extend":"Scheme"
  },{
    "name":"KeyName"
  },{
    "name":"FacilityType",
    "documentation":"A type describing the type of loan facility.",
    "extend":"Scheme"
  },{
    "name":"dataCorrection",
    "extend":"anySimpleType"
  },{
    "name":"consentRefused"
  },{
    "name":"SignaturePropertiesType",
    "relationships":["SignatureProperty->SignaturePropertyType[1..]"]
  },{
    "name":"surname",
    "extend":"string"
  },{
    "name":"X509SerialNumber",
    "extend":"decimal"
  },{
    "name":"firstRegularPeriodStartDate",
    "extend":"anySimpleType"
  },{
    "name":"feeAmount",
    "extend":"anySimpleType"
  },{
    "name":"worldscaleRate",
    "extend":"anySimpleType"
  },{
    "name":"PositiveDecimal",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"FxMultipleExercise",
    "documentation":"Describes the limits on the size of notional when multiple exercise is allowed.",
    "relationships":["minimumNotionalAmount->NonNegativeMoney[0..1]","maximumNotionalAmount->NonNegativeMoney[0..1]"]
  },{
    "name":"AffectedTransactions",
    "relationships":["trade->Trade[1..1]","tradeReference->PartyTradeIdentifiers[1..1]"]
  },{
    "name":"PartyRole",
    "documentation":"A type describing a role played by a party in one or more transactions. Examples include roles such as guarantor, custodian, confirmation service provider, etc. This can be extended to provide custom roles.",
    "extend":"Scheme"
  },{
    "name":"CreditEventNotification",
    "documentation":"A message type defining the ISDA defined Credit Event Notice. ISDA defines it as an irrevocable notice from a Notifying Party to the other party that describes a Credit Event that occurred. A Credit Event Notice must contain detail of the facts relevant to the determination that a Credit Event has occurred.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","creditEventNotice->CreditEventNoticeDocument[1..1]","party->Party[2..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"dealtCurrency",
    "characteristics":{
      "enumeration":[{
        "value":"ExchangedCurrency1"
      },{
        "value":"ExchangedCurrency2"
      }]
    },
    "extend":"token"
  },{
    "name":"rate",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"NotificationMessage",
    "documentation":"A type defining the basic content for a message sent to inform another system that some 'business event' has occured. Notifications are not expected to be replied to.",
    "relationships":["header->NotificationMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]"],
    "extend":"Message"
  },{
    "name":"StubCalculationPeriodAmount",
    "documentation":"A type defining how the initial or final stub calculation period amounts is calculated. For example, the rate to be applied to the initial or final stub calculation period may be the linear interpolation of two different tenors for the floating rate index specified in the calculation period amount component, e.g. A two month stub period may used the linear interpolation of a one month and three month floating rate. The different rate tenors would be specified in this component. Note that a maximum of two rate tenors can be specified. If a stub period uses a single index tenor and this is the same as that specified in the calculation period amount component then the initial stub or final stub component, as the case may be, must not be included.",
    "relationships":["calculationPeriodDatesReference->CalculationPeriodDatesReference[1..1]","initialStub->StubValue[1..1]","finalStub->StubValue[0..1]","finalStub->StubValue[1..1]"]
  },{
    "name":"RateIndex",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","floatingRateIndex->FloatingRateIndex[1..1]","term->Period[1..1]","paymentFrequency->Period[0..1]","dayCountFraction->DayCountFraction[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"notionalStepRate",
    "extend":"anySimpleType"
  },{
    "name":"ReturnSwapAmount",
    "documentation":"Specifies, in relation to each Payment Date, the amount to which the Payment Date relates. For Equity Swaps this element is equivalent to the Equity Amount term as defined in the ISDA 2002 Equity Derivatives Definitions.",
    "relationships":["currency->IdentifiedCurrency[1..1]","determinationMethod->DeterminationMethod[1..1]","currencyReference->IdentifiedCurrencyReference[1..1]","referenceAmount->ReferenceAmount[1..1]","formula->Formula[1..1]","encodedDescription[1..1]","calculationDates->AdjustableRelativeOrPeriodicDates[0..1]","cashSettlement[1..1]","optionsExchangeDividends[0..1]","additionalDividends[0..1]","allDividends[0..1]"],
    "extend":"LegAmount"
  },{
    "name":"MarketDisruptionEvent",
    "documentation":"A Market Disruption Event.",
    "extend":"Scheme"
  },{
    "name":"TermDeposit",
    "documentation":"A class defining the content model for a term deposit product.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","startDate[1..1]","maturityDate[1..1]","tenorName[1..1]","tenorPeriod->Period[1..1]","principal->PositiveMoney[1..1]","fixedRate[1..1]","dayCountFraction->DayCountFraction[1..1]","features->TermDepositFeatures[0..1]","interest->Money[0..1]","payment->Payment[0..]"],
    "extend":"Product"
  },{
    "name":"compoundingMethod",
    "documentation":"The compounding calculation method",
    "characteristics":{
      "enumeration":[{
        "value":"Flat"
      },{
        "value":"None"
      },{
        "value":"Straight"
      },{
        "value":"SpreadExclusive"
      }]
    },
    "extend":"token"
  },{
    "name":"maximumExclusive",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"FxLinkedNotionalAmount",
    "documentation":"A type to describe the cashflow representation for fx linked notionals.",
    "relationships":["resetDate[0..1]","adjustedFxSpotFixingDate[0..1]","observedFxSpotRate[0..1]","notionalAmount[0..1]"]
  },{
    "name":"optionsPriceValuation",
    "extend":"anySimpleType"
  },{
    "name":"exchangeTradedFund"
  },{
    "name":"ChangeEvent",
    "documentation":"Abstract base type for non-negotiated trade change descriptions",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]"],
    "extend":"AbstractEvent"
  },{
    "name":"maximumDaysOfPostponement",
    "extend":"nonNegativeInteger"
  },{
    "name":"Schedule",
    "documentation":"A type defining a currency amount or a currency amount schedule.",
    "relationships":["initialValue[1..1]","step->Step[0..]"]
  },{
    "name":"vintage",
    "extend":"anySimpleType"
  },{
    "name":"breakFeeRate",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"ImplementationSpecificationVersion",
    "extend":"Scheme"
  },{
    "name":"Period",
    "documentation":"A type defining a date (referred to as the derived date) as a relative offset from another date (referred to as the anchor date) plus optional date adjustments.",
    "relationships":["periodMultiplier[1..1]","period[1..1]"]
  },{
    "name":"clearingStatus"
  },{
    "name":"KeyInfoType",
    "relationships":["KeyName[1..1]","KeyValue->KeyValueType[1..1]","RetrievalMethod->RetrievalMethodType[1..1]","X509Data->X509DataType[1..1]","PGPData->PGPDataType[1..1]","SPKIData->SPKIDataType[1..1]","MgmtData[1..1]"]
  },{
    "name":"CommodityPayRelativeToEnum",
    "documentation":"The Commodity specification of whether payments occur relative e.g. to the Trade Date, or the end of the month, etc.",
    "extend":"anySimpleType"
  },{
    "name":"intermediarySequenceNumber",
    "extend":"nonNegativeInteger"
  },{
    "name":"DeliveryTypeEnum",
    "characteristics":{
      "enumeration":[{
        "value":"Firm"
      },{
        "value":"Interruptible"
      }]
    },
    "extend":"token"
  },{
    "name":"fixedPaymentAmount",
    "extend":"anySimpleType"
  },{
    "name":"deliverableByBarge",
    "extend":"anySimpleType"
  },{
    "name":"Offset",
    "documentation":"A type defining a date (referred to as the derived date) as a relative offset from another date (referred to as the anchor date) plus optional date adjustments.",
    "relationships":["periodMultiplier[1..1]","period[1..1]","dayType[0..1]"],
    "extend":"Period"
  },{
    "name":"adjustedStartDate",
    "extend":"anySimpleType"
  },{
    "name":"fixedRate",
    "extend":"anySimpleType"
  },{
    "name":"MultipleExercise",
    "documentation":"A type defining multiple exercises. As defining in the 2000 ISDA Definitions, Section 12.4. Multiple Exercise, the buyer of the option has the right to exercise all or less than all the unexercised notional amount of the underlying swap on one or more days in the exercise period, but on any such day may not exercise less than the minimum notional amount or more than the maximum notional amount, and if an integral multiple amount is specified, the notional exercised must be equal to or, be an integral multiple of, the integral multiple amount.",
    "relationships":["notionalReference->NotionalReference[0..]","integralMultipleAmount[0..1]","minimumNotionalAmount[1..1]","minimumNumberOfOptions[1..1]","maximumNotionalAmount[1..1]","maximumNumberOfOptions[1..1]"]
  },{
    "name":"minimumNumberOfOptions",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"CancelableProvisionAdjustedDates",
    "documentation":"A type to define the adjusted dates for a cancelable provision on a swap transaction.",
    "relationships":["cancellationEvent->CancellationEvent[1..]"]
  },{
    "name":"MessageAddress",
    "documentation":"The data type used for identifying a message address.",
    "extend":"Scheme"
  },{
    "name":"SharedAmericanExercise",
    "documentation":"TBA",
    "relationships":["commencementDate->AdjustableOrRelativeDate[1..1]","expirationDate->AdjustableOrRelativeDate[1..1]","latestExerciseTime->BusinessCenterTime[1..1]","latestExerciseTimeDetermination->DeterminationMethod[1..1]"],
    "extend":"Exercise"
  },{
    "name":"ProtectionTerms",
    "relationships":["calculationAmount->Money[1..1]","creditEvents->CreditEvents[0..1]","obligations->Obligations[0..1]","floatingAmountEvents->FloatingAmountEvents[0..1]"]
  },{
    "name":"ElectricityDeliveryType",
    "relationships":["firm->ElectricityDeliveryFirm[1..1]","nonFirm[1..1]","systemFirm->ElectricityDeliverySystemFirm[1..1]","unitFirm->ElectricityDeliveryUnitFirm[1..1]"]
  },{
    "name":"SupervisorRegistration",
    "documentation":"Provides information about a regulator or other supervisory body that an organization is registered with.",
    "relationships":["supervisoryBody->SupervisoryBody[1..1]","registrationNumber->RegulatorId[0..1]"]
  },{
    "name":"basketPercentage",
    "documentation":"A type defining a percentage specified as decimal from 0 to 1. A percentage of 5% would be represented as 0.05.",
    "extend":"decimal"
  },{
    "name":"calorificValue",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"AdditionalPaymentAmount",
    "documentation":"Specifies the amount of the fee along with, when applicable, the formula that supports its determination.",
    "relationships":["paymentAmount->NonNegativeMoney[0..1]","formula->Formula[0..1]"]
  },{
    "name":"endDate",
    "extend":"anySimpleType"
  },{
    "name":"CashflowType",
    "documentation":"A coding scheme used to describe the type or purpose of a cash flow or cash flow component.",
    "extend":"Scheme"
  },{
    "name":"CoalStandardQualitySchedule",
    "documentation":"The quality attributes of the coal to be delivered, specified on a periodic basis.",
    "relationships":["StandardQualityStep->CoalStandardQuality[1..]","deliveryPeriodsReference->CalculationPeriodsReference[1..1]","deliveryPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]"]
  },{
    "name":"dividendSwapTransactionSupplement"
  },{
    "name":"LagReference",
    "documentation":"Allows a lag to reference one already defined elsewhere in the trade.",
    "extend":"Reference"
  },{
    "name":"basePath",
    "extend":"anySimpleType"
  },{
    "name":"NonNegativeStep",
    "documentation":"A type defining a step date and non-negative step value pair. This step definitions are used to define varying rate or amount schedules, e.g. a notional amortization or a step-up coupon schedule.",
    "relationships":["stepDate[1..1]","stepValue[1..1]"],
    "extend":"StepBase"
  },{
    "name":"PricingStructurePoint",
    "documentation":"A single valued point with a set of coordinates that define an arbitrary number of indentifying indexes (0 or more). Note that the collection of coordinates/coordinate references for a PricingStructurePoint must not define a given dimension (other than \"generic\") more than once. This is to avoid ambiguity.",
    "relationships":["coordinate->PricingDataPointCoordinate[1..1]","coordinateReference->PricingDataPointCoordinateReference[1..1]","underlyingAsset->Asset[1..1]","underlyingAssetReference->AssetReference[0..1]","value[0..1]","measureType->AssetMeasureType[0..1]","quoteUnits->PriceQuoteUnits[0..1]","side[0..1]","currency->Currency[0..1]","currencyType->ReportingCurrencyType[0..1]","timing->QuoteTiming[0..1]","businessCenter->BusinessCenter[1..1]","exchangeId->ExchangeId[1..1]","informationSource->InformationSource[0..]","pricingModel->PricingModel[0..1]","time[0..1]","valuationDate[0..1]","expiryTime[0..1]","cashflowType->CashflowType[0..1]"]
  },{
    "name":"IdentifiedDate",
    "documentation":"A date which can be referenced elsewhere.",
    "extend":"date"
  },{
    "name":"TradeNotionalChange",
    "documentation":"A structure describing a change to the trade notional.",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]","tradeIdentifier->PartyTradeIdentifier[1..]","originalTrade->Trade[1..1]","agreementDate[1..1]","executionDateTime->ExecutionDateTime[0..1]","effectiveDate[1..1]","payment->Payment[0..]","changeInNotionalAmount->NonNegativeMoney[1..]","outstandingNotionalAmount->NonNegativeMoney[1..]","changeInNumberOfOptions[1..1]","outstandingNumberOfOptions[1..1]","changeInNumberOfUnits[1..1]","outstandingNumberOfUnits[1..1]"],
    "extend":"TradeChangeBase"
  },{
    "name":"PendingPayment",
    "documentation":"A structure representing a pending dividend or coupon payment.",
    "relationships":["paymentDate[1..1]","amount->Money[1..1]","accruedInterest->Money[0..1]"],
    "extend":"PaymentBase"
  },{
    "name":"RequestAllocationRetracted",
    "documentation":"A message withdrawing a request that a trade be split among several accounts.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","blockTradeIdentifier->TradeIdentifier[0..1]","allocations->Allocations[0..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"DisruptionFallbacksEnum",
    "documentation":"The specification of how disruption fallbacks will be represented.",
    "characteristics":{
      "enumeration":[{
        "value":"AsSpecifiedInMasterAgreement"
      },{
        "value":"AsSpecifiedInConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"initialRate",
    "extend":"anySimpleType"
  },{
    "name":"accruedInterest",
    "extend":"anySimpleType"
  },{
    "name":"AccountType",
    "documentation":"The data type used for account type.",
    "extend":"Scheme"
  },{
    "name":"OptionStrike",
    "documentation":"A type for defining the strike price for an equity option. The strike price is either: (i) in respect of an index option transaction, the level of the relevant index specified or otherwise determined in the transaction; or (ii) in respect of a share option transaction, the price per share specified or otherwise determined in the transaction. This can be expressed either as a percentage of notional amount or as an absolute value.",
    "relationships":["strikePrice[1..1]","strikePercentage[1..1]","currency->Currency[0..1]"],
    "extend":"OptionNumericStrike"
  },{
    "name":"CommodityQuantityFrequency",
    "documentation":"A type for defining the frequency at which the Notional Quantity is deemed to apply for purposes of calculating the Total Notional Quantity.",
    "extend":"Scheme"
  },{
    "name":"requestRetransmission"
  },{
    "name":"valueDate",
    "extend":"anySimpleType"
  },{
    "name":"ParametricAdjustment",
    "documentation":"An adjustment used to accommodate a parameter of the input trade, e.g. the strike.",
    "relationships":["name[1..1]","inputUnits->PriceQuoteUnits[0..1]","datapoint->ParametricAdjustmentPoint[1..]"]
  },{
    "name":"InterestCalculationTypeEnum",
    "documentation":"The type of calculation.",
    "characteristics":{
      "enumeration":[{
        "value":"Simple"
      },{
        "value":"Compounding"
      }]
    },
    "extend":"token"
  },{
    "name":"roundingDirection",
    "documentation":"The method of rounding a fractional number.",
    "characteristics":{
      "enumeration":[{
        "value":"Up"
      },{
        "value":"Down"
      },{
        "value":"Nearest"
      }]
    },
    "extend":"token"
  },{
    "name":"FinancialSwapLeg",
    "documentation":"The common components of a financially settled leg of a Commodity Swap. This is an abstract type and should be extended by commodity-specific types.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]"],
    "extend":"CommoditySwapLeg"
  },{
    "name":"ValuationSetDetail",
    "documentation":"The amount of detail provided in the valuation set, e.g. is market environment data provided, are risk definitions provided, etc.",
    "extend":"Scheme"
  },{
    "name":"maximumInclusive",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"long",
    "extend":"integer"
  },{
    "name":"novationTradeDate",
    "extend":"anySimpleType"
  },{
    "name":"Strategy",
    "documentation":"A type defining a group of products making up a single trade.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","strategyComponentIdentifier->StrategyComponentIdentification[0..]","premiumProductReference->ProductReference[0..1]","product->Product[1..]"],
    "extend":"Product"
  },{
    "name":"secured",
    "extend":"anySimpleType"
  },{
    "name":"AdjustableDatesOrRelativeDateOffset",
    "documentation":"A type for defining a series of dates, either as a list of adjustable dates, or a as a repeating sequence from a base date",
    "relationships":["adjustableDates->AdjustableDates[1..1]","relativeDate->RelativeDateOffset[1..1]"]
  },{
    "name":"Empty",
    "documentation":"A special type meant to be used for elements with no content and no attributes."
  },{
    "name":"adjustedRelevantSwapEffectiveDate",
    "extend":"anySimpleType"
  },{
    "name":"changeInLaw",
    "extend":"anySimpleType"
  },{
    "name":"physicalSettlement",
    "extend":"anySimpleType"
  },{
    "name":"simpleIrSwap"
  },{
    "name":"RelevantUnderlyingDateReference",
    "documentation":"Reference to relevant underlying date.",
    "extend":"Reference"
  },{
    "name":"notSovereignLender",
    "extend":"anySimpleType"
  },{
    "name":"TransformType",
    "relationships":["XPath[1..1]"]
  },{
    "name":"TouchConditionEnum",
    "documentation":"The specification of, for American-style digitals, whether the trigger level must be touched or not touched.",
    "characteristics":{
      "enumeration":[{
        "value":"Touch"
      },{
        "value":"Notouch"
      }]
    },
    "extend":"token"
  },{
    "name":"writtenConfirmation",
    "extend":"anySimpleType"
  },{
    "name":"masterAgreementDate",
    "extend":"anySimpleType"
  },{
    "name":"PremiumQuoteBasisEnum",
    "documentation":"The specification of how the premium for an FX OTC option is quoted.",
    "characteristics":{
      "enumeration":[{
        "value":"PercentageOfCallCurrencyAmount"
      },{
        "value":"PercentageOfPutCurrencyAmount"
      },{
        "value":"CallCurrencyPerPutCurrency"
      },{
        "value":"PutCurrencyPerCallCurrency"
      },{
        "value":"Explicit"
      }]
    },
    "extend":"token"
  },{
    "name":"allocationsSubmitted",
    "extend":"anySimpleType"
  },{
    "name":"PGPData"
  },{
    "name":"notDomesticIssuance",
    "extend":"anySimpleType"
  },{
    "name":"spotPrice",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"PaymentDetail",
    "relationships":["paymentDate->AdjustableOrRelativeDate[0..1]","paymentAmount->Money[1..1]","paymentRule->PaymentRule[1..1]","paymentAmount->Money[0..1]"],
    "extend":"PaymentBase"
  },{
    "name":"Trade",
    "documentation":"A type defining an FpML trade.",
    "relationships":["tradeHeader->TradeHeader[1..1]","product->Product[1..1]","otherPartyPayment->Payment[0..]","brokerPartyReference->PartyReference[0..]","calculationAgent->CalculationAgent[0..1]","calculationAgentBusinessCenter->BusinessCenter[0..1]","determiningParty->PartyReference[0..2]","hedgingParty->PartyReference[0..2]","collateral->Collateral[0..1]","documentation->Documentation[0..1]","governingLaw->GoverningLaw[0..1]","allocations->Allocations[0..1]"]
  },{
    "name":"ObligationAccelerationEvent",
    "extend":"CreditEvent"
  },{
    "name":"lastNotionalStepDate",
    "extend":"anySimpleType"
  },{
    "name":"Rounding",
    "documentation":"A type defining a rounding direction and precision to be used in the rounding of a rate.",
    "relationships":["roundingDirection[1..1]","precision[1..1]"]
  },{
    "name":"priceMaterialityPercentage",
    "extend":"anySimpleType"
  },{
    "name":"PortfolioConstituentReference",
    "documentation":"A structure used to group together individual messages that can be acted on at a group level.",
    "relationships":["portfolioName->PortfolioName[1..1]","sequenceNumber[1..1]"],
    "extend":"PortfolioReferenceBase"
  },{
    "name":"prePayment",
    "extend":"anySimpleType"
  },{
    "name":"EventStatusResponse",
    "documentation":"A type defining the content model for a message normally generated in response to a requestEventStatus request.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","statusItem->EventStatusItem[1..]","party->Party[1..]","account->Account[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"mortgage"
  },{
    "name":"CutName",
    "documentation":"Allows for an expiryDateTime cut to be described by name.",
    "extend":"Scheme"
  },{
    "name":"duration",
    "extend":"anySimpleType"
  },{
    "name":"DerivativeCalculationProcedure",
    "documentation":"A description of how a numerical derivative is computed.",
    "relationships":["method->DerivativeCalculationMethod[0..1]","perturbationAmount[0..1]","averaged[1..1]","perturbationType->PerturbationType[0..1]","derivativeFormula[0..1]","replacementMarketInput->PricingStructureReference[1..1]"]
  },{
    "name":"Clearing",
    "documentation":"A structure describing a trade registration event that is part of a clearing process.",
    "relationships":["submitted->TradeWrapper[1..1]","cleared->TradeWrapper[2..2]"]
  },{
    "name":"averagingMethod",
    "documentation":"The method of calculation to be used when averaging rates. Per ISDA 2000 Definitions, Section 6.2. Certain Definitions Relating to Floating Amounts.",
    "characteristics":{
      "enumeration":[{
        "value":"Unweighted"
      },{
        "value":"Weighted"
      }]
    },
    "extend":"token"
  },{
    "name":"tradeChangeAdviceRetracted"
  },{
    "name":"deliveryType",
    "characteristics":{
      "enumeration":[{
        "value":"Firm"
      },{
        "value":"Interruptible"
      }]
    },
    "extend":"token"
  },{
    "name":"DateRelativeToCalculationPeriodDates",
    "documentation":"A type to provide the ability to point to multiple payment nodes in the document through the unbounded paymentDatesReference.",
    "relationships":["calculationPeriodDatesReference->CalculationPeriodDatesReference[1..]"]
  },{
    "name":"FxSwapLeg",
    "documentation":"A type defining the details for one of the transactions in an FX swap.",
    "relationships":["tradeIdentifierReference->PartyTradeIdentifierReference[0..1]","exchangedCurrency1->Payment[1..1]","exchangedCurrency2->Payment[1..1]","dealtCurrency[0..1]","tenorName[1..1]","tenorPeriod->Period[1..1]","valueDate[1..1]","currency1ValueDate[1..1]","currency2ValueDate[1..1]","exchangeRate->ExchangeRate[1..1]","nonDeliverableSettlement->FxCashSettlement[0..1]"],
    "extend":"Leg"
  },{
    "name":"TermPoint",
    "documentation":"A value point that can have a time dimension. Allows bid, mid, ask, and spread values to be represented.",
    "relationships":["term->TimeDimension[1..1]","bid[0..1]","mid[0..1]","ask[0..1]","spreadValue[0..1]","definition->AssetReference[0..1]"]
  },{
    "name":"publicationDate",
    "extend":"anySimpleType"
  },{
    "name":"ExerciseStyleEnum",
    "documentation":"The specification of how an OTC option will be exercised.",
    "characteristics":{
      "enumeration":[{
        "value":"American"
      },{
        "value":"Bermuda"
      },{
        "value":"European"
      }]
    },
    "extend":"token"
  },{
    "name":"StubValue",
    "documentation":"A type defining how a stub calculation period amount is calculated and the start and end date of the stub. A single floating rate tenor different to that used for the regular part of the calculation periods schedule may be specified, or two floating rate tenors many be specified. If two floating rate tenors are specified then Linear Interpolation (in accordance with the 2000 ISDA Definitions, Section 8.3 Interpolation) is assumed to apply. Alternatively, an actual known stub rate or stub amount may be specified.",
    "relationships":["floatingRate->FloatingRate[1..2]","stubRate[1..1]","stubAmount->Money[1..1]"]
  },{
    "name":"observationWeight",
    "extend":"nonNegativeInteger"
  },{
    "name":"ExecutionVenueType",
    "documentation":"A type used to represent the type of market where a trade can be executed.",
    "extend":"Scheme"
  },{
    "name":"mutualFund"
  },{
    "name":"contractReference",
    "extend":"anySimpleType"
  },{
    "name":"TradeDifference",
    "documentation":"A type used to record the details of a difference between two business objects/",
    "relationships":["differenceType[1..1]","differenceSeverity[1..1]","element[1..1]","basePath[0..1]","baseValue[0..1]","otherPath[0..1]","otherValue[0..1]","missingElement[0..]","extraElement[0..]","message[1..1]"]
  },{
    "name":"stubPeriodType",
    "documentation":"Element to define how to deal with a none standard calculation period within a swap stream.",
    "characteristics":{
      "enumeration":[{
        "value":"ShortInitial"
      },{
        "value":"ShortFinal"
      },{
        "value":"LongInitial"
      },{
        "value":"LongFinal"
      }]
    },
    "extend":"token"
  },{
    "name":"EquityForward",
    "documentation":"A type for defining equity forwards.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","equityEffectiveDate[0..1]","underlyer->Underlyer[1..1]","notional->NonNegativeMoney[0..1]","equityExercise->EquityExerciseValuationSettlement[1..1]","feature->OptionFeatures[0..1]","fxFeature->FxFeature[0..1]","strategyFeature->StrategyFeature[0..1]","dividendConditions->DividendConditions[0..1]","methodOfAdjustment[1..1]","extraordinaryEvents->ExtraordinaryEvents[1..1]","forwardPrice->NonNegativeMoney[0..1]"],
    "extend":"EquityDerivativeLongFormBase"
  },{
    "name":"AgreementVersion",
    "extend":"Scheme"
  },{
    "name":"OilProductType",
    "documentation":"The type of physical commodity product to be delivered.",
    "extend":"Scheme"
  },{
    "name":"executionAdviceAcknowledgement"
  },{
    "name":"cash"
  },{
    "name":"CapFloor",
    "documentation":"A type defining an interest rate cap, floor, or cap/floor strategy (e.g. collar) product.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","capFloorStream->InterestRateStream[1..1]","premium->Payment[0..]","additionalPayment->Payment[0..]","earlyTerminationProvision->EarlyTerminationProvision[0..1]"],
    "extend":"Product"
  },{
    "name":"Currency",
    "documentation":"The code representation of a currency or fund. By default it is a valid currency code as defined by the ISO standard 4217 - Codes for representation of currencies and funds http://www.iso.org/iso/en/prods-services/popstds/currencycodeslist.html.",
    "extend":"Scheme"
  },{
    "name":"ExceptionMessageHeader",
    "documentation":"A type defining the content model for an exception message header.",
    "relationships":["messageId->MessageId[1..1]","inReplyTo->MessageId[0..1]","sentBy->MessageAddress[1..1]","sendTo->MessageAddress[0..]","copyTo->MessageAddress[0..]","creationTimestamp[1..1]","expiryTimestamp[0..1]","implementationSpecification->ImplementationSpecification[0..1]","partyMessageInformation->PartyMessageInformation[0..]","Signature->SignatureType[0..]"],
    "extend":"MessageHeader"
  },{
    "name":"treatedForecastRate",
    "extend":"anySimpleType"
  },{
    "name":"ReturnSwapBase",
    "documentation":"A type describing return swaps including return swaps (long form), total return swaps, and variance swaps.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","returnSwapLeg->DirectionalLeg[1..]","principalExchangeFeatures->PrincipalExchangeFeatures[0..1]"],
    "extend":"Product"
  },{
    "name":"splitTicket",
    "extend":"anySimpleType"
  },{
    "name":"Product",
    "documentation":"The base type which all FpML products extend.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]"]
  },{
    "name":"GenericProduct",
    "documentation":"Simple product representation providing key information about a variety of different products. Generic products - for use in Transparency reporting to define a product that represents an OTC derivative transaction whose economics are not fully described using an FpML schema. In other views, generic products are present for convenience to support internal messaging and workflows that are cross-product. Generic products are not full trade representations as such they are not intended to be used for confirming trades.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","multiLeg[0..1]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","counterpartyReference->PartyReference[0..2]","premium->SimplePayment[0..1]","effectiveDate->AdjustableDate2[1..1]","expirationDate->AdjustableDate2[0..1]","terminationDate->AdjustableDate2[1..1]","underlyer->TradeUnderlyer2[0..]","notional->CashflowNotional[0..]","optionType->OptionType[0..1]","settlementCurrency->IdentifiedCurrency[0..]","dayCountFraction->DayCountFraction[0..]"],
    "extend":"Product"
  },{
    "name":"RetrievalMethod"
  },{
    "name":"NMTOKENS"
  },{
    "name":"settlementLevel",
    "characteristics":{
      "enumeration":[{
        "value":"Cumulative"
      },{
        "value":"Average"
      },{
        "value":"Mximum"
      },{
        "value":"Minimum"
      }]
    },
    "extend":"token"
  },{
    "name":"eventStatusException"
  },{
    "name":"CommodityAmericanExercise",
    "documentation":"A type for defining exercise procedures associated with an American style exercise of a commodity option.",
    "relationships":["exercisePeriod->CommodityExercisePeriods[1..1]","exercisePeriod->CommodityExercisePeriods[1..]","exerciseFrequency->Frequency[0..1]","latestExerciseTime->BusinessCenterTime[1..1]","latestExerciseTimeDetermination->DeterminationMethod[1..1]","expirationTime->BusinessCenterTime[0..1]","multipleExercise->CommodityMultipleExercise[0..1]"],
    "extend":"Exercise"
  },{
    "name":"ProductReference",
    "documentation":"Reference to a full FpML product.",
    "extend":"Reference"
  },{
    "name":"InformationSource",
    "documentation":"A type defining the source for a piece of information (e.g. a rate refix or an fx fixing).",
    "relationships":["rateSource->InformationProvider[1..1]","rateSourcePage->RateSourcePage[0..1]","rateSourcePageHeading[0..1]"]
  },{
    "name":"OptionBaseExtended",
    "documentation":"A complex type to support the credit default swap option.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","premium->Premium[0..1]","exercise->Exercise[1..1]","exerciseProcedure->ExerciseProcedure[1..1]","feature->OptionFeature[0..1]","notionalReference->NotionalAmountReference[1..1]","notionalAmount->Money[1..1]","optionEntitlement[1..1]","entitlementCurrency->Currency[0..1]","numberOfOptions[0..1]","settlementType[0..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementAmount->Money[1..1]","settlementCurrency->Currency[1..1]"],
    "extend":"OptionBase"
  },{
    "name":"CommodityForwardLeg",
    "documentation":"Physically settled leg of a physically settled Bullion Transaction.",
    "extend":"Leg"
  },{
    "name":"commissionAmount",
    "extend":"anySimpleType"
  },{
    "name":"executionNotification"
  },{
    "name":"UnitQuantity",
    "documentation":"A quantity and associated unit.",
    "relationships":["quantityUnit->QuantityUnit[1..1]","quantity[1..1]"]
  },{
    "name":"IndependentAmount",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentDetail->PaymentDetail[1..]"]
  },{
    "name":"indexAnnexVersion",
    "extend":"nonNegativeInteger"
  },{
    "name":"ShareExtraordinaryEventEnum",
    "documentation":"Defines the consequences of extraordinary events relating to the underlying.",
    "characteristics":{
      "enumeration":[{
        "value":"AlternativeObligation"
      },{
        "value":"CancellationAndPayment"
      },{
        "value":"OptionsExchange"
      },{
        "value":"CalculationAgent"
      },{
        "value":"ModifiedCalculationAgent"
      },{
        "value":"PartialCancellationAndPayment"
      },{
        "value":"Component"
      }]
    },
    "extend":"token"
  },{
    "name":"OptionNumericStrike",
    "documentation":"A type for defining the strike price for an option as a numeric value without currency.",
    "relationships":["strikePrice[1..1]","strikePercentage[1..1]"]
  },{
    "name":"GenericDimension",
    "documentation":"A generic (user defined) dimension, e.g. for use in a correlation surface. e.g. a currency, stock, etc. This would take values like USD, GBP, JPY, or IBM, MSFT, etc.",
    "extend":"string"
  },{
    "name":"RateTreatmentEnum",
    "documentation":"The specification of methods for converting rates from one basis to another.",
    "characteristics":{
      "enumeration":[{
        "value":"BondEquivalentYield"
      },{
        "value":"MoneyMarketYield"
      }]
    },
    "extend":"token"
  },{
    "name":"SettlementPeriodsFixedPrice",
    "documentation":"A type defining the Fixed Price applicable to a range or ranges of Settlement Periods.",
    "relationships":["price[1..1]","priceCurrency->Currency[1..1]","priceUnit->QuantityUnit[1..1]","settlementPeriodsReference->SettlementPeriodsReference[1..]"],
    "extend":"FixedPrice"
  },{
    "name":"WeatherIndex",
    "documentation":"A type defining the Weather Index Level or Weather Index Strike Level.",
    "relationships":["quantity[1..1]","unit->QuantityUnit[1..1]"]
  },{
    "name":"CountryCode",
    "documentation":"The code representation of a country or an area of special sovereignty. By default it is a valid 2 character country code as defined by the ISO standard 3166-1 alpha-2 - Codes for representation of countries http://www.niso.org/standards/resources/3166.html.",
    "extend":"token"
  },{
    "name":"VarianceSwap",
    "documentation":"A Variance Swap.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","additionalPayment->ClassifiedPayment[0..]","extraordinaryEvents->ExtraordinaryEvents[0..1]","varianceLeg->VarianceLeg[1..]"],
    "extend":"NettedSwapBase"
  },{
    "name":"SignatureProperties"
  },{
    "name":"averaged",
    "extend":"anySimpleType"
  },{
    "name":"CalculationPeriodDates",
    "documentation":"A type defining the parameters used to generate the calculation period dates schedule, including the specification of any initial or final stub calculation periods. A calculation perod schedule consists of an optional initial stub calculation period, one or more regular calculation periods and an optional final stub calculation period. In the absence of any initial or final stub calculation periods, the regular part of the calculation period schedule is assumed to be between the effective date and the termination date. No implicit stubs are allowed, i.e. stubs must be explicitly specified using an appropriate combination of firstPeriodStateDate, firstRegularPeriodStartDate and lastRegularPeriodEndDate.",
    "relationships":["effectiveDate->AdjustableDate[1..1]","relativeEffectiveDate->AdjustedRelativeDateOffset[1..1]","terminationDate->AdjustableDate[1..1]","relativeTerminationDate->RelativeDateOffset[1..1]","calculationPeriodDatesAdjustments->BusinessDayAdjustments[1..1]","firstPeriodStartDate->AdjustableDate[0..1]","firstRegularPeriodStartDate[0..1]","firstCompoundingPeriodEndDate[0..1]","lastRegularPeriodEndDate[0..1]","stubPeriodType[0..1]","calculationPeriodFrequency->CalculationPeriodFrequency[1..1]"]
  },{
    "name":"Account",
    "documentation":"A generic account that represents any party's account at another party. Parties may be identified by the account at another party.",
    "relationships":["accountId->AccountId[1..]","accountName->AccountName[0..1]","accountType->AccountType[0..1]","accountBeneficiary->PartyReference[1..1]","servicingParty->PartyReference[0..1]","servicingParty->PartyReference[1..1]"]
  },{
    "name":"DividendPeriodDividend",
    "documentation":"A time bounded dividend period, with an expected dividend for each period.",
    "relationships":["unadjustedStartDate->IdentifiedDate[1..1]","unadjustedEndDate->IdentifiedDate[1..1]","dateAdjustments->BusinessDayAdjustments[1..1]","underlyerReference->AssetReference[0..1]","dividend->NonNegativeMoney[1..1]","multiplier[1..1]"],
    "extend":"DividendPeriod"
  },{
    "name":"AveragingObservationList",
    "documentation":"An un ordered list of weighted averaging observations.",
    "relationships":["averagingObservation->WeightedAveragingObservation[1..]"]
  },{
    "name":"SignatureMethodType",
    "relationships":["HMACOutputLength[0..1]"]
  },{
    "name":"IndependentAmountConventionEnum",
    "documentation":"The type of independent amount convention.",
    "characteristics":{
      "enumeration":[{
        "value":"NettedAfterThreshold"
      },{
        "value":"NettedBeforeThreshold"
      },{
        "value":"Segregated"
      }]
    },
    "extend":"token"
  },{
    "name":"negativeInteger",
    "extend":"integer"
  },{
    "name":"additionalAcknowledgements",
    "extend":"anySimpleType"
  },{
    "name":"SensitivitySetDefinitionReference",
    "documentation":"A reference to a sensitivity set definition.",
    "extend":"Reference"
  },{
    "name":"InterestRateStream",
    "documentation":"A type defining the components specifiying an interest rate stream, including both a parametric and cashflow representation for the stream of payments.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","calculationPeriodDates->CalculationPeriodDates[1..1]","paymentDates->PaymentDates[1..1]","resetDates->ResetDates[0..1]","calculationPeriodAmount->CalculationPeriodAmount[1..1]","stubCalculationPeriodAmount->StubCalculationPeriodAmount[0..1]","principalExchanges->PrincipalExchanges[0..1]","cashflows->Cashflows[0..1]","settlementProvision->SettlementProvision[0..1]","formula->Formula[0..1]"],
    "extend":"Leg"
  },{
    "name":"scale",
    "extend":"anySimpleType"
  },{
    "name":"OriginatingEvent",
    "extend":"Scheme"
  },{
    "name":"FxFixing",
    "documentation":"A type that specifies the source for and timing of a fixing of an exchange rate. This is used in the agreement of non-deliverable forward trades as well as various types of FX OTC options that require observations against a particular rate.",
    "relationships":["quotedCurrencyPair->QuotedCurrencyPair[1..1]","fixingDate[0..1]","fxSpotRateSource->FxSpotRateSource[0..1]"]
  },{
    "name":"ReportId",
    "documentation":"A type that can be used to hold an identifier for a report instance.",
    "extend":"Scheme"
  },{
    "name":"referenceBankName",
    "extend":"anySimpleType"
  },{
    "name":"RequestCollateralAllocation",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","isCorrection[1..1]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","serviceName[0..1]","collateralGiverPartyReference->PartyReference[1..1]","collateralAllocation->ProposedCollateralAllocation[1..]","party->Party[1..]","account->Account[0..]"],
    "extend":"CorrectableRequestMessage"
  },{
    "name":"requestClearing"
  },{
    "name":"PositiveSchedule",
    "documentation":"A type defining a currency amount or a currency amount schedule.",
    "relationships":["initialValue[1..1]","step->PositiveStep[0..]"]
  },{
    "name":"Approval",
    "documentation":"A specific approval state in the workflow.",
    "relationships":["type[1..1]","status[1..1]","approver[0..1]"]
  },{
    "name":"QueryParameter",
    "documentation":"A type representing criteria for defining a query portfolio. The criteria are made up of a QueryParameterId, QueryParameterValue and QueryParameterOperator.",
    "relationships":["queryParameterId->QueryParameterId[1..1]","queryParameterValue[0..1]","queryParameterOperator->QueryParameterOperator[0..1]"]
  },{
    "name":"QueryParameterValue",
    "documentation":"A type representing a value corresponding to an identifier for a parameter describing a query portfolio.",
    "extend":"string"
  },{
    "name":"breakFeeElection",
    "documentation":"Defines the fee type.",
    "characteristics":{
      "enumeration":[{
        "value":"FlatFee"
      },{
        "value":"AmortizedFee"
      },{
        "value":"FundingFee"
      },{
        "value":"FlatFeeAndFundingFee"
      },{
        "value":"AmortizedFeeAndFundingFee"
      }]
    },
    "extend":"token"
  },{
    "name":"CommodityOption",
    "documentation":"Commodity Option.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","optionType[1..1]","commodity->Commodity[1..1]","effectiveDate->AdjustableOrRelativeDate[1..1]","terminationDate->AdjustableOrRelativeDate[0..1]","calculationPeriodsSchedule->CommodityCalculationPeriodsSchedule[1..1]","calculationPeriods->AdjustableDates[1..1]","pricingDates->CommodityPricingDates[1..1]","averagingMethod[0..1]","notionalQuantitySchedule->CommodityNotionalQuantitySchedule[1..1]","notionalQuantity->CommodityNotionalQuantity[1..1]","settlementPeriodsNotionalQuantity->CommoditySettlementPeriodsNotionalQuantity[1..]","totalNotionalQuantity[0..1]","quantityReference->QuantityReference[1..1]","exercise->CommodityExercise[1..1]","strikePricePerUnit->NonNegativeMoney[1..1]","strikePricePerUnitSchedule->CommodityStrikeSchedule[1..1]","floatingStrikePricePerUnit->FloatingStrikePrice[1..1]","floatingStrikePricePerUnitSchedule->CommodityCalculationPeriodsSchedule[1..1]","commoditySwap->CommoditySwap[1..1]","commodityForward->CommodityForward[1..1]","physicalExercise->CommodityPhysicalExercise[1..1]","effectiveDate->AdjustableOrRelativeDate[1..1]","weatherCalculationPeriods->WeatherCalculationPeriods[1..1]","weatherCalculationPeriodsReference->CalculationPeriodsReference[1..1]","weatherNotionalAmount->NonNegativeMoney[1..1]","exercise->CommodityExercise[1..1]","weatherIndexStrikeLevel->WeatherIndex[1..1]","calculation->WeatherLegCalculation[1..1]","weatherIndexData->WeatherIndexData[1..1]","premium->CommodityPremium[1..]","commonPricing[0..1]","marketDisruption->CommodityMarketDisruption[0..1]","settlementDisruption[0..1]","rounding->Rounding[0..1]"],
    "extend":"Product"
  },{
    "name":"Approvals",
    "relationships":["approval->Approval[1..]"]
  },{
    "name":"generalFundObligationLiability",
    "extend":"anySimpleType"
  },{
    "name":"HTTPAttachmentReference",
    "documentation":"A special type that allows references to HTTP attachments identified with an HTTP \"Content-ID\" header, as is done with SOAP with Attachments (http://www.w3.org/TR/SOAP-attachments). Unlike with a normal FpML @href, the type is not IDREF, as the target is not identified by an XML @id attribute.",
    "extend":"Reference"
  },{
    "name":"dealer",
    "extend":"anySimpleType"
  },{
    "name":"interestAtRisk",
    "extend":"anySimpleType"
  },{
    "name":"InterestShortFall",
    "relationships":["interestShortfallCap[1..1]","compounding[1..1]","rateSource->FloatingRateIndex[0..1]"]
  },{
    "name":"brokerNotes",
    "extend":"anySimpleType"
  },{
    "name":"ReferencePoolItem",
    "documentation":"This type contains all the constituent weight and reference information.",
    "relationships":["constituentWeight->ConstituentWeight[0..1]","referencePair->ReferencePair[1..1]","protectionTermsReference->ProtectionTermsReference[0..1]","settlementTermsReference->SettlementTermsReference[0..1]"]
  },{
    "name":"FeeLeg",
    "relationships":["initialPayment->InitialPayment[0..1]","singlePayment->SinglePayment[0..]","periodicPayment->PeriodicPayment[0..1]","marketFixedRate[0..1]","paymentDelay[0..1]","initialPoints[0..1]","quotationStyle[0..1]"],
    "extend":"Leg"
  },{
    "name":"perturbationAmount",
    "extend":"anySimpleType"
  },{
    "name":"europeanExercise"
  },{
    "name":"spreadValue",
    "extend":"anySimpleType"
  },{
    "name":"MandatoryEarlyTerminationAdjustedDates",
    "documentation":"A type defining the adjusted dates associated with a mandatory early termination provision.",
    "relationships":["adjustedEarlyTerminationDate[1..1]","adjustedCashSettlementValuationDate[1..1]","adjustedCashSettlementPaymentDate[1..1]"]
  },{
    "name":"creditDefaultSwapOption"
  },{
    "name":"ExchangeTradedFund",
    "documentation":"An exchange traded fund whose price depends on exchange traded constituents.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","relatedExchangeId->ExchangeId[0..]","optionsExchangeId->ExchangeId[0..]","specifiedExchangeId->ExchangeId[0..]","constituentExchangeId->ExchangeId[0..]","fundManager[0..1]"],
    "extend":"ExchangeTradedCalculatedPrice"
  },{
    "name":"partialCashSettlement",
    "extend":"anySimpleType"
  },{
    "name":"DateTimeList",
    "documentation":"List of DateTimes",
    "relationships":["dateTime[1..]"]
  },{
    "name":"BasketId",
    "extend":"Scheme"
  },{
    "name":"MetalPhysicalLeg",
    "documentation":"Physically settled leg of a physically settled Metal transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","metal->Metal[1..1]","deliveryPeriods->CommodityDeliveryPeriods[1..1]","deliveryConditions->MetalDelivery[1..1]","physicalQuantity->CommodityNotionalQuantity[1..1]","physicalQuantitySchedule->CommodityPhysicalQuantitySchedule[1..1]","totalPhysicalQuantity->UnitQuantity[0..1]","conversionFactor[0..1]"],
    "extend":"PhysicalForwardLeg"
  },{
    "name":"fxSwap"
  },{
    "name":"dividendAmount",
    "documentation":"Refers to one on the 3 Amounts",
    "characteristics":{
      "enumeration":[{
        "value":"RecordAmount"
      },{
        "value":"ExAmount"
      },{
        "value":"PaidAmount"
      },{
        "value":"AsSpecifiedInMasterConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"ExerciseEvent",
    "documentation":"A type defining the adjusted dates associated with a particular exercise event.",
    "relationships":["adjustedExerciseDate[1..1]","adjustedRelevantSwapEffectiveDate[1..1]","adjustedCashSettlementValuationDate[0..1]","adjustedCashSettlementPaymentDate[0..1]","adjustedExerciseFeePaymentDate[0..1]"]
  },{
    "name":"version",
    "extend":"integer"
  },{
    "name":"FxAverageRateObservation",
    "documentation":"A type that, for average rate options, is used to describe each specific observation date, as opposed to a parametric frequency of rate observations.",
    "relationships":["date[1..1]","averageRateWeightingFactor[1..1]","rate[0..1]"]
  },{
    "name":"EarlyTerminationProvision",
    "documentation":"A type defining an early termination provision for a swap. This early termination is at fair value, i.e. on termination the fair value of the product must be settled between the parties.",
    "relationships":["mandatoryEarlyTermination->MandatoryEarlyTermination[1..1]","mandatoryEarlyTerminationDateTenor->Period[1..1]","mandatoryEarlyTermination->MandatoryEarlyTermination[0..1]","optionalEarlyTermination->OptionalEarlyTermination[1..1]","optionalEarlyTerminationParameters->ExercisePeriod[1..1]","optionalEarlyTermination->OptionalEarlyTermination[0..1]","optionalEarlyTermination->OptionalEarlyTermination[1..1]","optionalEarlyTerminationParameters->ExercisePeriod[1..1]","optionalEarlyTermination->OptionalEarlyTermination[0..1]"]
  },{
    "name":"EntityName",
    "documentation":"The name of the reference entity. A free format string. FpML does not define usage rules for this element.",
    "extend":"Scheme"
  },{
    "name":"substitution",
    "extend":"anySimpleType"
  },{
    "name":"Reason",
    "documentation":"A type defining a content model for describing the nature and possible location of a error within a previous message.",
    "relationships":["reasonCode->ReasonCode[1..1]","location->ProblemLocation[0..1]","description[0..1]","validationRuleId->Validation[0..1]","additionalData->AdditionalData[0..]"]
  },{
    "name":"ExchangeTradedContract",
    "documentation":"An exchange traded derivative contract.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","relatedExchangeId->ExchangeId[0..]","optionsExchangeId->ExchangeId[0..]","specifiedExchangeId->ExchangeId[0..]","multiplier[0..1]","contractReference[0..1]","expirationDate->AdjustableOrRelativeDate[0..1]"],
    "extend":"ExchangeTraded"
  },{
    "name":"PeriodEnum",
    "documentation":"The specification of a time period",
    "characteristics":{
      "enumeration":[{
        "value":"D"
      },{
        "value":"W"
      },{
        "value":"M"
      },{
        "value":"Y"
      }]
    },
    "extend":"token"
  },{
    "name":"hedgingDisruption",
    "extend":"anySimpleType"
  },{
    "name":"ExercisePeriod",
    "documentation":"This defines the time interval to the start of the exercise period, i.e. the earliest exercise date, and the frequency of subsequent exercise dates (if any).",
    "relationships":["earliestExerciseDateTenor->Period[1..1]","exerciseFrequency->Period[0..1]"]
  },{
    "name":"varianceSwapTransactionSupplement"
  },{
    "name":"CoalTransportationEquipment",
    "documentation":"A scheme identifying the methods by which coal may be transported.",
    "extend":"Scheme"
  },{
    "name":"ReferenceBankId",
    "extend":"Scheme"
  },{
    "name":"EventStatusItem",
    "documentation":"A type used in event status enquiry messages which relates an event identifier to its current status value.",
    "relationships":["eventIdentifier->EventIdentifier[1..1]","status->EventStatus[1..1]"]
  },{
    "name":"ClassifiedPayment",
    "documentation":"A classified non negative payment.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","paymentDate->AdjustableOrRelativeDate[1..1]","paymentAmount->NonNegativeMoney[1..1]","paymentType->PaymentType[0..]"],
    "extend":"NonNegativePayment"
  },{
    "name":"StubPeriodTypeEnum",
    "documentation":"Element to define how to deal with a none standard calculation period within a swap stream.",
    "characteristics":{
      "enumeration":[{
        "value":"ShortInitial"
      },{
        "value":"ShortFinal"
      },{
        "value":"LongInitial"
      },{
        "value":"LongFinal"
      }]
    },
    "extend":"token"
  },{
    "name":"SettlementPeriodDurationEnum",
    "documentation":"Defines the Settlement Period Duration for an Electricity Transaction.",
    "characteristics":{
      "enumeration":[{
        "value":"2Hours"
      },{
        "value":"1Hour"
      },{
        "value":"30Minutes"
      },{
        "value":"15Minutes"
      }]
    },
    "extend":"token"
  },{
    "name":"precision",
    "extend":"integer"
  },{
    "name":"NonDeliverableSettlement",
    "documentation":"A type defining the parameters used when the reference currency of the swapStream is non-deliverable.",
    "relationships":["referenceCurrency->Currency[1..1]","fxFixingDate->FxFixingDate[1..1]","fxFixingSchedule->AdjustableDates[1..1]","settlementRateOption->SettlementRateOption[1..1]","priceSourceDisruption->PriceSourceDisruption[0..1]"]
  },{
    "name":"LimitedCreditDefaultSwap",
    "documentation":"A limited version of the CDS type used as an underlyer to CDS options in Transparency view, to avoid requiring product type etc.",
    "relationships":["generalTerms->GeneralTerms[1..1]","feeLeg->FeeLeg[1..1]","protectionTerms->ProtectionTerms[1..]"]
  },{
    "name":"VolatilityMatrix",
    "documentation":"A matrix of volatilities with dimension 0-3.",
    "relationships":["objectReference->AnyAssetReference[0..1]","valuationScenarioReference->ValuationScenarioReference[0..1]","baseDate->IdentifiedDate[1..1]","spotDate->IdentifiedDate[0..1]","inputDataDate->IdentifiedDate[0..1]","endDate->IdentifiedDate[0..1]","buildDateTime[0..1]","dataPoints->MultiDimensionalPricingData[1..1]","adjustment->ParametricAdjustment[0..]"],
    "extend":"PricingStructureValuation"
  },{
    "name":"Valuations",
    "documentation":"A set of valuation.",
    "relationships":["valuation->AssetValuation[1..1]","valuationReference->ValuationReference[1..1]"]
  },{
    "name":"X509IssuerName",
    "extend":"anySimpleType"
  },{
    "name":"CancelableProvision",
    "documentation":"A type defining the right of a party to cancel a swap transaction on the specified exercise dates. The provision is for 'walkaway' cancellation (i.e. the fair value of the swap is not paid). A fee payable on exercise can be specified.",
    "relationships":["buyerPartyReference->PartyReference[1..1]","buyerAccountReference->AccountReference[0..1]","sellerPartyReference->PartyReference[1..1]","sellerAccountReference->AccountReference[0..1]","exercise->Exercise[1..1]","exerciseNotice->ExerciseNotice[0..1]","followUpConfirmation[1..1]","cancelableProvisionAdjustedDates->CancelableProvisionAdjustedDates[0..1]","finalCalculationPeriodDateAdjustment->FinalCalculationPeriodDateAdjustment[0..]","initialFee->SimplePayment[0..1]"]
  },{
    "name":"quantityVariationAdjustment",
    "extend":"anySimpleType"
  },{
    "name":"Allocations",
    "relationships":["allocation->Allocation[1..]"]
  },{
    "name":"PgenCounter",
    "extend":"base64Binary"
  },{
    "name":"IDREFS"
  },{
    "name":"BasicQuotation",
    "documentation":"Some kind of numerical measure about an asset, eg. its NPV, together with characteristics of that measure.",
    "relationships":["value[0..1]","measureType->AssetMeasureType[0..1]","quoteUnits->PriceQuoteUnits[0..1]","side[0..1]","currency->Currency[0..1]","currencyType->ReportingCurrencyType[0..1]","timing->QuoteTiming[0..1]","businessCenter->BusinessCenter[1..1]","exchangeId->ExchangeId[1..1]","informationSource->InformationSource[0..]","pricingModel->PricingModel[0..1]","time[0..1]","valuationDate[0..1]","expiryTime[0..1]","cashflowType->CashflowType[0..1]"]
  },{
    "name":"principalExchangeAmount",
    "extend":"anySimpleType"
  },{
    "name":"MessageId",
    "documentation":"The data type use for message identifiers.",
    "extend":"Scheme"
  },{
    "name":"OptionExpiry",
    "documentation":"A structure describing an option expiring (i.e. passing its last exercise time and becoming worthless.)",
    "relationships":["eventIdentifier->BusinessEventIdentifier[0..]","tradeIdentifier->PartyTradeIdentifier[1..]","date[1..1]","time[1..1]","exerciseProcedure->ExerciseProcedureOption[0..1]"],
    "extend":"AbstractEvent"
  },{
    "name":"strikeFactor",
    "extend":"anySimpleType"
  },{
    "name":"failureToDeliver",
    "extend":"anySimpleType"
  },{
    "name":"interestLeg"
  },{
    "name":"CoalStandardQuality",
    "documentation":"The quality attributes of the coal to be delivered.",
    "relationships":["moisture->CoalAttributePercentage[0..1]","ash->CoalAttributePercentage[0..1]","sulfur->CoalAttributePercentage[0..1]","SO2->CoalAttributePercentage[0..1]","volatile->CoalAttributePercentage[0..1]","BTUperLB->CoalAttributeDecimal[0..1]","topSize->CoalAttributeDecimal[0..1]","finesPassingScreen->CoalAttributeDecimal[0..1]","grindability->CoalAttributeDecimal[0..1]","ashFusionTemperature->CoalAttributeDecimal[0..1]","initialDeformation->CoalAttributeDecimal[0..1]","softeningHeightWidth->CoalAttributeDecimal[0..1]","softeningHeightHalfWidth->CoalAttributeDecimal[0..1]","fluid->CoalAttributeDecimal[0..1]"]
  },{
    "name":"adjustedPaymentDate",
    "extend":"anySimpleType"
  },{
    "name":"CommodityDeliveryPeriods",
    "documentation":"The different options for specifying the Delivery Periods of a physical leg.",
    "relationships":["periods->AdjustableDates[1..1]","periodsSchedule->CommodityCalculationPeriodsSchedule[1..1]","calculationPeriodsReference->CalculationPeriodsReference[1..1]","calculationPeriodsScheduleReference->CalculationPeriodsScheduleReference[1..1]","calculationPeriodsDatesReference->CalculationPeriodsDatesReference[1..1]"]
  },{
    "name":"CommoditySettlementPeriodsNotionalQuantity",
    "documentation":"The notional quantity of electricity that applies to one or more groups of Settlement Periods.",
    "relationships":["quantityUnit->QuantityUnit[1..1]","quantityFrequency->CommodityQuantityFrequency[1..1]","quantity[1..1]","settlementPeriodsReference->SettlementPeriodsReference[1..]"],
    "extend":"CommodityNotionalQuantity"
  },{
    "name":"StrategyFeature",
    "documentation":"A type for definining equity option simple strike or calendar spread strategy features.",
    "relationships":["strikeSpread->StrikeSpread[1..1]","calendarSpread->CalendarSpread[1..1]"]
  },{
    "name":"CreditCurve",
    "documentation":"A generic credit curve definition.",
    "relationships":["name[0..1]","currency->Currency[0..1]","referenceEntity->LegalEntity[1..1]","creditEntityReference->LegalEntityReference[1..1]","creditEvents->CreditEvents[0..1]","seniority->CreditSeniority[1..1]","secured[1..1]","obligationCurrency->Currency[1..1]","obligations->Obligations[0..1]","deliverableObligations->DeliverableObligations[0..1]"],
    "extend":"PricingStructure"
  },{
    "name":"derivativeFormula",
    "extend":"anySimpleType"
  },{
    "name":"SinglePayment",
    "relationships":["adjustablePaymentDate[1..1]","adjustedPaymentDate[0..1]","fixedAmount->Money[1..1]"],
    "extend":"PaymentBase"
  },{
    "name":"TradeTimestamp",
    "documentation":"A generic trade timestamp",
    "relationships":["type->TimestampTypeScheme[1..1]","value[1..1]"]
  },{
    "name":"ElectricityPhysicalLeg",
    "documentation":"Physically settled leg of a physically settled electricity transaction.",
    "relationships":["payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","deliveryPeriods->CommodityDeliveryPeriods[1..1]","settlementPeriods->SettlementPeriods[1..]","settlementPeriodsSchedule->SettlementPeriodsSchedule[0..1]","loadType[0..1]","electricity->ElectricityProduct[1..1]","deliveryConditions->ElectricityDelivery[1..1]","deliveryQuantity->ElectricityPhysicalQuantity[1..1]"],
    "extend":"PhysicalSwapLeg"
  },{
    "name":"language",
    "extend":"token"
  },{
    "name":"MasterAgreement",
    "documentation":"An entity for defining the agreement executed between the parties and intended to govern all OTC derivatives transactions between those parties.",
    "relationships":["masterAgreementType->MasterAgreementType[1..1]","masterAgreementVersion->MasterAgreementVersion[0..1]","masterAgreementDate[0..1]"]
  },{
    "name":"bondOption"
  },{
    "name":"simpleCreditDefaultSwap"
  },{
    "name":"Commodity",
    "documentation":"A type describing a commodity underlying asset.",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","commodityBase->CommodityBase[1..1]","commodityDetails->CommodityDetails[1..1]","unit->QuantityUnit[1..1]","currency->Currency[1..1]","exchangeId->ExchangeId[1..1]","publication->CommodityInformationSource[1..1]","specifiedPrice[1..1]","deliveryDates[1..1]","deliveryDate->AdjustableDate[1..1]","deliveryDateYearMonth[1..1]","deliveryDateRollConvention->Offset[0..1]","multiplier[0..1]"],
    "extend":"IdentifiedAsset"
  },{
    "name":"adjustedDate",
    "extend":"anySimpleType"
  },{
    "name":"remainingNumberOfUnits",
    "extend":"anySimpleType"
  },{
    "name":"notSubordinated",
    "extend":"anySimpleType"
  },{
    "name":"interestShortfallCap",
    "documentation":"The specification of the interest shortfall cap, applicable to mortgage derivatives.",
    "characteristics":{
      "enumeration":[{
        "value":"Fixed"
      },{
        "value":"Variable"
      }]
    },
    "extend":"token"
  },{
    "name":"DirectionalLegUnderlyerValuation",
    "documentation":"A type describing return which is driven by a Variance Calculation.",
    "relationships":["legIdentifier->LegIdentifier[0..]","payerPartyReference->PartyReference[1..1]","payerAccountReference->AccountReference[0..1]","receiverPartyReference->PartyReference[1..1]","receiverAccountReference->AccountReference[0..1]","effectiveDate->AdjustableOrRelativeDate[0..1]","terminationDate->AdjustableOrRelativeDate[0..1]","underlyer->Underlyer[1..1]","settlementType[0..1]","settlementDate->AdjustableOrRelativeDate[0..1]","settlementAmount->Money[1..1]","settlementCurrency->Currency[1..1]","fxFeature->FxFeature[0..1]","valuation->EquityValuation[1..1]"],
    "extend":"DirectionalLegUnderlyer"
  },{
    "name":"InflationRateCalculation",
    "documentation":"A type defining the components specifiying an Inflation Rate Calculation",
    "relationships":["floatingRateIndex->FloatingRateIndex[1..1]","indexTenor->Period[0..1]","floatingRateMultiplierSchedule->Schedule[0..1]","spreadSchedule->SpreadSchedule[0..]","rateTreatment[0..1]","capRateSchedule->StrikeSchedule[0..]","floorRateSchedule->StrikeSchedule[0..]","initialRate[0..1]","finalRateRounding->Rounding[0..1]","averagingMethod[0..1]","negativeInterestRateTreatment[0..1]","inflationLag->Offset[1..1]","indexSource->RateSourcePage[1..1]","mainPublication->MainPublication[0..1]","interpolationMethod->InterpolationMethod[1..1]","initialIndexLevel[0..1]","fallbackBondApplicable[1..1]"],
    "extend":"FloatingRateCalculation"
  },{
    "name":"SwapCurveValuation",
    "documentation":"A complex type to specify the amount to be paid by the buyer of the option if the option is exercised prior to the Early Call Date (Typically applicable to the convertible bond options).",
    "relationships":["floatingRateIndex->FloatingRateIndex[1..1]","indexTenor->Period[0..1]","spread[1..1]","side[0..1]"]
  },{
    "name":"ConsentGranted",
    "documentation":"A message indicating that the sender grants consent for the recipient to perform the requested action.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","portfolioReference->PortfolioReferenceBase[1..1]","originatingEvent->OriginatingEvent[0..1]","trade->Trade[1..1]","amendment->TradeAmendmentContent[1..1]","increase->TradeNotionalChange[1..1]","terminatingEvent->TerminatingEvent[0..1]","termination->TradeNotionalChange[1..1]","novation->TradeNovationContent[1..1]","optionExercise->OptionExercise[1..1]","optionExpiry->OptionExpiry[1..]","deClear->DeClear[1..1]","withdrawal->Withdrawal[1..1]","additionalEvent->AdditionalEvent[1..1]","tradeReferenceInformation->TradeReferenceInformation[1..1]","party->Party[1..]","account->Account[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"requestAllocationRetracted"
  },{
    "name":"commoditySwapLeg"
  },{
    "name":"IndexAnnexSource",
    "extend":"Scheme"
  },{
    "name":"requestConsent"
  },{
    "name":"NonNegativeDecimal",
    "documentation":"A type defining a number specified as non negative decimal greater than 0 inclusive.",
    "extend":"decimal"
  },{
    "name":"StreetAddress",
    "documentation":"A type that describes the set of street and building number information that identifies a postal address within a city.",
    "relationships":["streetLine[1..]"]
  },{
    "name":"ResourceType",
    "documentation":"The data type used for describing the type or purpose of a resource, e.g. \"Confirmation\".",
    "extend":"Scheme"
  },{
    "name":"CoalAttributeDecimal",
    "documentation":"The different options for specifying the attributes of a coal quality measure as a decimal value.",
    "relationships":["standardContent[1..1]","rejectionLimit[0..1]","rejectionLimit[1..1]"]
  },{
    "name":"AllocationRefused",
    "documentation":"A message indicating that a request to allocate a trade has been refused by the sender.",
    "relationships":["header->ResponseMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","blockTradeIdentifier->TradeIdentifier[0..1]","allocations->Allocations[0..1]","party->Party[1..]","account->Account[0..]","reason->Reason[0..]"],
    "extend":"ResponseMessage"
  },{
    "name":"ReferenceInformation",
    "relationships":["referenceEntity->LegalEntity[1..1]","referenceObligation->ReferenceObligation[1..]","noReferenceObligation[1..1]","unknownReferenceObligation[1..1]","allGuarantees[0..1]","referencePrice[0..1]","referencePolicy[0..1]","securedList[0..1]"]
  },{
    "name":"DividendAmountTypeEnum",
    "documentation":"Refers to one on the 3 Amounts",
    "characteristics":{
      "enumeration":[{
        "value":"RecordAmount"
      },{
        "value":"ExAmount"
      },{
        "value":"PaidAmount"
      },{
        "value":"AsSpecifiedInMasterConfirmation"
      }]
    },
    "extend":"token"
  },{
    "name":"fxCurveValuation"
  },{
    "name":"rollConvention",
    "documentation":"The convention for determining the sequence of calculation period end dates. It is used in conjunction with a specified frequency and the regular period start date of a calculation period, e.g. semi-annual IMM roll dates.",
    "characteristics":{
      "enumeration":[{
        "value":"EOM"
      },{
        "value":"FRN"
      },{
        "value":"IMM"
      },{
        "value":"IMMCAD"
      },{
        "value":"IMMAUD"
      },{
        "value":"IMMNZD"
      },{
        "value":"SFE"
      },{
        "value":"NONE"
      },{
        "value":"TBILL"
      },{
        "value":"1"
      },{
        "value":"2"
      },{
        "value":"3"
      },{
        "value":"4"
      },{
        "value":"5"
      },{
        "value":"6"
      },{
        "value":"7"
      },{
        "value":"8"
      },{
        "value":"9"
      },{
        "value":"10"
      },{
        "value":"11"
      },{
        "value":"12"
      },{
        "value":"13"
      },{
        "value":"14"
      },{
        "value":"15"
      },{
        "value":"16"
      },{
        "value":"17"
      },{
        "value":"18"
      },{
        "value":"19"
      },{
        "value":"20"
      },{
        "value":"21"
      },{
        "value":"22"
      },{
        "value":"23"
      },{
        "value":"24"
      },{
        "value":"25"
      },{
        "value":"26"
      },{
        "value":"27"
      },{
        "value":"28"
      },{
        "value":"29"
      },{
        "value":"30"
      },{
        "value":"MON"
      },{
        "value":"TUE"
      },{
        "value":"WED"
      },{
        "value":"THU"
      },{
        "value":"FRI"
      },{
        "value":"SAT"
      },{
        "value":"SUN"
      }]
    },
    "extend":"token"
  },{
    "name":"firstName",
    "extend":"string"
  },{
    "name":"RequestMessage",
    "documentation":"A type defining the content model for a request message that can be subsequently corrected or retracted.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]"],
    "extend":"Message"
  },{
    "name":"initialValue",
    "extend":"anySimpleType"
  },{
    "name":"strikePercentage",
    "extend":"anySimpleType"
  },{
    "name":"ScheduledDates",
    "documentation":"A list of dates (cash flows, resets, etc.) that are relevant for this structure, e.g. next cash flow, last reset, etc. Provides a way to list upcoming or recent servicing dates related to this trade stream in a way that is simpler and more flexible than the FpML \"cashflows\" structure.",
    "relationships":["scheduledDate->ScheduledDate[1..]"]
  },{
    "name":"floatingLeg"
  },{
    "name":"RelativeDateSequence",
    "documentation":"A type describing a date when this date is defined in reference to another date through one or several date offsets.",
    "relationships":["dateRelativeTo->DateReference[1..1]","dateOffset->DateOffset[1..]","businessCentersReference->BusinessCentersReference[1..1]","businessCenters->BusinessCenters[1..1]"]
  },{
    "name":"OrganizationCharacteristic",
    "documentation":"A characteristic of an organization used in declaring an end-user exception.",
    "extend":"Scheme"
  },{
    "name":"MutualFund",
    "relationships":["instrumentId->InstrumentId[1..]","description[0..1]","currency->IdentifiedCurrency[0..1]","exchangeId->ExchangeId[0..1]","clearanceSystem->ClearanceSystem[0..1]","definition->ProductReference[0..1]","openEndedFund[0..1]","fundManager[0..1]"],
    "extend":"UnderlyingAsset"
  },{
    "name":"TradeChangeAdviceRetracted",
    "documentation":"Defines the structure for a message retracting a prior change advice.",
    "relationships":["header->RequestMessageHeader[1..1]","validation->Validation[0..]","parentCorrelationId->CorrelationId[0..1]","correlationId->CorrelationId[1..1]","sequenceNumber[1..1]","onBehalfOf->OnBehalfOf[1..1]","tradeIdentifier->PartyTradeIdentifier[1..]","change->TradeChangeContent[0..1]","paymentDetails->PaymentDetails[0..]","party->Party[1..]","account->Account[0..]"],
    "extend":"NonCorrectableRequestMessage"
  },{
    "name":"EnvironmentalTrackingSystem",
    "documentation":"For US Emissions Allowance Transactions. A system where all electronic certificates are stored and emissions are tracked.",
    "extend":"Scheme"
  },{
    "name":"returnSwap"
  },{
    "name":"ExerciseProcedureOption",
    "documentation":"A type describing how notice of exercise should be given. This can be either manual or automatic.",
    "relationships":["manualExercise->Empty[1..1]","automaticExercise->Empty[1..1]"]
  },{
    "name":"failureToPay"
  },{
    "name":"ReasonCode",
    "documentation":"Defines a list of machine interpretable error codes.",
    "extend":"Scheme"
  },{
    "name":"byte",
    "extend":"short"
  },{
    "name":"FxSwap",
    "documentation":"A type defining either a spot/forward or forward/forward FX swap transaction.",
    "relationships":["primaryAssetClass->AssetClass[0..1]","secondaryAssetClass->AssetClass[0..]","productType->ProductType[0..]","productId->ProductId[0..]","assetClass->AssetClass[0..]","nearLeg->FxSwapLeg[1..1]","farLeg->FxSwapLeg[1..1]"],
    "extend":"Product"
  },{
    "name":"MakeWholeAmount",
    "documentation":"A complex type to specify the amount to be paid by the buyer of the option if the option is exercised prior to the Early Call Date (Typically applicable to the convertible bond options).",
    "relationships":["floatingRateIndex->FloatingRateIndex[1..1]","indexTenor->Period[0..1]","spread[1..1]","side[0..1]","interpolationMethod->InterpolationMethod[0..1]","earlyCallDate->IdentifiedDate[1..1]"],
    "extend":"SwapCurveValuation"
  },{
    "name":"SettlementPeriodsReference",
    "documentation":"Allows a set of Settlement Periods to reference one already defined elsewhere in the trade.",
    "extend":"Reference"
  },{
    "name":"FPVFinalPriceElectionFallbackEnum",
    "documentation":"Specifies the fallback provisions in respect to the applicable Futures Price Valuation.",
    "characteristics":{
      "enumeration":[{
        "value":"FPVClose"
      },{
        "value":"FPVHedgeExecution"
      }]
    },
    "extend":"token"
  },{
    "name":"PGPKeyPacket",
    "extend":"anySimpleType"
  },{
    "name":"QuotedCurrencyPair",
    "documentation":"A type that describes the composition of a rate that has been quoted or is to be quoted. This includes the two currencies and the quotation relationship between the two currencies and is used as a building block throughout the FX specification.",
    "relationships":["currency1->Currency[1..1]","currency2->Currency[1..1]","quoteBasis[1..1]"]
  },{
    "name":"maximumNumberOfDaysOfDisruption",
    "extend":"integer"
  },{
    "name":"writedown",
    "extend":"anySimpleType"
  },{
    "name":"Quotation",
    "documentation":"Some kind of numerical measure about an asset, eg. its NPV, together with characteristics of that measure, together with optional sensitivities.",
    "relationships":["value[0..1]","measureType->AssetMeasureType[0..1]","quoteUnits->PriceQuoteUnits[0..1]","side[0..1]","currency->Currency[0..1]","currencyType->ReportingCurrencyType[0..1]","timing->QuoteTiming[0..1]","businessCenter->BusinessCenter[1..1]","exchangeId->ExchangeId[1..1]","informationSource->InformationSource[0..]","pricingModel->PricingModel[0..1]","time[0..1]","valuationDate[0..1]","expiryTime[0..1]","cashflowType->CashflowType[0..1]","sensitivitySet->SensitivitySet[0..]"]
  },{
    "name":"QuotationCharacteristics",
    "documentation":"A type representing a set of characteristics that describe a quotation.",
    "relationships":["measureType->AssetMeasureType[0..1]","quoteUnits->PriceQuoteUnits[0..1]","side[0..1]","currency->Currency[0..1]","currencyType->ReportingCurrencyType[0..1]","timing->QuoteTiming[0..1]","businessCenter->BusinessCenter[1..1]","exchangeId->ExchangeId[1..1]","informationSource->InformationSource[0..]","pricingModel->PricingModel[0..1]","time[0..1]","valuationDate[0..1]","expiryTime[0..1]","cashflowType->CashflowType[0..1]"]
  },{
    "name":"PerturbationType",
    "documentation":"The type of perturbation applied to compute a derivative perturbatively.",
    "extend":"Scheme"
  },{
    "name":"multiplier",
    "documentation":"A type defining a number specified as positive decimal greater than 0 exclusive.",
    "extend":"decimal"
  },{
    "name":"OilDelivery",
    "documentation":"The physical delivery conditions for an oil product.",
    "relationships":["pipeline->OilPipelineDelivery[1..1]","transfer->OilTransferDelivery[1..1]","importerOfRecord->PartyReference[0..1]","absoluteTolerance->AbsoluteTolerance[1..1]","percentageTolerance->PercentageTolerance[1..1]"]
  },{
    "name":"fullFaithAndCreditObLiability",
    "extend":"anySimpleType"
  },{
    "name":"middleName",
    "extend":"string"
  },{
    "name":"InterpolationMethod",
    "documentation":"The type of interpolation used.",
    "extend":"Scheme"
  },{
    "name":"PhysicalSettlementTerms",
    "relationships":["settlementCurrency->Currency[0..1]","physicalSettlementPeriod->PhysicalSettlementPeriod[0..1]","deliverableObligations->DeliverableObligations[0..1]","escrow[0..1]","sixtyBusinessDaySettlementCap[0..1]"],
    "extend":"SettlementTerms"
  }]
}